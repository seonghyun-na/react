[{"C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\index.js":"1","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\App.js":"2","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Wbnx2.js":"3","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Wbnx3.js":"4","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Sublist.js":"5","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Wbnx1.js":"6","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Tabledata.js":"7","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Wbnx5.js":"8","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Wbnx4.js":"9","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Menu.js":"10","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Kcf7.js":"11","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Inventorty\\Sites\\Map.js":"12","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Inventorty\\Sites\\Test.js":"13","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Inventorty\\Sites\\InfoMap.js":"14","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Inventorty\\Sites\\Map2.js":"15","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Inventorty\\Sites\\InfoMap2.js":"16","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Inventorty\\Sites\\Testmap.js":"17","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Inventorty\\Sites\\Example.js":"18","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Inventorty\\Sites\\Googlemap.js":"19"},{"size":185,"mtime":1639440363682,"results":"20","hashOfConfig":"21"},{"size":1534,"mtime":1639440363682,"results":"22","hashOfConfig":"21"},{"size":21753,"mtime":1639440363682,"results":"23","hashOfConfig":"21"},{"size":21539,"mtime":1639440363682,"results":"24","hashOfConfig":"21"},{"size":820,"mtime":1639440363682,"results":"25","hashOfConfig":"21"},{"size":22001,"mtime":1639440363682,"results":"26","hashOfConfig":"21"},{"size":578,"mtime":1635830908411,"results":"27","hashOfConfig":"28"},{"size":21712,"mtime":1639440363682,"results":"29","hashOfConfig":"21"},{"size":21542,"mtime":1639440363682,"results":"30","hashOfConfig":"21"},{"size":11020,"mtime":1639440363682,"results":"31","hashOfConfig":"21"},{"size":21624,"mtime":1639440363682,"results":"32","hashOfConfig":"21"},{"size":8987,"mtime":1639634468974,"results":"33","hashOfConfig":"21"},{"size":706,"mtime":1639440363682,"results":"34","hashOfConfig":"21"},{"size":28486,"mtime":1639634468974,"results":"35","hashOfConfig":"21"},{"size":14601,"mtime":1639533156637,"results":"36","hashOfConfig":"21"},{"size":39437,"mtime":1639440363682,"results":"37","hashOfConfig":"21"},{"size":11702,"mtime":1639630057292,"results":"38","hashOfConfig":"21"},{"size":4575,"mtime":1639440363682,"results":"39","hashOfConfig":"21"},{"size":14693,"mtime":1639630057292,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1i9ba2q",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"ofqjac",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":69,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"43"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"43"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},"C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\index.js",[],["95","96"],"C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\App.js",["97"],"import React from 'react';\r\nimport './App.css';\r\nimport SubList from './Component/Sublist';\r\nimport Wbnx1 from './Component/Wbnx1';\r\nimport Wbnx2 from './Component/Wbnx2';\r\nimport Wbnx3 from './Component/Wbnx3';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Wbnx5 from './Component/Wbnx5';\r\nimport Wbnx4 from './Component/Wbnx4';\r\nimport Menu from './Menu';\r\nimport './Menu.css';\r\nimport Kcf7 from './Component/Kcf7';\r\nimport Map from './Component/Inventorty/Sites/Map';\r\nimport Test from './Component/Inventorty/Sites/Test';\r\nimport Map2 from './Component/Inventorty/Sites/Map2';\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Menu/>\r\n        <SubList/>\r\n        <Switch>\r\n          <Route \r\n            path=\"/Wbnx1\">\r\n            <Wbnx1/>\r\n          </Route>\r\n          <Route \r\n            path=\"/Wbnx2\">\r\n            <Wbnx2/>\r\n          </Route>\r\n          <Route \r\n            path=\"/Wbnx3\">\r\n            <Wbnx3/>\r\n          </Route>\r\n          <Route \r\n            path=\"/Wbnx4\">\r\n            <Wbnx4/>\r\n          </Route>\r\n          <Route \r\n            path=\"/Wbnx5\">\r\n            <Wbnx5/>\r\n          </Route>\r\n          <Route \r\n            path=\"/Kcf7\">\r\n            <Kcf7/>\r\n          </Route>\r\n          <Route \r\n            path=\"/Map\">\r\n            <Map />\r\n          </Route>\r\n          <Route \r\n            path=\"/Map2\">\r\n            <Map2 />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Wbnx2.js",["98","99","100","101","102","103","104"],"import React,{ Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nclass Wbnx2 extends Component {\r\n    state={\r\n        data : [],\r\n        result: [],\r\n        isLoading: true,\r\n        errcode: 'Loading...',\r\n        timestamp: [],\r\n    };\r\n\r\n    getdata = async () =>{\r\n        await axios.get('http://somweb.cf:8000/wn-t1-x2-r0')\r\n        .then((data) => {\r\n            const mydata = data.data.data;\r\n            return this.setState({data:mydata, isLoading: false});\r\n        }).catch(()=>{\r\n            this.setState({errcode:'NOT FOUND FILE!'});\r\n        })\r\n    }\r\n    gettimer = () =>{\r\n\r\n        let time = new Date();\r\n        let years = time.getFullYear();\r\n        let month = time.getMonth();\r\n        let date = time.getDate();\r\n        let hours = time.getHours();\r\n        let minutes = time.getMinutes();\r\n        let seconds = time.getSeconds();\r\n\r\n        const result = `Requested at : ${hours < 10 ? `0${hours}` : `${hours}`}:${minutes < 10 ? `0${minutes}` : `${minutes}`}:${seconds < 10 ? `0${seconds}` : `${seconds}`}, ${years}-${month+1}-${date}`;\r\n\r\n        return this.setState({result:result});\r\n    }\r\n    getstamp = () =>{\r\n        axios.get('http://somweb.cf:8000/wbn-timestamp').then(response=>{\r\n            const x = response.data.data;\r\n            console.log('최신 데이터 시간을 업데이트하였습니다.');\r\n            return this.setState({timestamp : x});\r\n        }).catch(()=>{\r\n            this.setState({errcode:'NOT FOUND FILE!'});\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getdata();\r\n        this.gettimer();\r\n        this.getstamp();\r\n    }\r\n    renderbtn = () => {\r\n        this.getdata();\r\n        this.gettimer();\r\n        this.getstamp();\r\n    }\r\n    render() {\r\n        const {data, result,isLoading, errcode, timestamp} = this.state;\r\n        const tt = timestamp.map(data=>{\r\n            if(data.offset === 1){\r\n                const y = data.timestamp;\r\n                return (<p className=\"xx\">Referenced Time {y}</p>);\r\n            }\r\n        });\r\n\r\n        const chartall = data.filter((value)=>{\r\n            return value.offset;\r\n        })\r\n        const chartoffset = chartall.map((value)=>{\r\n            return value.offset;\r\n        })\r\n        const chartoffset24 = data.filter((value)=>{\r\n            return value.offset < 25;\r\n        })\r\n        const chartName24 = chartoffset24.map(value =>{\r\n            return value.offset;\r\n        })\r\n\r\n        const chartspeed_in = data.map((value)=>{\r\n            return value.speed_in;\r\n        });\r\n        const chartspeed_out = data.map((value)=>{\r\n            return value.speed_out;\r\n        });\r\n        const chartspeed_total = data.map((value)=>{\r\n            return value.speed_total;\r\n        });\r\n\r\n        /*console.log(chartspeed_out);\r\n        console.log(chartspeed_total);*/\r\n\r\n        const sum = function(x,y){\r\n            return x + y;\r\n        };\r\n\r\n        const square = function(x){\r\n            return x * x;\r\n        };\r\n\r\n        const mean = chartspeed_total.reduce(sum, 0)/chartspeed_total.length;\r\n        const deviations = chartspeed_total.map(function(x){\r\n            return x-mean;\r\n        });\r\n\r\n        const stddev = Math.sqrt(deviations.map(square).reduce(sum, 0)/(chartspeed_total.length-1));\r\n        const stddev2 = new Array(24).fill(stddev);\r\n        \r\n        const meanValue = mean.toFixed(2);\r\n        const stddevValue = stddev.toFixed(2);\r\n        console.log(mean);\r\n        console.log(meanValue);\r\n        console.log(stddev);\r\n        console.log(stddevValue);\r\n\r\n        let min = 0;\r\n        let max = 0;\r\n\r\n        const x = chartspeed_total.map((value)=>{\r\n            if(value < min){\r\n                min = value;\r\n                console.log(`현재 min의 값은 ${min}입니다.`)\r\n            }else if(value > max){\r\n                max = value;\r\n                console.log(`현재 max의 값은 ${max}입니다.`)\r\n            }else{\r\n                console.log(value)\r\n            }\r\n        })\r\n\r\n        let chaptertotal = [];\r\n        let chapter1 = [];\r\n        let chapter2 = [];\r\n        let chapter3 = [];\r\n        let chapter4 = [];\r\n        let chapter5 = [];\r\n        let chapter6 = [];\r\n        let chapter7 = [];\r\n        let chapter8 = [];\r\n        let chapter9 = [];\r\n        let chapter10 = [];\r\n        let chapter11 = [];\r\n        let chapter12 = [];\r\n        let chapter13 = [];\r\n        let chapter14 = [];\r\n        let chapter15 = [];\r\n        let chapter16 = [];\r\n        let chapter17 = [];\r\n        let chapter18 = [];\r\n        let chapter19 = [];\r\n        let chapter20 = [];\r\n        let chapter21 = [];\r\n        let chapter22 = [];\r\n        let chapter23 = [];\r\n        let chapter24 = [];\r\n\r\n        const Linedata = chartspeed_total.map((value)=>{\r\n            if(min <= value && min+1 > value){\r\n                chapter1.push({value : value});\r\n            }else if(min+1 <= value && min+2 > value){\r\n                chapter2.push(value);\r\n            }else if(min+2 <= value && min+3 > value){\r\n                chapter3.push(value);\r\n            }else if(min+3 <= value && min+4 > value){\r\n                chapter4.push(value);\r\n            }else if(min+5 <= value && min+6 > value){\r\n                chapter5.push(value);\r\n            }else if(min+6<= value && min+7 > value){\r\n                chapter6.push(value);\r\n            }else if(min+7 <= value && min+8 > value){\r\n                chapter7.push(value);\r\n            }else if(min+8 <= value && min+9 > value){\r\n                chapter8.push(value);\r\n            }else if(min+9 <= value && min+10 > value){\r\n                chapter9.push(value);\r\n            }else if(min+10 <= value && min+11 > value){\r\n                chapter10.push(value);\r\n            }else if(min+11<= value && min+12 > value){\r\n                chapter11.push(value);\r\n            }else if(min+12 <= value && min+13 > value){\r\n                chapter12.push(value);\r\n            }else if(min+13 <= value && min+14 > value){\r\n                chapter13.push(value);\r\n            }else if(min+14 <= value && min+15 > value){\r\n                chapter14.push(value);\r\n            }else if(min+15 <= value && min+16 > value){\r\n                chapter15.push(value);\r\n            }else if(min+16<= value && min+17 > value){\r\n                chapter16.push(value);\r\n            }else if(min+17 <= value && min+18 > value){\r\n                chapter17.push(value);\r\n            }else if(min+18 <= value && min+19 > value){\r\n                chapter18.push(value);\r\n            }else if(min+19 <= value && min+20 > value){\r\n                chapter19.push(value);\r\n            }else if(min+20 <= value && min+21 > value){\r\n                chapter20.push(value);\r\n            }else if(min+21<= value && min+22 > value){\r\n                chapter21.push(value);\r\n            }else if(min+22 <= value && min+23 > value){\r\n                chapter22.push(value);\r\n            }else if(min+23 <= value && min+24 > value){\r\n                chapter23.push(value);\r\n            }else if(min+24 <= value && max > value){\r\n                chapter24.push(value);\r\n            }else{\r\n                console.log(Error);\r\n            }\r\n        });\r\n\r\n        /*console.log(chapter1);\r\n        console.log(chapter2);\r\n        console.log(chapter3);\r\n        console.log(chapter4);\r\n        console.log(chapter5);*/\r\n\r\n        const totalLength = chartoffset.length;\r\n\r\n        chaptertotal.push(chapter1.length / totalLength *100);\r\n        chaptertotal.push(chapter2.length / totalLength *100);\r\n        chaptertotal.push(chapter3.length / totalLength *100);\r\n        chaptertotal.push(chapter4.length / totalLength *100);\r\n        chaptertotal.push(chapter5.length / totalLength *100);\r\n        chaptertotal.push(chapter6.length / totalLength *100);\r\n        chaptertotal.push(chapter7.length / totalLength *100);\r\n        chaptertotal.push(chapter8.length / totalLength *100);\r\n        chaptertotal.push(chapter9.length / totalLength *100);\r\n        chaptertotal.push(chapter10.length / totalLength *100);\r\n        chaptertotal.push(chapter11.length / totalLength *100);\r\n        chaptertotal.push(chapter12.length / totalLength *100);\r\n        chaptertotal.push(chapter13.length / totalLength *100);\r\n        chaptertotal.push(chapter14.length / totalLength *100);\r\n        chaptertotal.push(chapter15.length / totalLength *100);\r\n        chaptertotal.push(chapter16.length / totalLength *100);\r\n        chaptertotal.push(chapter17.length / totalLength *100);\r\n        chaptertotal.push(chapter18.length / totalLength *100);\r\n        chaptertotal.push(chapter19.length / totalLength *100);\r\n        chaptertotal.push(chapter20.length / totalLength *100);\r\n        chaptertotal.push(chapter21.length / totalLength *100);\r\n        chaptertotal.push(chapter22.length / totalLength *100);\r\n        chaptertotal.push(chapter23.length / totalLength *100);\r\n        chaptertotal.push(chapter24.length / totalLength *100);\r\n\r\n        \r\n        //console.log(chaptertotal);\r\n\r\n        const linedata = {\r\n            labels:chartoffset,\r\n            datasets: [\r\n                {\r\n                    type : 'bar',\r\n                    label:'In',\r\n                    data: chartspeed_in,\r\n                    fill: true,\r\n                    backgroundColor:'#66bb6a',\r\n                    borderColor:'#66bb6a'\r\n                },\r\n                {\r\n                    type : 'bar',\r\n                    label:'Out',\r\n                    data: chartspeed_out,\r\n                    backgroundColor: 'rgba(75,192,192)',\r\n                    borderColor: 'rgba(75,192,192)',\r\n                },\r\n                {\r\n                    type: 'line',\r\n                    label: 'Total',\r\n                    data : chartspeed_total,\r\n                    backgroundColor : 'pink',\r\n                    borderColor : 'pink',\r\n                }\r\n            ]\r\n        };\r\n\r\n        /*const linedata2 = {\r\n            labels:chartoffset,\r\n            datasets: [\r\n                {\r\n                    type : 'line',\r\n                    label:'Total',\r\n                    data: chartspeed_total,\r\n                    backgroundColor: 'rgba(75,192,192)',\r\n                    borderColor: 'rgba(75,192,192)',\r\n                }\r\n            ]\r\n        };*/\r\n\r\n        const linedata3 = {\r\n            labels:chartName24,\r\n            datasets: [\r\n                {\r\n                    type : 'bar',\r\n                    label:'Frequency_bar',\r\n                    data: chaptertotal,\r\n                    fill: true,\r\n                    backgroundColor:'rgba(75,192,192)',\r\n                    borderColor:'rgba(75,192,192)'\r\n                },\r\n                {\r\n                    type : 'line',\r\n                    label:'Frequency_line',\r\n                    data: chaptertotal,\r\n                    backgroundColor: '#66bb6a',\r\n                    borderColor: '#66bb6a',\r\n                }\r\n            ]\r\n        };\r\n\r\n        return (\r\n            <div className=\"table\">\r\n                {isLoading ? <div className=\"loader\">\r\n                    <span className=\"loader__text\">{errcode}</span>\r\n                </div> :\r\n                (\r\n                    <div className=\"container\">\r\n                        <span className=\"spantitle\">\r\n                            <div className=\"titletotal\">\r\n                                <span className=\"title1 pstyle\">Network Node Name:</span>\r\n                                <span className=\"title2 pstyle\">WN-T1-X2(R0)</span>\r\n                            </div>\r\n                            {tt}\r\n                            <div className=\"itembox\">\r\n                                <p className=\"result\">{result}</p>\r\n                                <button onClick={this.renderbtn}>Next</button>\r\n                            </div>\r\n                        </span>\r\n\r\n                        <div className=\"content\">\r\n                            <div className=\"chart chartlayout\">\r\n                                <p>Bandwidth Measurement Result(In, Out, Total)</p>\r\n                                <Bar \r\n                                    data={linedata}\r\n                                    width={1050}\r\n                                    height={500}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                x : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Time Offset(5 mins )'\r\n                                                    }\r\n                                                },\r\n                                                y : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Mbps'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />\r\n                                </div>\r\n                                {/*<div className=\"chart2 chartlayout\">\r\n                                <p>Total-BandWidth Distribution</p>\r\n                                <Bar \r\n                                    data={linedata2}\r\n                                    width={550}\r\n                                    height={500}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                x : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Time Offset(5 mins )'\r\n                                                    }\r\n                                                },\r\n                                                y : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Mbps'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />\r\n                                </div>*/}\r\n                                <div className=\"chart3 chartlayout\">\r\n                                <p>Total Bandwidth Distribution</p>\r\n                                <Bar \r\n                                    data={linedata3}\r\n                                    width={700}\r\n                                    height={500}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                x : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Bandwidth ( Mbps )'\r\n                                                    }\r\n                                                },\r\n                                                y : {\r\n                                                    ticks : {\r\n                                                        max : 100,\r\n                                                        min : 0,\r\n                                                        stepSize : 5,\r\n                                                        //maxTicksLimit: 2,\r\n                                                    },\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Frequency(%)'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />\r\n                                <p className=\"footertitle\">[Average : {meanValue} , Deviation : {stddevValue}]</p>\r\n                                </div>\r\n                            {/*<table className=\"tableset\">\r\n                                <thead className=\"headstyle\">\r\n                                    <tr>\r\n                                        <td>Time</td>\r\n                                        <td colSpan=\"3\">BandWidth(Mbps)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>offset</td>\r\n                                        <td>In</td>\r\n                                        <td>Out</td>\r\n                                        <td>Total</td>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody className='size'>\r\n                                    {\r\n                                        data12.map(value=>{\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{value.offset}</td>\r\n                                                    <td>{value.speed_in}</td>\r\n                                                    <td>{value.speed_out}</td>\r\n                                                    <td>{value.speed_total}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <table className=\"tableset\">\r\n                                <thead className=\"headstyle\">\r\n                                    <tr>\r\n                                        <td>Time</td>\r\n                                        <td colSpan=\"3\">BandWidth(Mbps)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>offset</td>\r\n                                        <td>In</td>\r\n                                        <td>Out</td>\r\n                                        <td>Total</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='size'>\r\n                                    {\r\n                                        data24.map(value =>{\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{value.offset}</td>\r\n                                                    <td>{value.speed_in}</td>\r\n                                                    <td>{value.speed_out}</td>\r\n                                                    <td>{value.speed_total}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>*/}\r\n\r\n                        </div>\r\n                        <footer className=\"footer\">Network Analysis in O2I System</footer>\r\n                    </div>\r\n                )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wbnx2;","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Wbnx3.js",["105","106","107","108","109","110","111"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nclass Wbnx3 extends Component {\r\n    state={\r\n        data : [],\r\n        result: [],\r\n        isLoading: true,\r\n        errcode: 'Loading...',\r\n        timestamp: [],\r\n    };\r\n\r\n    getdata = async () =>{\r\n        await axios.get('http://somweb.cf:8000/wn-t1-x2-r1')\r\n        .then((data) => {\r\n            const mydata = data.data.data;\r\n            return this.setState({data:mydata, isLoading: false});\r\n        }).catch(()=>{\r\n            this.setState({errcode:'NOT FOUND FILE!'});\r\n        })\r\n    }\r\n    gettimer = () =>{\r\n        let time = new Date();\r\n        let years = time.getFullYear();\r\n        let month = time.getMonth();\r\n        let date = time.getDate();\r\n        let hours = time.getHours();\r\n        let minutes = time.getMinutes();\r\n        let seconds = time.getSeconds();\r\n\r\n        const result = `Requested at : ${hours < 10 ? `0${hours}` : `${hours}`}:${minutes < 10 ? `0${minutes}` : `${minutes}`}:${seconds < 10 ? `0${seconds}` : `${seconds}`}, ${years}-${month+1}-${date}`;\r\n\r\n        return this.setState({result:result});\r\n    }\r\n    getstamp = () =>{\r\n        axios.get('http://somweb.cf:8000/wbn-timestamp').then(response=>{\r\n            const x = response.data.data;\r\n            console.log('최신 데이터 시간을 업데이트하였습니다.');\r\n            return this.setState({timestamp : x});\r\n        }).catch(()=>{\r\n            this.setState({errcode:'NOT FOUND FILE!'});\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getdata();\r\n        this.gettimer();\r\n        this.getstamp();\r\n    }\r\n    renderbtn = () => {\r\n        this.getdata();\r\n        this.gettimer();\r\n        this.getstamp();\r\n    }\r\n    render() {\r\n        const {data, result, isLoading, errcode, timestamp} = this.state;\r\n\r\n        const tt = timestamp.map(data=>{\r\n            if(data.offset === 1){\r\n                const y = data.timestamp;\r\n                return (<p className=\"xx\">Referenced Time {y}</p>);\r\n            }\r\n        });\r\n\r\n        const chartall = data.filter((value)=>{\r\n            return value.offset;\r\n        })\r\n        const chartoffset = chartall.map((value)=>{\r\n            return value.offset;\r\n        })\r\n        const chartoffset24 = data.filter((value)=>{\r\n            return value.offset < 25;\r\n        })\r\n        const chartName24 = chartoffset24.map(value =>{\r\n            return value.offset;\r\n        })\r\n\r\n        const chartspeed_in = data.map((value)=>{\r\n            return value.speed_in;\r\n        });\r\n        const chartspeed_out = data.map((value)=>{\r\n            return value.speed_out;\r\n        });\r\n        const chartspeed_total = data.map((value)=>{\r\n            return value.speed_total;\r\n        });\r\n\r\n        const sum = function(x,y){\r\n            return x + y;\r\n        };\r\n\r\n        const square = function(x){\r\n            return x * x;\r\n        };\r\n\r\n        const mean = chartspeed_total.reduce(sum, 0)/chartspeed_total.length;\r\n        const deviations = chartspeed_total.map(function(x){\r\n            return x-mean;\r\n        });\r\n\r\n        const stddev = Math.sqrt(deviations.map(square).reduce(sum, 0)/(chartspeed_total.length-1));\r\n        const stddev2 = new Array(24).fill(stddev);\r\n        \r\n        const meanValue = mean.toFixed(2);\r\n        const stddevValue = stddev.toFixed(2);\r\n\r\n        let min = 0;\r\n        let max = 0;\r\n\r\n        const x = chartspeed_total.map((value)=>{\r\n            if(value < min){\r\n                min = value;\r\n                console.log(`현재 min의 값은 ${min}입니다.`)\r\n            }else if(value > max){\r\n                max = value;\r\n                console.log(`현재 max의 값은 ${max}입니다.`)\r\n            }else{\r\n                console.log(value)\r\n            }\r\n        })\r\n\r\n        let chaptertotal = [];\r\n        let chapter1 = [];\r\n        let chapter2 = [];\r\n        let chapter3 = [];\r\n        let chapter4 = [];\r\n        let chapter5 = [];\r\n        let chapter6 = [];\r\n        let chapter7 = [];\r\n        let chapter8 = [];\r\n        let chapter9 = [];\r\n        let chapter10 = [];\r\n        let chapter11 = [];\r\n        let chapter12 = [];\r\n        let chapter13 = [];\r\n        let chapter14 = [];\r\n        let chapter15 = [];\r\n        let chapter16 = [];\r\n        let chapter17 = [];\r\n        let chapter18 = [];\r\n        let chapter19 = [];\r\n        let chapter20 = [];\r\n        let chapter21 = [];\r\n        let chapter22 = [];\r\n        let chapter23 = [];\r\n        let chapter24 = [];\r\n\r\n        const Linedata = chartspeed_total.map((value)=>{\r\n            if(min <= value && min+1 > value){\r\n                chapter1.push({value : value});\r\n            }else if(min+1 <= value && min+2 > value){\r\n                chapter2.push(value);\r\n            }else if(min+2 <= value && min+3 > value){\r\n                chapter3.push(value);\r\n            }else if(min+3 <= value && min+4 > value){\r\n                chapter4.push(value);\r\n            }else if(min+5 <= value && min+6 > value){\r\n                chapter5.push(value);\r\n            }else if(min+6<= value && min+7 > value){\r\n                chapter6.push(value);\r\n            }else if(min+7 <= value && min+8 > value){\r\n                chapter7.push(value);\r\n            }else if(min+8 <= value && min+9 > value){\r\n                chapter8.push(value);\r\n            }else if(min+9 <= value && min+10 > value){\r\n                chapter9.push(value);\r\n            }else if(min+10 <= value && min+11 > value){\r\n                chapter10.push(value);\r\n            }else if(min+11<= value && min+12 > value){\r\n                chapter11.push(value);\r\n            }else if(min+12 <= value && min+13 > value){\r\n                chapter12.push(value);\r\n            }else if(min+13 <= value && min+14 > value){\r\n                chapter13.push(value);\r\n            }else if(min+14 <= value && min+15 > value){\r\n                chapter14.push(value);\r\n            }else if(min+15 <= value && min+16 > value){\r\n                chapter15.push(value);\r\n            }else if(min+16<= value && min+17 > value){\r\n                chapter16.push(value);\r\n            }else if(min+17 <= value && min+18 > value){\r\n                chapter17.push(value);\r\n            }else if(min+18 <= value && min+19 > value){\r\n                chapter18.push(value);\r\n            }else if(min+19 <= value && min+20 > value){\r\n                chapter19.push(value);\r\n            }else if(min+20 <= value && min+21 > value){\r\n                chapter20.push(value);\r\n            }else if(min+21<= value && min+22 > value){\r\n                chapter21.push(value);\r\n            }else if(min+22 <= value && min+23 > value){\r\n                chapter22.push(value);\r\n            }else if(min+23 <= value && min+24 > value){\r\n                chapter23.push(value);\r\n            }else if(min+24 <= value && max > value){\r\n                chapter24.push(value);\r\n            }else{\r\n                console.log(Error);\r\n            }\r\n        });\r\n\r\n        /*console.log(chapter1);\r\n        console.log(chapter2);\r\n        console.log(chapter3);\r\n        console.log(chapter4);\r\n        console.log(chapter5);*/\r\n\r\n        const totalLength = chartoffset.length;\r\n\r\n        chaptertotal.push(chapter1.length / totalLength *100);\r\n        chaptertotal.push(chapter2.length / totalLength *100);\r\n        chaptertotal.push(chapter3.length / totalLength *100);\r\n        chaptertotal.push(chapter4.length / totalLength *100);\r\n        chaptertotal.push(chapter5.length / totalLength *100);\r\n        chaptertotal.push(chapter6.length / totalLength *100);\r\n        chaptertotal.push(chapter7.length / totalLength *100);\r\n        chaptertotal.push(chapter8.length / totalLength *100);\r\n        chaptertotal.push(chapter9.length / totalLength *100);\r\n        chaptertotal.push(chapter10.length / totalLength *100);\r\n        chaptertotal.push(chapter11.length / totalLength *100);\r\n        chaptertotal.push(chapter12.length / totalLength *100);\r\n        chaptertotal.push(chapter13.length / totalLength *100);\r\n        chaptertotal.push(chapter14.length / totalLength *100);\r\n        chaptertotal.push(chapter15.length / totalLength *100);\r\n        chaptertotal.push(chapter16.length / totalLength *100);\r\n        chaptertotal.push(chapter17.length / totalLength *100);\r\n        chaptertotal.push(chapter18.length / totalLength *100);\r\n        chaptertotal.push(chapter19.length / totalLength *100);\r\n        chaptertotal.push(chapter20.length / totalLength *100);\r\n        chaptertotal.push(chapter21.length / totalLength *100);\r\n        chaptertotal.push(chapter22.length / totalLength *100);\r\n        chaptertotal.push(chapter23.length / totalLength *100);\r\n        chaptertotal.push(chapter24.length / totalLength *100);\r\n\r\n        \r\n        //console.log(chaptertotal);\r\n\r\n        const linedata = {\r\n            labels:chartoffset,\r\n            datasets: [\r\n                {\r\n                    type : 'bar',\r\n                    label:'In',\r\n                    data: chartspeed_in,\r\n                    fill: true,\r\n                    backgroundColor:'#66bb6a',\r\n                    borderColor:'#66bb6a'\r\n                },\r\n                {\r\n                    type : 'bar',\r\n                    label:'Out',\r\n                    data: chartspeed_out,\r\n                    backgroundColor: 'rgba(75,192,192)',\r\n                    borderColor: 'rgba(75,192,192)',\r\n                },\r\n                {\r\n                    type: 'line',\r\n                    label: 'Total',\r\n                    data : chartspeed_total,\r\n                    backgroundColor : 'pink',\r\n                    borderColor : 'pink',\r\n                }\r\n            ]\r\n        };\r\n\r\n        /*const linedata2 = {\r\n            labels:chartoffset,\r\n            datasets: [\r\n                {\r\n                    type : 'line',\r\n                    label:'Total',\r\n                    data: chartspeed_total,\r\n                    backgroundColor: 'rgba(75,192,192)',\r\n                    borderColor: 'rgba(75,192,192)',\r\n                }\r\n            ]\r\n        };*/\r\n\r\n        const linedata3 = {\r\n            labels:chartName24,\r\n            datasets: [\r\n                {\r\n                    type : 'bar',\r\n                    label:'Frequency_bar',\r\n                    data: chaptertotal,\r\n                    fill: true,\r\n                    backgroundColor:'rgba(75,192,192)',\r\n                    borderColor:'rgba(75,192,192)'\r\n                },\r\n                {\r\n                    type : 'line',\r\n                    label:'Frequency_line',\r\n                    data: chaptertotal,\r\n                    backgroundColor: '#66bb6a',\r\n                    borderColor: '#66bb6a',\r\n                }\r\n            ]\r\n        };\r\n        return (\r\n            <div className=\"table\">\r\n                {isLoading ? <div className=\"loader\">\r\n                    <span className=\"loader__text\">{errcode}</span>\r\n                </div> :\r\n                (\r\n                    <div className=\"container\">\r\n                        <span className=\"spantitle\">\r\n                            <div className=\"titletotal\">\r\n                                <span className=\"title1 pstyle\">Network Node Name:</span>\r\n                                <span className=\"title2 pstyle\">WN-T1-X2(R1-AP1)</span>\r\n                            </div>\r\n                            {tt}\r\n                            <div className=\"itembox\">\r\n                                <p className=\"result\">{result}</p>\r\n                                <button onClick={this.renderbtn}>Next</button>\r\n                            </div>\r\n                        </span>\r\n\r\n                        <div className=\"content\">\r\n                            <div className=\"chart chartlayout\">\r\n                                <p>Bandwidth Measurement Result(In, Out, Total)</p>\r\n                                <Bar \r\n                                    data={linedata}\r\n                                    width={1050}\r\n                                    height={500}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                x : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Time Offset(5 mins )'\r\n                                                    }\r\n                                                },\r\n                                                y : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Mbps'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            {/*<div className=\"chart2 chartlayout\">\r\n                                <p>Total-BandWidth Distribution</p>\r\n                                <Bar \r\n                                    data={linedata2}\r\n                                    width={550}\r\n                                    height={500}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                x : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Time Offset(5 mins )'\r\n                                                    }\r\n                                                },\r\n                                                y : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Mbps'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />\r\n                                </div>*/}\r\n                                <div className=\"chart3 chartlayout\">\r\n                                <p>Total Bandwidth Distribution</p>\r\n                                <Bar \r\n                                    data={linedata3}\r\n                                    width={700}\r\n                                    height={500}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                x : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Bandwidth ( Mbps )'\r\n                                                    }\r\n                                                },\r\n                                                y : {\r\n                                                    ticks : {\r\n                                                        max : 100,\r\n                                                        min : 0,\r\n                                                        stepSize : 5,\r\n                                                        //maxTicksLimit: 2,\r\n                                                    },\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Frequency(%)'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />\r\n                                <p className=\"footertitle\">[Average : {meanValue} , Deviation : {stddevValue}]</p>\r\n                                </div>\r\n                            {/* {<table className=\"tableset\">\r\n                                <thead className=\"headstyle\">\r\n                                    <tr>\r\n                                        <td>Time</td>\r\n                                        <td colSpan=\"3\">BandWidth(Mbps)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>offset</td>\r\n                                        <td>In</td>\r\n                                        <td>Out</td>\r\n                                        <td>Total</td>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody className='size'>\r\n                                    {\r\n                                        data12.map(value=>{\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{value.offset}</td>\r\n                                                    <td>{value.speed_in}</td>\r\n                                                    <td>{value.speed_out}</td>\r\n                                                    <td>{value.speed_total}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <table className=\"tableset\">\r\n                                <thead className=\"headstyle\">\r\n                                    <tr>\r\n                                        <td>Time</td>\r\n                                        <td colSpan=\"3\">BandWidth(Mbps)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>offset</td>\r\n                                        <td>In</td>\r\n                                        <td>Out</td>\r\n                                        <td>Total</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='size'>\r\n                                    {\r\n                                        data24.map(value =>{\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{value.offset}</td>\r\n                                                    <td>{value.speed_in}</td>\r\n                                                    <td>{value.speed_out}</td>\r\n                                                    <td>{value.speed_total}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>} */}\r\n                        </div>\r\n                        <footer className=\"footer\">Network Analysis in O2I System</footer>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wbnx3;","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Sublist.js",[],"C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Wbnx1.js",["112","113","114","115","116","117"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Bar} from 'react-chartjs-2';\r\n//import { ComposedChart, Line, Bar, XAxis, YAxis, Legend, CartesianGrid, Area, Tooltip, ReferenceLine, ResponsiveContainer, BarChart, Label } from 'recharts';\r\nclass Wbnx1 extends Component {\r\n    state={\r\n        data : [],\r\n        result: [],\r\n        isLoading: true,\r\n        errcode: 'Loading...',\r\n        timestamp: [],\r\n    };\r\n\r\n    getdata = async () =>{\r\n        await axios.get('http://somweb.cf:8000/wn-t1-x1-r0')\r\n        .then((data) => {\r\n            //console.log(data);\r\n            const mydata = data.data.data;\r\n            return this.setState({data:mydata, isLoading: false});\r\n        }).catch(()=>{\r\n            this.setState({errcode:'NOT FOUND FILE!'});\r\n        })\r\n    }\r\n    \r\n    gettimer = () =>{\r\n\r\n        let time = new Date();\r\n        let years = time.getFullYear();\r\n        let month = time.getMonth();\r\n        let date = time.getDate();\r\n        let hours = time.getHours();\r\n        let minutes = time.getMinutes();\r\n        let seconds = time.getSeconds();\r\n\r\n        const result = `Requested at : ${hours < 10 ? `0${hours}` : `${hours}`}:${minutes < 10 ? `0${minutes}` : `${minutes}`}:${seconds < 10 ? `0${seconds}` : `${seconds}`}, ${years}-${month+1}-${date}`;\r\n\r\n        return this.setState({result:result});\r\n    }\r\n    \r\n    getstamp = () =>{\r\n        axios.get('http://somweb.cf:8000/wbn-timestamp').then(response=>{\r\n            const x = response.data.data;\r\n            //console.log(x);\r\n            return this.setState({timestamp : x});\r\n        }).catch(()=>{\r\n            this.setState({errcode:'NOT FOUND FILE!'});\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getdata();\r\n        this.gettimer();\r\n        this.getstamp();\r\n    }\r\n    \r\n    renderbtn = () => {\r\n        this.getdata();\r\n        this.gettimer();\r\n        this.getstamp();\r\n    }\r\n    \r\n    render() {\r\n        const {data, result,isLoading, errcode, timestamp} = this.state;\r\n        const tt = timestamp.map(data=>{\r\n            if(data.offset === 1){\r\n                const y = data.timestamp;\r\n                return (<p className=\"xx\">Referenced Time {y}</p>);\r\n            }\r\n        });\r\n        \r\n        const chartall = data.filter((value)=>{\r\n            return value.offset;\r\n        })\r\n        const chartoffset = chartall.map((value)=>{\r\n            return value.offset;\r\n        })\r\n        const chartoffset24 = data.filter((value)=>{\r\n            return value.offset < 25;\r\n        })\r\n        const chartName24 = chartoffset24.map(value =>{\r\n            return value.offset;\r\n        })\r\n        \r\n        const chartspeed_in = data.map((value)=>{\r\n            return value.speed_in;\r\n        });\r\n        const chartspeed_out = data.map((value)=>{\r\n            return value.speed_out;\r\n        });\r\n        const chartspeed_total = data.map((value)=>{\r\n            return value.speed_total;\r\n        });\r\n\r\n        /*console.log(chartspeed_in);\r\n        console.log(chartspeed_out);\r\n        console.log(chartspeed_total);\r\n        console.log(data);*/\r\n\r\n        const sum = function(x,y){\r\n            return x + y;\r\n        };\r\n\r\n        const square = function(x){\r\n            return x * x;\r\n        };\r\n\r\n        const mean = chartspeed_total.reduce(sum, 0)/chartspeed_total.length;\r\n        const deviations = chartspeed_total.map(function(x){\r\n            return x-mean;\r\n        });\r\n\r\n        const stddev = Math.sqrt(deviations.map(square).reduce(sum, 0)/(chartspeed_total.length-1));\r\n        const stddev2 = new Array(24).fill(stddev);\r\n        \r\n        const meanValue = mean.toFixed(2);\r\n        const stddevValue = stddev.toFixed(2);\r\n        /*console.log(mean);\r\n        console.log(meanValue);\r\n        console.log(stddev);\r\n        console.log(stddevValue);*/\r\n        \r\n        let min = 0;\r\n        let max = 0;\r\n\r\n        const x = chartspeed_total.map((value)=>{\r\n            if(value < min){\r\n                min = value;\r\n                //console.log(`현재 min의 값은 ${min}입니다.`);\r\n            }else if(value > max){\r\n                max = value;\r\n                //console.log(`현재 max의 값은 ${max}입니다.`);\r\n            }else{\r\n                //console.log(value);\r\n            }\r\n        });\r\n        //console.log(min,max);\r\n\r\n\r\n        let chaptertotal = [];\r\n        let chapter1 = [];\r\n        let chapter2 = [];\r\n        let chapter3 = [];\r\n        let chapter4 = [];\r\n        let chapter5 = [];\r\n        let chapter6 = [];\r\n        let chapter7 = [];\r\n        let chapter8 = [];\r\n        let chapter9 = [];\r\n        let chapter10 = [];\r\n        let chapter11 = [];\r\n        let chapter12 = [];\r\n        let chapter13 = [];\r\n        let chapter14 = [];\r\n        let chapter15 = [];\r\n        let chapter16 = [];\r\n        let chapter17 = [];\r\n        let chapter18 = [];\r\n        let chapter19 = [];\r\n        let chapter20 = [];\r\n        let chapter21 = [];\r\n        let chapter22 = [];\r\n        let chapter23 = [];\r\n        let chapter24 = [];\r\n\r\n        const Linedata = chartspeed_total.map((value)=>{\r\n            if(min <= value && min+1 > value){\r\n                chapter1.push({value : value});\r\n            }else if(min+1 <= value && min+2 > value){\r\n                chapter2.push(value);\r\n            }else if(min+2 <= value && min+3 > value){\r\n                chapter3.push(value);\r\n            }else if(min+3 <= value && min+4 > value){\r\n                chapter4.push(value);\r\n            }else if(min+5 <= value && min+6 > value){\r\n                chapter5.push(value);\r\n            }else if(min+6<= value && min+7 > value){\r\n                chapter6.push(value);\r\n            }else if(min+7 <= value && min+8 > value){\r\n                chapter7.push(value);\r\n            }else if(min+8 <= value && min+9 > value){\r\n                chapter8.push(value);\r\n            }else if(min+9 <= value && min+10 > value){\r\n                chapter9.push(value);\r\n            }else if(min+10 <= value && min+11 > value){\r\n                chapter10.push(value);\r\n            }else if(min+11<= value && min+12 > value){\r\n                chapter11.push(value);\r\n            }else if(min+12 <= value && min+13 > value){\r\n                chapter12.push(value);\r\n            }else if(min+13 <= value && min+14 > value){\r\n                chapter13.push(value);\r\n            }else if(min+14 <= value && min+15 > value){\r\n                chapter14.push(value);\r\n            }else if(min+15 <= value && min+16 > value){\r\n                chapter15.push(value);\r\n            }else if(min+16<= value && min+17 > value){\r\n                chapter16.push(value);\r\n            }else if(min+17 <= value && min+18 > value){\r\n                chapter17.push(value);\r\n            }else if(min+18 <= value && min+19 > value){\r\n                chapter18.push(value);\r\n            }else if(min+19 <= value && min+20 > value){\r\n                chapter19.push(value);\r\n            }else if(min+20 <= value && min+21 > value){\r\n                chapter20.push(value);\r\n            }else if(min+21<= value && min+22 > value){\r\n                chapter21.push(value);\r\n            }else if(min+22 <= value && min+23 > value){\r\n                chapter22.push(value);\r\n            }else if(min+23 <= value && min+24 > value){\r\n                chapter23.push(value);\r\n            }else if(min+24 <= value && max > value){\r\n                chapter24.push(value);\r\n            }else{\r\n                console.log(Error);\r\n            }\r\n        });\r\n\r\n        /*console.log(chapter1);\r\n        console.log(chapter2);\r\n        console.log(chapter3);\r\n        console.log(chapter4);\r\n        console.log(chapter5);*/\r\n\r\n        const totalLength = chartoffset.length;\r\n        /*console.log(chartoffset.length)\r\n        console.log(totalLength);*/\r\n\r\n        chaptertotal.push(chapter1.length / totalLength *100);\r\n        chaptertotal.push(chapter2.length / totalLength *100);\r\n        chaptertotal.push(chapter3.length / totalLength *100);\r\n        chaptertotal.push(chapter4.length / totalLength *100);\r\n        chaptertotal.push(chapter5.length / totalLength *100);\r\n        chaptertotal.push(chapter6.length / totalLength *100);\r\n        chaptertotal.push(chapter7.length / totalLength *100);\r\n        chaptertotal.push(chapter8.length / totalLength *100);\r\n        chaptertotal.push(chapter9.length / totalLength *100);\r\n        chaptertotal.push(chapter10.length / totalLength *100);\r\n        chaptertotal.push(chapter11.length / totalLength *100);\r\n        chaptertotal.push(chapter12.length / totalLength *100);\r\n        chaptertotal.push(chapter13.length / totalLength *100);\r\n        chaptertotal.push(chapter14.length / totalLength *100);\r\n        chaptertotal.push(chapter15.length / totalLength *100);\r\n        chaptertotal.push(chapter16.length / totalLength *100);\r\n        chaptertotal.push(chapter17.length / totalLength *100);\r\n        chaptertotal.push(chapter18.length / totalLength *100);\r\n        chaptertotal.push(chapter19.length / totalLength *100);\r\n        chaptertotal.push(chapter20.length / totalLength *100);\r\n        chaptertotal.push(chapter21.length / totalLength *100);\r\n        chaptertotal.push(chapter22.length / totalLength *100);\r\n        chaptertotal.push(chapter23.length / totalLength *100);\r\n        chaptertotal.push(chapter24.length / totalLength *100);\r\n\r\n        \r\n\r\n        const linedata = {\r\n            labels:chartoffset,\r\n            datasets: [\r\n                {\r\n                    type : 'bar',\r\n                    label:'In',\r\n                    data: chartspeed_in,\r\n                    fill: true,\r\n                    backgroundColor:'#66bb6a',\r\n                    borderColor:'#66bb6a'\r\n                },\r\n                {\r\n                    type : 'bar',\r\n                    label:'Out',\r\n                    data: chartspeed_out,\r\n                    backgroundColor: 'rgba(75,192,192)',\r\n                    borderColor: 'rgba(75,192,192)',\r\n                },\r\n                {\r\n                    type: 'line',\r\n                    label: 'Total',\r\n                    data : chartspeed_total,\r\n                    backgroundColor : 'pink',\r\n                    borderColor : 'pink',\r\n                }\r\n            ]\r\n        };\r\n\r\n        /*const linedata2 = {\r\n            labels:chartoffset,\r\n            datasets: [\r\n                {\r\n                    type : 'line',\r\n                    label:'Total',\r\n                    data: chartspeed_total,\r\n                    backgroundColor: 'rgba(75,192,192)',\r\n                    borderColor: 'rgba(75,192,192)',\r\n                }\r\n            ]\r\n        };*/\r\n\r\n        const linedata3 = {\r\n            labels:chartName24,\r\n            datasets: [\r\n                {\r\n                    type : 'bar',\r\n                    label:'Frequency_bar',\r\n                    data: chaptertotal,\r\n                    fill: true,\r\n                    backgroundColor:'rgba(75,192,192)',\r\n                    borderColor:'rgba(75,192,192)'\r\n                },\r\n                {\r\n                    type : 'line',\r\n                    label:'Frequency_line',\r\n                    data: chaptertotal,\r\n                    backgroundColor: '#66bb6a',\r\n                    borderColor: '#66bb6a',\r\n                }\r\n            ]\r\n        };\r\n\r\n        //console.log(chaptertotal);\r\n\r\n        return (\r\n            <div className=\"table\">\r\n                {isLoading ? <div className=\"loader\">\r\n                    <span className=\"loader__text\">{errcode}</span>\r\n                </div> :\r\n                (\r\n                    <div className=\"container\">\r\n                        <span className=\"spantitle\">\r\n                            <div className=\"titletotal\">\r\n                                <span className=\"title1 pstyle\">Network Node Name: </span>\r\n                                <span className=\"title2 pstyle\">WN-T1-X1(R0)</span>\r\n                            </div>\r\n                            {tt}\r\n                            <div className=\"itembox\">\r\n                                <p className=\"result\">{result}</p>\r\n                                <button onClick={this.renderbtn}>Next</button>\r\n                            </div>\r\n                        </span>\r\n\r\n                        <div className=\"content\">\r\n                            <div className=\"chart chartlayout\">\r\n                                <p>Bandwidth Measurement Result(In, Out, Total)</p>\r\n                                <Bar \r\n                                    data={linedata}\r\n                                    width={1050}\r\n                                    height={500}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                x : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Time Offset( 5 mins )'\r\n                                                    }\r\n                                                },\r\n                                                y : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Mbps'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            {/*<div className=\"chart2 chartlayout\">\r\n                                <p>Bandwidth Measurement Reselt(Total)</p>\r\n                                <Bar \r\n                                    data={linedata2}\r\n                                    width={550}\r\n                                    height={500}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                x : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Time Offset(5 mins )'\r\n                                                    }\r\n                                                },\r\n                                                y : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Mbps'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />\r\n                            </div>*/}\r\n                            <div className=\"chart3 chartlayout\">\r\n                            <p>Total Bandwidth Distribution</p>\r\n                            <Bar \r\n                                data={linedata3}\r\n                                width={700}\r\n                                height={500}\r\n                                options={\r\n                                    {\r\n                                        scales:{\r\n                                            xAxes : {\r\n                                                display : true,\r\n                                                title: {\r\n                                                    display: true,\r\n                                                    align: 'center',\r\n                                                    font: {\r\n                                                        size: 15,\r\n                                                    },\r\n                                                    text : 'Bandwidth ( Mbps )'\r\n                                                }\r\n                                            },\r\n                                            yAxes : {\r\n                                                ticks : {\r\n                                                    max : 100,\r\n                                                    min : 0,\r\n                                                    stepSize : 5,\r\n                                                },\r\n                                                title: {\r\n                                                    display: true,\r\n                                                    align: 'end',\r\n                                                    font: {\r\n                                                        size: 15,\r\n                                                    },\r\n                                                    text: 'Frequency(%)',\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            />\r\n                            <p className=\"footertitle\">[Average : {meanValue} , Deviation : {stddevValue}]</p>\r\n                            </div>\r\n\r\n                            {/*<table className=\"tableset\">\r\n                                <thead className=\"headstyle\">\r\n                                    <tr>\r\n                                        <td>Time</td>\r\n                                        <td colSpan=\"3\">BandWidth(Mbps)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>offset</td>\r\n                                        <td>In</td>\r\n                                        <td>Out</td>\r\n                                        <td>Total</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='size'>\r\n                                    {\r\n                                        data12.map(value=>{\r\n                                            return (\r\n                                                <tr key={value.offset}>\r\n                                                    <td>{value.offset}</td>\r\n                                                    <td>{value.speed_in}</td>\r\n                                                    <td>{value.speed_out}</td>\r\n                                                    <td>{value.speed_total}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <table className=\"tableset\">\r\n                                <thead className=\"headstyle\">\r\n                                    <tr>\r\n                                        <td>Time</td>\r\n                                        <td colSpan=\"3\">BandWidth(Mbps)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>offset</td>\r\n                                        <td>In</td>\r\n                                        <td>Out</td>\r\n                                        <td>Total</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='size'>\r\n                                    {\r\n                                        data24.map(value =>{\r\n                                            return (\r\n                                                <tr key={value.offset}>\r\n                                                    <td>{value.offset}</td>\r\n                                                    <td>{value.speed_in}</td>\r\n                                                    <td>{value.speed_out}</td>\r\n                                                    <td>{value.speed_total}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>*/}\r\n                        </div>\r\n                        <footer className=\"footer\">Network Analysis in O2I System</footer>\r\n                    </div>\r\n                )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wbnx1;","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Tabledata.js",[],["118","119"],"C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Wbnx5.js",["120","121","122","123","124","125","126","127"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nclass Wbnx5 extends Component {\r\n    state={\r\n        data : [],\r\n        result: [],\r\n        isLoading: true,\r\n        errcode: 'Loading...',\r\n        timestamp: [],\r\n    };\r\n\r\n    getdata = async () =>{\r\n        const dataset = await axios.get('http://somweb.cf:8000/wn-t1-x3-r0')\r\n        .then((data) => {\r\n            const mydata = data.data.data;\r\n            return this.setState({data:mydata, isLoading: false});\r\n        }).catch(()=>{\r\n            this.setState({errcode:'NOT FOUND FILE!'});\r\n        })\r\n    }\r\n    gettimer = () =>{\r\n        console.log(\"Time Start!\");\r\n\r\n        let time = new Date();\r\n        let years = time.getFullYear();\r\n        let month = time.getMonth();\r\n        let date = time.getDate();\r\n        let hours = time.getHours();\r\n        let minutes = time.getMinutes();\r\n        let seconds = time.getSeconds();\r\n\r\n        const result = `Requested at : ${hours < 10 ? `0${hours}` : `${hours}`}:${minutes < 10 ? `0${minutes}` : `${minutes}`}:${seconds < 10 ? `0${seconds}` : `${seconds}`}, ${years}-${month+1}-${date}`;\r\n\r\n        return this.setState({result:result});\r\n    }\r\n    getstamp = () =>{\r\n        axios.get('http://somweb.cf:8000/wbn-timestamp').then(response=>{\r\n            const x = response.data.data;\r\n            return this.setState({timestamp : x});\r\n        }).catch(()=>{\r\n            this.setState({errcode:'NOT FOUND FILE!'});\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getdata();\r\n        this.gettimer();\r\n        this.getstamp();\r\n    }\r\n    renderbtn = () => {\r\n        this.getdata();\r\n        this.gettimer();\r\n        this.getstamp();\r\n    }\r\n    render() {\r\n        const {data, result, isLoading, errcode, timestamp} = this.state;\r\n        const tt = timestamp.map(data=>{\r\n            if(data.offset === 1){\r\n                const y = data.timestamp;\r\n                return (<p className=\"xx\">Referenced Time {y}</p>);\r\n            }\r\n        });\r\n        \r\n        const chartall = data.filter((value)=>{\r\n            return value.offset;\r\n        })\r\n        const chartoffset = chartall.map((value)=>{\r\n            return value.offset;\r\n        })\r\n        const chartoffset24 = data.filter((value)=>{\r\n            return value.offset < 25;\r\n        })\r\n        const chartName24 = chartoffset24.map(value =>{\r\n            return value.offset;\r\n        })\r\n\r\n        const chartspeed_in = data.map((value)=>{\r\n            return value.speed_in;\r\n        });\r\n        const chartspeed_out = data.map((value)=>{\r\n            return value.speed_out;\r\n        });\r\n        const chartspeed_total = data.map((value)=>{\r\n            return value.speed_total;\r\n        });\r\n        console.log(chartspeed_total);\r\n\r\n        const sum = function(x,y){\r\n            return x + y;\r\n        };\r\n\r\n        const square = function(x){\r\n            return x * x;\r\n        };\r\n\r\n        const mean = chartspeed_total.reduce(sum, 0)/chartspeed_total.length;\r\n        const deviations = chartspeed_total.map(function(x){\r\n            return x-mean;\r\n        });\r\n\r\n        const stddev = Math.sqrt(deviations.map(square).reduce(sum, 0)/(chartspeed_total.length-1));\r\n        const stddev2 = new Array(24).fill(stddev);\r\n        \r\n        const meanValue = mean.toFixed(2);\r\n        const stddevValue = stddev.toFixed(2);\r\n        console.log(mean);\r\n        console.log(meanValue);\r\n        console.log(stddev);\r\n        console.log(stddevValue);\r\n\r\n        let min = 0;\r\n        let max = 0;\r\n\r\n        const x = chartspeed_total.map((value)=>{\r\n            if(value < min){\r\n                min = value;\r\n                console.log(`현재 min의 값은 ${min}입니다.`)\r\n            }else if(value > max){\r\n                max = value;\r\n                console.log(`현재 max의 값은 ${max}입니다.`)\r\n            }else{\r\n                console.log(value)\r\n            }\r\n        })\r\n\r\n        let chaptertotal = [];\r\n        let chapter1 = [];\r\n        let chapter2 = [];\r\n        let chapter3 = [];\r\n        let chapter4 = [];\r\n        let chapter5 = [];\r\n        let chapter6 = [];\r\n        let chapter7 = [];\r\n        let chapter8 = [];\r\n        let chapter9 = [];\r\n        let chapter10 = [];\r\n        let chapter11 = [];\r\n        let chapter12 = [];\r\n        let chapter13 = [];\r\n        let chapter14 = [];\r\n        let chapter15 = [];\r\n        let chapter16 = [];\r\n        let chapter17 = [];\r\n        let chapter18 = [];\r\n        let chapter19 = [];\r\n        let chapter20 = [];\r\n        let chapter21 = [];\r\n        let chapter22 = [];\r\n        let chapter23 = [];\r\n        let chapter24 = [];\r\n\r\n        const Linedata = chartspeed_total.map((value)=>{\r\n            if(min <= value && min+1 > value){\r\n                chapter1.push({value : value});\r\n            }else if(min+1 <= value && min+2 > value){\r\n                chapter2.push(value);\r\n            }else if(min+2 <= value && min+3 > value){\r\n                chapter3.push(value);\r\n            }else if(min+3 <= value && min+4 > value){\r\n                chapter4.push(value);\r\n            }else if(min+5 <= value && min+6 > value){\r\n                chapter5.push(value);\r\n            }else if(min+6<= value && min+7 > value){\r\n                chapter6.push(value);\r\n            }else if(min+7 <= value && min+8 > value){\r\n                chapter7.push(value);\r\n            }else if(min+8 <= value && min+9 > value){\r\n                chapter8.push(value);\r\n            }else if(min+9 <= value && min+10 > value){\r\n                chapter9.push(value);\r\n            }else if(min+10 <= value && min+11 > value){\r\n                chapter10.push(value);\r\n            }else if(min+11<= value && min+12 > value){\r\n                chapter11.push(value);\r\n            }else if(min+12 <= value && min+13 > value){\r\n                chapter12.push(value);\r\n            }else if(min+13 <= value && min+14 > value){\r\n                chapter13.push(value);\r\n            }else if(min+14 <= value && min+15 > value){\r\n                chapter14.push(value);\r\n            }else if(min+15 <= value && min+16 > value){\r\n                chapter15.push(value);\r\n            }else if(min+16<= value && min+17 > value){\r\n                chapter16.push(value);\r\n            }else if(min+17 <= value && min+18 > value){\r\n                chapter17.push(value);\r\n            }else if(min+18 <= value && min+19 > value){\r\n                chapter18.push(value);\r\n            }else if(min+19 <= value && min+20 > value){\r\n                chapter19.push(value);\r\n            }else if(min+20 <= value && min+21 > value){\r\n                chapter20.push(value);\r\n            }else if(min+21<= value && min+22 > value){\r\n                chapter21.push(value);\r\n            }else if(min+22 <= value && min+23 > value){\r\n                chapter22.push(value);\r\n            }else if(min+23 <= value && min+24 > value){\r\n                chapter23.push(value);\r\n            }else if(min+24 <= value && max > value){\r\n                chapter24.push(value);\r\n            }else{\r\n                console.log(Error);\r\n            }\r\n        });\r\n\r\n        /*console.log(chapter1);\r\n        console.log(chapter2);\r\n        console.log(chapter3);\r\n        console.log(chapter4);\r\n        console.log(chapter5);*/\r\n\r\n        const totalLength = chartoffset.length;\r\n\r\n        chaptertotal.push(chapter1.length / totalLength *100);\r\n        chaptertotal.push(chapter2.length / totalLength *100);\r\n        chaptertotal.push(chapter3.length / totalLength *100);\r\n        chaptertotal.push(chapter4.length / totalLength *100);\r\n        chaptertotal.push(chapter5.length / totalLength *100);\r\n        chaptertotal.push(chapter6.length / totalLength *100);\r\n        chaptertotal.push(chapter7.length / totalLength *100);\r\n        chaptertotal.push(chapter8.length / totalLength *100);\r\n        chaptertotal.push(chapter9.length / totalLength *100);\r\n        chaptertotal.push(chapter10.length / totalLength *100);\r\n        chaptertotal.push(chapter11.length / totalLength *100);\r\n        chaptertotal.push(chapter12.length / totalLength *100);\r\n        chaptertotal.push(chapter13.length / totalLength *100);\r\n        chaptertotal.push(chapter14.length / totalLength *100);\r\n        chaptertotal.push(chapter15.length / totalLength *100);\r\n        chaptertotal.push(chapter16.length / totalLength *100);\r\n        chaptertotal.push(chapter17.length / totalLength *100);\r\n        chaptertotal.push(chapter18.length / totalLength *100);\r\n        chaptertotal.push(chapter19.length / totalLength *100);\r\n        chaptertotal.push(chapter20.length / totalLength *100);\r\n        chaptertotal.push(chapter21.length / totalLength *100);\r\n        chaptertotal.push(chapter22.length / totalLength *100);\r\n        chaptertotal.push(chapter23.length / totalLength *100);\r\n        chaptertotal.push(chapter24.length / totalLength *100);\r\n\r\n        \r\n        //console.log(chaptertotal);\r\n\r\n        const linedata = {\r\n            labels:chartoffset,\r\n            datasets: [\r\n                {\r\n                    type : 'bar',\r\n                    label:'In',\r\n                    data: chartspeed_in,\r\n                    fill: true,\r\n                    backgroundColor:'#66bb6a',\r\n                    borderColor:'#66bb6a'\r\n                },\r\n                {\r\n                    type : 'bar',\r\n                    label:'Out',\r\n                    data: chartspeed_out,\r\n                    backgroundColor: 'rgba(75,192,192)',\r\n                    borderColor: 'rgba(75,192,192)',\r\n                },\r\n                {\r\n                    type: 'line',\r\n                    label: 'Total',\r\n                    data : chartspeed_total,\r\n                    backgroundColor : 'pink',\r\n                    borderColor : 'pink',\r\n                }\r\n            ]\r\n        };\r\n\r\n        /*const linedata2 = {\r\n            labels:chartoffset,\r\n            datasets: [\r\n                {\r\n                    type : 'line',\r\n                    label:'Total',\r\n                    data: chartspeed_total,\r\n                    backgroundColor: 'rgba(75,192,192)',\r\n                    borderColor: 'rgba(75,192,192)',\r\n                }\r\n            ]\r\n        };*/\r\n\r\n        const linedata3 = {\r\n            labels:chartName24,\r\n            datasets: [\r\n                {\r\n                    type : 'bar',\r\n                    label:'Frequency_bar',\r\n                    data: chaptertotal,\r\n                    fill: true,\r\n                    backgroundColor:'rgba(75,192,192)',\r\n                    borderColor:'rgba(75,192,192)'\r\n                },\r\n                {\r\n                    type : 'line',\r\n                    label:'Frequency_line',\r\n                    data: chaptertotal,\r\n                    backgroundColor: '#66bb6a',\r\n                    borderColor: '#66bb6a',\r\n                }\r\n            ]\r\n        };\r\n        return (\r\n            <div className=\"table\">\r\n                {isLoading ? <div className=\"loader\">\r\n                    <span className=\"loader__text\">{errcode}</span>\r\n                </div> :\r\n                    ( \r\n                        <div className=\"container\">\r\n                            <span className=\"spantitle\">\r\n                            <div className=\"titletotal\">\r\n                                <span className=\"title1 pstyle\">Network Node Name:</span>\r\n                                <span className=\"title2 pstyle\">WN-T1-X1(R1-AP3)</span>\r\n                            </div>\r\n                            {tt}\r\n                            <div className=\"itembox\">\r\n                                <p className=\"result\">{result}</p>\r\n                                <button onClick={this.renderbtn}>Next</button>\r\n                            </div>\r\n                        </span>\r\n\r\n                        <div className=\"content\">\r\n                            <div className=\"chart chartlayout\">\r\n                            <p>Bandwidth Measurement Result(In, Out, Total)</p>\r\n                                <Bar \r\n                                    data={linedata}\r\n                                    width={1050}\r\n                                    height={500}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                x : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Time Offset(5 mins )'\r\n                                                    }\r\n                                                },\r\n                                                y : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Mbps'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />\r\n                                </div>\r\n                                {/*<div className=\"chart2 chartlayout\">\r\n                                <p>Total-BandWidth Distribution</p>\r\n                                <Bar \r\n                                    data={linedata2}\r\n                                    width={550}\r\n                                    height={500}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                x : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Time Offset(5 mins )'\r\n                                                    }\r\n                                                },\r\n                                                y : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Mbps'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />\r\n                                </div>*/}\r\n                                <div className=\"chart3 chartlayout\">\r\n                                <p>Total Bandwidth Distribution</p>\r\n                                <Bar \r\n                                    data={linedata3}\r\n                                    width={700}\r\n                                    height={500}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                xAxes : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Bandwidth ( Mbps )'\r\n                                                    }\r\n                                                },\r\n                                                yAxes : {\r\n                                                    ticks : {\r\n                                                        max : 100,\r\n                                                        min : 0,\r\n                                                        stepSize : 5,\r\n                                                        //maxTicksLimit: 2,\r\n                                                    },\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Frequency(%)'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />\r\n                                <p className=\"footertitle\">[Average : {meanValue} , Deviation : {stddevValue}]</p>\r\n                                </div>\r\n                            {/* {<table className=\"tableset\">\r\n                                <thead className=\"headstyle\">\r\n                                    <tr>\r\n                                        <td>Time</td>\r\n                                        <td colSpan=\"3\">BandWidth(Mbps)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>offset</td>\r\n                                        <td>In</td>\r\n                                        <td>Out</td>\r\n                                        <td>Total</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='size'>\r\n                                    {\r\n                                        data12.map(value=>{\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{value.offset}</td>\r\n                                                    <td>{value.speed_in}</td>\r\n                                                    <td>{value.speed_out}</td>\r\n                                                    <td>{value.speed_total}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <table className=\"tableset\">\r\n                                <thead className=\"headstyle\">\r\n                                    <tr>\r\n                                        <td>Time</td>\r\n                                        <td colSpan=\"3\">BandWidth(Mbps)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>offset</td>\r\n                                        <td>In</td>\r\n                                        <td>Out</td>\r\n                                        <td>Total</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='size'>\r\n                                    {\r\n                                        data24.map(value =>{\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{value.offset}</td>\r\n                                                    <td>{value.speed_in}</td>\r\n                                                    <td>{value.speed_out}</td>\r\n                                                    <td>{value.speed_total}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>} */}\r\n                        </div>\r\n                        <footer className=\"footer\">Network Analysis in O2I System</footer>\r\n                    </div>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wbnx5;","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Wbnx4.js",["128","129","130","131","132","133","134"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Line,Bar } from 'react-chartjs-2';\r\n\r\nclass Wbnx4 extends Component {\r\n    state={\r\n        data : [],\r\n        result: [],\r\n        isLoading: true,\r\n        errcode: 'Loading...',\r\n        timestamp: [],\r\n    };\r\n\r\n    getdata = async () =>{\r\n        await axios.get('http://somweb.cf:8000/wn-t1-x2-r2')\r\n        .then((data) => {\r\n            const mydata = data.data.data;\r\n            return this.setState({data:mydata, isLoading: false});\r\n        }).catch(()=>{\r\n            this.setState({errcode:'NOT FOUND FILE!'});\r\n        })\r\n    }\r\n    gettimer = () =>{\r\n        let time = new Date();\r\n        let years = time.getFullYear();\r\n        let month = time.getMonth();\r\n        let date = time.getDate();\r\n        let hours = time.getHours();\r\n        let minutes = time.getMinutes();\r\n        let seconds = time.getSeconds();\r\n\r\n        const result = `Requested at : ${hours < 10 ? `0${hours}` : `${hours}`}:${minutes < 10 ? `0${minutes}` : `${minutes}`}:${seconds < 10 ? `0${seconds}` : `${seconds}`}, ${years}-${month+1}-${date}`;\r\n\r\n        return this.setState({result:result});\r\n    }\r\n    getstamp = () =>{\r\n        axios.get('http://somweb.cf:8000/wbn-timestamp').then(response=>{\r\n            const x = response.data.data;\r\n            console.log('최신 데이터 시간을 업데이트하였습니다.');\r\n            return this.setState({timestamp : x});\r\n        }).catch(()=>{\r\n            this.setState({errcode:'NOT FOUND FILE!'});\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getdata();\r\n        this.gettimer();\r\n        this.getstamp();\r\n    }\r\n    renderbtn = () => {\r\n        this.getdata();\r\n        this.gettimer();\r\n        this.getstamp();\r\n    }\r\n    render() {\r\n        const {data, result, isLoading, errcode, timestamp} = this.state;\r\n        const tt = timestamp.map(data=>{\r\n            if(data.offset === 1){\r\n                const y = data.timestamp;\r\n                return (<p className=\"xx\">Referenced Time {y}</p>);\r\n            }\r\n        });\r\n\r\n        const chartall = data.filter((value)=>{\r\n            return value.offset;\r\n        })\r\n        const chartoffset = chartall.map((value)=>{\r\n            return value.offset;\r\n        })\r\n        const chartoffset24 = data.filter((value)=>{\r\n            return value.offset < 25;\r\n        })\r\n        const chartName24 = chartoffset24.map(value =>{\r\n            return value.offset;\r\n        })\r\n\r\n        const chartspeed_in = data.map((value)=>{\r\n            return value.speed_in;\r\n        });\r\n        const chartspeed_out = data.map((value)=>{\r\n            return value.speed_out;\r\n        });\r\n        const chartspeed_total = data.map((value)=>{\r\n            return value.speed_total;\r\n        });\r\n\r\n        const sum = function(x,y){\r\n            return x + y;\r\n        };\r\n\r\n        const square = function(x){\r\n            return x * x;\r\n        };\r\n\r\n        const mean = chartspeed_total.reduce(sum, 0)/chartspeed_total.length;\r\n        const deviations = chartspeed_total.map(function(x){\r\n            return x-mean;\r\n        });\r\n\r\n        const stddev = Math.sqrt(deviations.map(square).reduce(sum, 0)/(chartspeed_total.length-1));\r\n        const stddev2 = new Array(24).fill(stddev);\r\n        \r\n        const meanValue = mean.toFixed(2);\r\n        const stddevValue = stddev.toFixed(2);\r\n\r\n        let min = 0;\r\n        let max = 0;\r\n\r\n        const x = chartspeed_total.map((value)=>{\r\n            if(value < min){\r\n                min = value;\r\n                console.log(`현재 min의 값은 ${min}입니다.`)\r\n            }else if(value > max){\r\n                max = value;\r\n                console.log(`현재 max의 값은 ${max}입니다.`)\r\n            }else{\r\n                console.log(value)\r\n            }\r\n        })\r\n\r\n        let chaptertotal = [];\r\n        let chapter1 = [];\r\n        let chapter2 = [];\r\n        let chapter3 = [];\r\n        let chapter4 = [];\r\n        let chapter5 = [];\r\n        let chapter6 = [];\r\n        let chapter7 = [];\r\n        let chapter8 = [];\r\n        let chapter9 = [];\r\n        let chapter10 = [];\r\n        let chapter11 = [];\r\n        let chapter12 = [];\r\n        let chapter13 = [];\r\n        let chapter14 = [];\r\n        let chapter15 = [];\r\n        let chapter16 = [];\r\n        let chapter17 = [];\r\n        let chapter18 = [];\r\n        let chapter19 = [];\r\n        let chapter20 = [];\r\n        let chapter21 = [];\r\n        let chapter22 = [];\r\n        let chapter23 = [];\r\n        let chapter24 = [];\r\n\r\n        const Linedata = chartspeed_total.map((value)=>{\r\n            if(min <= value && min+1 > value){\r\n                chapter1.push({value : value});\r\n            }else if(min+1 <= value && min+2 > value){\r\n                chapter2.push(value);\r\n            }else if(min+2 <= value && min+3 > value){\r\n                chapter3.push(value);\r\n            }else if(min+3 <= value && min+4 > value){\r\n                chapter4.push(value);\r\n            }else if(min+5 <= value && min+6 > value){\r\n                chapter5.push(value);\r\n            }else if(min+6<= value && min+7 > value){\r\n                chapter6.push(value);\r\n            }else if(min+7 <= value && min+8 > value){\r\n                chapter7.push(value);\r\n            }else if(min+8 <= value && min+9 > value){\r\n                chapter8.push(value);\r\n            }else if(min+9 <= value && min+10 > value){\r\n                chapter9.push(value);\r\n            }else if(min+10 <= value && min+11 > value){\r\n                chapter10.push(value);\r\n            }else if(min+11<= value && min+12 > value){\r\n                chapter11.push(value);\r\n            }else if(min+12 <= value && min+13 > value){\r\n                chapter12.push(value);\r\n            }else if(min+13 <= value && min+14 > value){\r\n                chapter13.push(value);\r\n            }else if(min+14 <= value && min+15 > value){\r\n                chapter14.push(value);\r\n            }else if(min+15 <= value && min+16 > value){\r\n                chapter15.push(value);\r\n            }else if(min+16<= value && min+17 > value){\r\n                chapter16.push(value);\r\n            }else if(min+17 <= value && min+18 > value){\r\n                chapter17.push(value);\r\n            }else if(min+18 <= value && min+19 > value){\r\n                chapter18.push(value);\r\n            }else if(min+19 <= value && min+20 > value){\r\n                chapter19.push(value);\r\n            }else if(min+20 <= value && min+21 > value){\r\n                chapter20.push(value);\r\n            }else if(min+21<= value && min+22 > value){\r\n                chapter21.push(value);\r\n            }else if(min+22 <= value && min+23 > value){\r\n                chapter22.push(value);\r\n            }else if(min+23 <= value && min+24 > value){\r\n                chapter23.push(value);\r\n            }else if(min+24 <= value && max > value){\r\n                chapter24.push(value);\r\n            }else{\r\n                console.log(Error);\r\n            }\r\n        });\r\n\r\n        /*console.log(chapter1);\r\n        console.log(chapter2);\r\n        console.log(chapter3);\r\n        console.log(chapter4);\r\n        console.log(chapter5);*/\r\n\r\n        const totalLength = chartoffset.length;\r\n\r\n        chaptertotal.push(chapter1.length / totalLength *100);\r\n        chaptertotal.push(chapter2.length / totalLength *100);\r\n        chaptertotal.push(chapter3.length / totalLength *100);\r\n        chaptertotal.push(chapter4.length / totalLength *100);\r\n        chaptertotal.push(chapter5.length / totalLength *100);\r\n        chaptertotal.push(chapter6.length / totalLength *100);\r\n        chaptertotal.push(chapter7.length / totalLength *100);\r\n        chaptertotal.push(chapter8.length / totalLength *100);\r\n        chaptertotal.push(chapter9.length / totalLength *100);\r\n        chaptertotal.push(chapter10.length / totalLength *100);\r\n        chaptertotal.push(chapter11.length / totalLength *100);\r\n        chaptertotal.push(chapter12.length / totalLength *100);\r\n        chaptertotal.push(chapter13.length / totalLength *100);\r\n        chaptertotal.push(chapter14.length / totalLength *100);\r\n        chaptertotal.push(chapter15.length / totalLength *100);\r\n        chaptertotal.push(chapter16.length / totalLength *100);\r\n        chaptertotal.push(chapter17.length / totalLength *100);\r\n        chaptertotal.push(chapter18.length / totalLength *100);\r\n        chaptertotal.push(chapter19.length / totalLength *100);\r\n        chaptertotal.push(chapter20.length / totalLength *100);\r\n        chaptertotal.push(chapter21.length / totalLength *100);\r\n        chaptertotal.push(chapter22.length / totalLength *100);\r\n        chaptertotal.push(chapter23.length / totalLength *100);\r\n        chaptertotal.push(chapter24.length / totalLength *100);\r\n\r\n        \r\n        //console.log(chaptertotal);\r\n\r\n        const linedata = {\r\n            labels:chartoffset,\r\n            datasets: [\r\n                {\r\n                    type : 'bar',\r\n                    label:'In',\r\n                    data: chartspeed_in,\r\n                    fill: true,\r\n                    backgroundColor:'#66bb6a',\r\n                    borderColor:'#66bb6a'\r\n                },\r\n                {\r\n                    type : 'bar',\r\n                    label:'Out',\r\n                    data: chartspeed_out,\r\n                    backgroundColor: 'rgba(75,192,192)',\r\n                    borderColor: 'rgba(75,192,192)',\r\n                },\r\n                {\r\n                    type: 'line',\r\n                    label: 'Total',\r\n                    data : chartspeed_total,\r\n                    backgroundColor : 'pink',\r\n                    borderColor : 'pink',\r\n                }\r\n            ]\r\n        };\r\n\r\n        /*const linedata2 = {\r\n            labels:chartoffset,\r\n            datasets: [\r\n                {\r\n                    type : 'line',\r\n                    label:'Total',\r\n                    data: chartspeed_total,\r\n                    backgroundColor: 'rgba(75,192,192)',\r\n                    borderColor: 'rgba(75,192,192)',\r\n                }\r\n            ]\r\n        };*/\r\n\r\n        const linedata3 = {\r\n            labels:chartName24,\r\n            datasets: [\r\n                {\r\n                    type : 'bar',\r\n                    label:'Frequency_bar',\r\n                    data: chaptertotal,\r\n                    fill: true,\r\n                    backgroundColor:'rgba(75,192,192)',\r\n                    borderColor:'rgba(75,192,192)'\r\n                },\r\n                {\r\n                    type : 'line',\r\n                    label:'Frequency_line',\r\n                    data: chaptertotal,\r\n                    backgroundColor: '#66bb6a',\r\n                    borderColor: '#66bb6a',\r\n                }\r\n            ]\r\n        };\r\n\r\n        return (\r\n            <div className=\"table\">\r\n                {isLoading ? <div className=\"loader\">\r\n                    <span className=\"loader__text\">{errcode}</span>\r\n                </div> :\r\n                (\r\n                    <div className=\"container\">\r\n                        <span className=\"spantitle\">\r\n                            <div className=\"titletotal\">\r\n                                <span className=\"title1 pstyle\">Network Node Name:</span>\r\n                                <span className=\"title2 pstyle\">WN-T1-X2(R2-AP2)</span>\r\n                            </div>\r\n                            {tt}\r\n                            <div className=\"itembox\">\r\n                                <p className=\"result\">{result}</p>\r\n                                <button onClick={this.renderbtn}>Next</button>\r\n                            </div>\r\n                        </span>\r\n\r\n\r\n                        <div className=\"content\">\r\n                            <div className=\"chart chartlayout\">\r\n                            <p>Bandwidth Measurement Result(In, Out, Total)</p>\r\n                                <Bar \r\n                                    data={linedata}\r\n                                    width={1050}\r\n                                    height={500}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                x : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Time Offset(5 mins )'\r\n                                                    }\r\n                                                },\r\n                                                y : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Mbps'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />\r\n                                </div>\r\n                                {/*<div className=\"chart2 chartlayout\">\r\n                                <p>Total-BandWidth Distribution</p>\r\n                                <Bar \r\n                                    data={linedata2}\r\n                                    width={550}\r\n                                    height={500}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                x : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Time Offset(5 mins )'\r\n                                                    }\r\n                                                },\r\n                                                y : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Mbps'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />\r\n                                </div>*/}\r\n                                <div className=\"chart3 chartlayout\">\r\n                                <p>Total Bandwidth Distribution</p>\r\n                                <Bar \r\n                                    data={linedata3}\r\n                                    width={700}\r\n                                    height={500}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                x : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Bandwidth ( Mbps )'\r\n                                                    }\r\n                                                },\r\n                                                y : {\r\n                                                    ticks : {\r\n                                                        max : 100,\r\n                                                        min : 0,\r\n                                                        stepSize : 5,\r\n                                                        //maxTicksLimit: 2,\r\n                                                    },\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Frequency(%)'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />\r\n                                <p className=\"footertitle\">[Average : {meanValue} , Deviation : {stddevValue}]</p>\r\n                                </div>\r\n                            {/* {<table className=\"tableset\">\r\n                                <thead className=\"headstyle\">\r\n                                    <tr>\r\n                                        <td>Time</td>\r\n                                        <td colSpan=\"3\">BandWidth(Mbps)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>offset</td>\r\n                                        <td>In</td>\r\n                                        <td>Out</td>\r\n                                        <td>Total</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='size'>\r\n                                    {\r\n                                        data12.map(value=>{\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{value.offset}</td>\r\n                                                    <td>{value.speed_in}</td>\r\n                                                    <td>{value.speed_out}</td>\r\n                                                    <td>{value.speed_total}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <table className=\"tableset\">\r\n                                <thead className=\"headstyle\">\r\n                                    <tr>\r\n                                        <td>Time</td>\r\n                                        <td colSpan=\"3\">BandWidth(Mbps)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>offset</td>\r\n                                        <td>In</td>\r\n                                        <td>Out</td>\r\n                                        <td>Total</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='size'>\r\n                                    {\r\n                                        data24.map(value =>{\r\n                                            return (\r\n                                                <tr>\r\n                                                    <td>{value.offset}</td>\r\n                                                    <td>{value.speed_in}</td>\r\n                                                    <td>{value.speed_out}</td>\r\n                                                    <td>{value.speed_total}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>} */}\r\n                        </div>\r\n                        <footer className=\"footer\">Network Analysis in O2I System</footer>\r\n                    </div>\r\n                )\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wbnx4;","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Menu.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203"],"import React, { Component } from 'react';\r\nimport { Route, Router, Switch } from 'react-router';\r\nimport './Menu.css';\r\nclass Menu extends Component {\r\n    state = {\r\n        menu_img: ('./som2.png'),\r\n        \r\n    }\r\n    render() {\r\n        const {menu_img}=this.state;\r\n        return (\r\n                <div className=\"menu\">\r\n                    <img className=\"imgfile\" src={menu_img} alt=\"SMFI_logo\" />\r\n                    <ul className=\"menu_list\">\r\n                        <li className=\"list_item\">\r\n                            <a href=\"index.html\" className=\"item_a\">Home</a>\r\n                            <ul className=\"hidden_list\">\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"#\">Dash Board</a>\r\n                                </li>\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"#\">Hello! O2I</a>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n\r\n                        <li className=\"list_item\">\r\n                            <a href=\"#\" className=\"item_a\">NetWork</a>\r\n                            <ul className=\"hidden_list\">\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"#\">Overall</a>\r\n                                    <ul className=\"sub_list\">\r\n                                        <li className=\"sub_item\"><a href=\"\">Geo.Map</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Logical Map</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"#\">Cluser</a>\r\n                                    <ul className=\"sub_list\">\r\n                                        <li className=\"sub_item\"><a href=\"\">All</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Cluster List</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Status</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"#\">TBN</a>\r\n                                    <ul className=\"sub_list\">\r\n                                        <li className=\"sub_item\"><a href=\"\">All</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">TBN List</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Status</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"#\">SBN</a>\r\n                                    <ul className=\"sub_list\">\r\n                                        <li className=\"sub_item\"><a href=\"\">All</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">SBN List</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Status</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n\r\n                        <li className=\"list_item\">\r\n                            <a href=\"#\" className=\"item_a\">SubSystem</a>\r\n                            <ul className=\"hidden_list\">\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"#\">ACS</a>\r\n                                    <ul className=\"sub_list\">\r\n                                        <li className=\"sub_item\"><a href=\"\">ACS Map</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">ACS List</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Status</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"#\">TTS</a>\r\n                                    <ul className=\"sub_list\">\r\n                                        <li className=\"sub_item\"><a href=\"\">TTS Map</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">TTS List</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Status</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"#\">STS</a>\r\n                                    <ul className=\"sub_list\">\r\n                                        <li className=\"sub_item\"><a href=\"\">STS Map</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">STS List</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Status</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n\r\n                        <li className=\"list_item\">\r\n                            <a href=\"#\" className=\"item_a\">SmartNet</a>\r\n                            <ul className=\"hidden_list\">\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"\">Cost-Optimized</a>\r\n                                    <ul className=\"sub_list\">\r\n                                        <li className=\"sub_item\"><a href=\"\">Traffic</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Latency</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Usage Pattern</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"\">Mission-Critical</a>\r\n                                    <ul className=\"sub_list\">\r\n                                        <li className=\"sub_item\"><a href=\"\">Finance</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Emergency</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Reserved</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"\">Context-Aware</a>\r\n                                    <ul className=\"sub_list\">\r\n                                        <li className=\"sub_item\"><a href=\"\">PerFormance</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Redivabidivty</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Unusal Event</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n\r\n                        <li className=\"list_item\">\r\n                            <a href=\"#\" className=\"item_a\">Inventory</a>\r\n                            <ul className=\"hidden_list\">\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"\">Sites</a>\r\n                                    <ul className=\"sub_list\">\r\n                                        <li className=\"sub_item\"><a href=\"\">Map</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Profile</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Status</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"\">Devices</a>\r\n                                    <ul className=\"sub_list\">\r\n                                        <li className=\"sub_item\"><a href=\"\">All</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Device List</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Device Group</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Add Device</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"\">Power System</a>\r\n                                    <ul className=\"sub_list\">\r\n                                        <li className=\"sub_item\"><a href=\"Map\">Map</a></li>\r\n                                        <li className=\"sub_item\"><a href=\"\">Status</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n\r\n                        <li className=\"list_item\">\r\n                            <a href=\"#\" className=\"item_a\">Alarm</a>\r\n                            <ul className=\"hidden_list\">\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"\">All</a></li>\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"\">Failure Level</a>\r\n                                </li>\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"\">Error Level</a>\r\n                                </li>\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"\">Warning Level</a>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n                        \r\n                        <li className=\"list_item\">\r\n                            <a href=\"#\" className=\"item_a\">SetUp</a>\r\n                            <ul className=\"hidden_list\">\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"\">Administrator</a>\r\n                                </li>\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"\">SOM Status</a>\r\n                                </li>\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"\">License</a>\r\n                                </li>\r\n                                <li className=\"hidden_item\">\r\n                                    <a href=\"\">Help & Support</a>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Kcf7.js",["204","205","206","207","208","209"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Bar} from 'react-chartjs-2';\r\nclass Kcf7 extends Component {\r\n    state={\r\n        data : [],\r\n        result: [],\r\n        isLoading: true,\r\n        errcode: 'Loading...',\r\n        timestamp: [],\r\n    };\r\n\r\n    getdata = async () =>{\r\n        await axios.get('http://somweb.cf:8000/kc-f7')\r\n        .then((data) => {\r\n            //console.log(data);\r\n            const mydata = data.data.data;\r\n            return this.setState({data:mydata, isLoading: false});\r\n        }).catch(()=>{\r\n            this.setState({errcode:'NOT FOUND FILE!'});\r\n        })\r\n    }\r\n    \r\n    gettimer = () =>{\r\n\r\n        let time = new Date();\r\n        let years = time.getFullYear();\r\n        let month = time.getMonth();\r\n        let date = time.getDate();\r\n        let hours = time.getHours();\r\n        let minutes = time.getMinutes();\r\n        let seconds = time.getSeconds();\r\n\r\n        const result = `Requested at : ${hours < 10 ? `0${hours}` : `${hours}`}:${minutes < 10 ? `0${minutes}` : `${minutes}`}:${seconds < 10 ? `0${seconds}` : `${seconds}`}, ${years}-${month+1}-${date}`;\r\n\r\n        return this.setState({result:result});\r\n    }\r\n    \r\n    getstamp = () =>{\r\n        axios.get('http://somweb.cf:8000/wbn-timestamp').then(response=>{\r\n            const x = response.data.data;\r\n            return this.setState({timestamp : x});\r\n        }).catch(()=>{\r\n            this.setState({errcode:'NOT FOUND FILE!'});\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getdata();\r\n        this.gettimer();\r\n        this.getstamp();\r\n    }\r\n    \r\n    renderbtn = () => {\r\n        this.getdata();\r\n        this.gettimer();\r\n        this.getstamp();\r\n    }\r\n    \r\n    render() {\r\n        const {data, result,isLoading, errcode, timestamp} = this.state;\r\n        const tt = timestamp.map(data=>{\r\n            if(data.offset === 2){\r\n                const y = data.timestamp;\r\n                return (<p className=\"xx\">Referenced Time {y}</p>);\r\n            }\r\n        });\r\n\r\n        const chartall = data.filter((value)=>{\r\n            return value.offset;\r\n        })\r\n        const chartoffset = chartall.map((value)=>{\r\n            return value.offset;\r\n        })\r\n        const chartoffset24 = data.filter((value)=>{\r\n            return value.offset < 25;\r\n        })\r\n        const chartName24 = chartoffset24.map(value =>{\r\n            return value.offset;\r\n        })\r\n        \r\n        const chartspeed_in = data.map((value)=>{\r\n            return value.speed_in;\r\n        });\r\n        const chartspeed_out = data.map((value)=>{\r\n            return value.speed_out;\r\n        });\r\n        const chartspeed_total = data.map((value)=>{\r\n            return value.speed_total;\r\n        });\r\n\r\n        /*console.log(chartspeed_in);\r\n        console.log(chartspeed_out);\r\n        console.log(chartspeed_total);\r\n        console.log(data);*/\r\n\r\n        const sum = function(x,y){\r\n            return x + y;\r\n        };\r\n\r\n        const square = function(x){\r\n            return x * x;\r\n        };\r\n\r\n        const mean = chartspeed_total.reduce(sum, 0)/chartspeed_total.length;\r\n        const deviations = chartspeed_total.map(function(x){\r\n            return x-mean;\r\n        });\r\n\r\n        const stddev = Math.sqrt(deviations.map(square).reduce(sum, 0)/(chartspeed_total.length-1));\r\n        const stddev2 = new Array(24).fill(stddev);\r\n        \r\n        const meanValue = mean.toFixed(2);\r\n        const stddevValue = stddev.toFixed(2);\r\n        /*console.log(mean);\r\n        console.log(meanValue);\r\n        console.log(stddev);\r\n        console.log(stddevValue);*/\r\n        \r\n        let min = 0;\r\n        let max = 0;\r\n\r\n        const x = chartspeed_total.map((value)=>{\r\n            if(value < min){\r\n                min = value;\r\n            }else if(value > max){\r\n                max = value;\r\n            }else{\r\n                //console.log(value)\r\n            }\r\n        })\r\n\r\n        let chaptertotal = [];\r\n        let chapter1 = [];\r\n        let chapter2 = [];\r\n        let chapter3 = [];\r\n        let chapter4 = [];\r\n        let chapter5 = [];\r\n        let chapter6 = [];\r\n        let chapter7 = [];\r\n        let chapter8 = [];\r\n        let chapter9 = [];\r\n        let chapter10 = [];\r\n        let chapter11 = [];\r\n        let chapter12 = [];\r\n        let chapter13 = [];\r\n        let chapter14 = [];\r\n        let chapter15 = [];\r\n        let chapter16 = [];\r\n        let chapter17 = [];\r\n        let chapter18 = [];\r\n        let chapter19 = [];\r\n        let chapter20 = [];\r\n        let chapter21 = [];\r\n        let chapter22 = [];\r\n        let chapter23 = [];\r\n        let chapter24 = [];\r\n\r\n        const Linedata = chartspeed_total.map((value)=>{\r\n            if(min <= value && min+1 > value){\r\n                chapter1.push({value : value});\r\n            }else if(min+1 <= value && min+2 > value){\r\n                chapter2.push(value);\r\n            }else if(min+2 <= value && min+3 > value){\r\n                chapter3.push(value);\r\n            }else if(min+3 <= value && min+4 > value){\r\n                chapter4.push(value);\r\n            }else if(min+5 <= value && min+6 > value){\r\n                chapter5.push(value);\r\n            }else if(min+6<= value && min+7 > value){\r\n                chapter6.push(value);\r\n            }else if(min+7 <= value && min+8 > value){\r\n                chapter7.push(value);\r\n            }else if(min+8 <= value && min+9 > value){\r\n                chapter8.push(value);\r\n            }else if(min+9 <= value && min+10 > value){\r\n                chapter9.push(value);\r\n            }else if(min+10 <= value && min+11 > value){\r\n                chapter10.push(value);\r\n            }else if(min+11<= value && min+12 > value){\r\n                chapter11.push(value);\r\n            }else if(min+12 <= value && min+13 > value){\r\n                chapter12.push(value);\r\n            }else if(min+13 <= value && min+14 > value){\r\n                chapter13.push(value);\r\n            }else if(min+14 <= value && min+15 > value){\r\n                chapter14.push(value);\r\n            }else if(min+15 <= value && min+16 > value){\r\n                chapter15.push(value);\r\n            }else if(min+16<= value && min+17 > value){\r\n                chapter16.push(value);\r\n            }else if(min+17 <= value && min+18 > value){\r\n                chapter17.push(value);\r\n            }else if(min+18 <= value && min+19 > value){\r\n                chapter18.push(value);\r\n            }else if(min+19 <= value && min+20 > value){\r\n                chapter19.push(value);\r\n            }else if(min+20 <= value && min+21 > value){\r\n                chapter20.push(value);\r\n            }else if(min+21<= value && min+22 > value){\r\n                chapter21.push(value);\r\n            }else if(min+22 <= value && min+23 > value){\r\n                chapter22.push(value);\r\n            }else if(min+23 <= value && min+24 > value){\r\n                chapter23.push(value);\r\n            }else if(min+24 <= value && max > value){\r\n                chapter24.push(value);\r\n            }else{\r\n                //console.log(value);\r\n            }\r\n        });\r\n\r\n        /*console.log(chapter1);\r\n        console.log(chapter2);\r\n        console.log(chapter3);\r\n        console.log(chapter4);\r\n        console.log(chapter5);\r\n        console.log(min,max);\r\n        console.log(chaptertotal);\r\n        console.log(chapter24)*/\r\n\r\n        const totalLength = chartoffset.length;\r\n\r\n        chaptertotal.push(chapter1.length / totalLength *100);\r\n        chaptertotal.push(chapter2.length / totalLength *100);\r\n        chaptertotal.push(chapter3.length / totalLength *100);\r\n        chaptertotal.push(chapter4.length / totalLength *100);\r\n        chaptertotal.push(chapter5.length / totalLength *100);\r\n        chaptertotal.push(chapter6.length / totalLength *100);\r\n        chaptertotal.push(chapter7.length / totalLength *100);\r\n        chaptertotal.push(chapter8.length / totalLength *100);\r\n        chaptertotal.push(chapter9.length / totalLength *100);\r\n        chaptertotal.push(chapter10.length / totalLength *100);\r\n        chaptertotal.push(chapter11.length / totalLength *100);\r\n        chaptertotal.push(chapter12.length / totalLength *100);\r\n        chaptertotal.push(chapter13.length / totalLength *100);\r\n        chaptertotal.push(chapter14.length / totalLength *100);\r\n        chaptertotal.push(chapter15.length / totalLength *100);\r\n        chaptertotal.push(chapter16.length / totalLength *100);\r\n        chaptertotal.push(chapter17.length / totalLength *100);\r\n        chaptertotal.push(chapter18.length / totalLength *100);\r\n        chaptertotal.push(chapter19.length / totalLength *100);\r\n        chaptertotal.push(chapter20.length / totalLength *100);\r\n        chaptertotal.push(chapter21.length / totalLength *100);\r\n        chaptertotal.push(chapter22.length / totalLength *100);\r\n        chaptertotal.push(chapter23.length / totalLength *100);\r\n        chaptertotal.push(chapter24.length / totalLength *100);\r\n\r\n        \r\n\r\n        const linedata = {\r\n            labels:chartoffset,\r\n            datasets: [\r\n                {\r\n                    type : 'bar',\r\n                    label:'In',\r\n                    data: chartspeed_in,\r\n                    fill: true,\r\n                    backgroundColor:'#66bb6a',\r\n                    borderColor:'#66bb6a'\r\n                },\r\n                {\r\n                    type : 'bar',\r\n                    label:'Out',\r\n                    data: chartspeed_out,\r\n                    backgroundColor: 'rgba(75,192,192)',\r\n                    borderColor: 'rgba(75,192,192)',\r\n                },\r\n                {\r\n                    type: 'line',\r\n                    label: 'Total',\r\n                    data : chartspeed_total,\r\n                    backgroundColor : 'pink',\r\n                    borderColor : 'pink',\r\n                }\r\n            ]\r\n        };\r\n\r\n        /*const linedata2 = {\r\n            labels:chartoffset,\r\n            datasets: [\r\n                {\r\n                    type : 'line',\r\n                    label:'Total',\r\n                    data: chartspeed_total,\r\n                    backgroundColor: 'rgba(75,192,192)',\r\n                    borderColor: 'rgba(75,192,192)',\r\n                }\r\n            ]\r\n        };*/\r\n\r\n        const linedata3 = {\r\n            labels:chartName24,\r\n            datasets: [\r\n                {\r\n                    type : 'bar',\r\n                    label:'Frequency_bar',\r\n                    data: chaptertotal,\r\n                    fill: true,\r\n                    backgroundColor:'rgba(75,192,192)',\r\n                    borderColor:'rgba(75,192,192)'\r\n                },\r\n                {\r\n                    type : 'line',\r\n                    label:'Frequency_line',\r\n                    data: chaptertotal,\r\n                    backgroundColor: '#66bb6a',\r\n                    borderColor: '#66bb6a',\r\n                }\r\n            ]\r\n        };\r\n\r\n        //console.log(chaptertotal);\r\n\r\n        return (\r\n            <div className=\"table\">\r\n                {isLoading ? <div className=\"loader\">\r\n                    <span className=\"loader__text\">{errcode}</span>\r\n                </div> :\r\n                (\r\n                    <div className=\"container\">\r\n                        <span className=\"spantitle\">\r\n                            <div className=\"titletotal\">\r\n                                <span className=\"title1 pstyle\">Network Node Name: </span>\r\n                                <span className=\"title2 pstyle\">Kc-f7</span>\r\n                            </div>\r\n                            {tt}\r\n                            <div className=\"itembox\">\r\n                                <p className=\"result\">{result}</p>\r\n                                <button onClick={this.renderbtn}>Next</button>\r\n                            </div>\r\n                        </span>\r\n\r\n                        <div className=\"content\">\r\n                            <div className=\"chart chartlayout\">\r\n                                <p>Bandwidth Measurement Result(In, Out, Total)</p>\r\n                                <Bar \r\n                                    data={linedata}\r\n                                    width={1050}\r\n                                    height={500}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                x : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Time Offset( 5 mins )'\r\n                                                    }\r\n                                                },\r\n                                                y : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Mbps'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            {/*<div className=\"chart2 chartlayout\">\r\n                                <p>Bandwidth Measurement Reselt(Total)</p>\r\n                                <Bar \r\n                                    data={linedata2}\r\n                                    width={550}\r\n                                    height={500}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                x : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Time Offset(5 mins )'\r\n                                                    }\r\n                                                },\r\n                                                y : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Mbps'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />\r\n                            </div>*/}\r\n                            <div className=\"chart3 chartlayout\">\r\n                            <p>Total Bandwidth Distribution</p>\r\n                            <Bar \r\n                                data={linedata3}\r\n                                width={700}\r\n                                height={500}\r\n                                options={\r\n                                    {\r\n                                        scales:{\r\n                                            xAxes : {\r\n                                                display : true,\r\n                                                title: {\r\n                                                    display: true,\r\n                                                    align: 'center',\r\n                                                    font: {\r\n                                                        size: 15,\r\n                                                    },\r\n                                                    text : 'Bandwidth ( Mbps )'\r\n                                                }\r\n                                            },\r\n                                            yAxes : {\r\n                                                ticks : {\r\n                                                    max : 100,\r\n                                                    min : 0,\r\n                                                    stepSize : 5,\r\n                                                },\r\n                                                title: {\r\n                                                    display: true,\r\n                                                    align: 'end',\r\n                                                    font: {\r\n                                                        size: 15,\r\n                                                    },\r\n                                                    text: 'Frequency(%)',\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            />\r\n                            <p className=\"footertitle\">[Average : {meanValue} , Deviation : {stddevValue}]</p>\r\n                            </div>\r\n\r\n                            {/*<table className=\"tableset\">\r\n                                <thead className=\"headstyle\">\r\n                                    <tr>\r\n                                        <td>Time</td>\r\n                                        <td colSpan=\"3\">BandWidth(Mbps)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>offset</td>\r\n                                        <td>In</td>\r\n                                        <td>Out</td>\r\n                                        <td>Total</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='size'>\r\n                                    {\r\n                                        data12.map(value=>{\r\n                                            return (\r\n                                                <tr key={value.offset}>\r\n                                                    <td>{value.offset}</td>\r\n                                                    <td>{value.speed_in}</td>\r\n                                                    <td>{value.speed_out}</td>\r\n                                                    <td>{value.speed_total}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <table className=\"tableset\">\r\n                                <thead className=\"headstyle\">\r\n                                    <tr>\r\n                                        <td>Time</td>\r\n                                        <td colSpan=\"3\">BandWidth(Mbps)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>offset</td>\r\n                                        <td>In</td>\r\n                                        <td>Out</td>\r\n                                        <td>Total</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='size'>\r\n                                    {\r\n                                        data24.map(value =>{\r\n                                            return (\r\n                                                <tr key={value.offset}>\r\n                                                    <td>{value.offset}</td>\r\n                                                    <td>{value.speed_in}</td>\r\n                                                    <td>{value.speed_out}</td>\r\n                                                    <td>{value.speed_total}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>*/}\r\n                        </div>\r\n                        <footer className=\"footer\">Network Analysis in O2I System</footer>\r\n                    </div>\r\n                )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Kcf7;","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Inventorty\\Sites\\Map.js",["210","211","212","213","214","215","216"],"C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Inventorty\\Sites\\Test.js",["217","218"],"import React, { Component } from 'react';\r\nimport { GoogleMap, Marker } from \"google-maps-react\"\r\n\r\nclass Test extends Component {\r\n    render() {\r\n        const MyMapComponent = (props) => {\r\n            <GoogleMap\r\n                defaultZoom={8}\r\n                defaultCenter={{ lat: -34.397, lng: 150.644 }}\r\n            >\r\n                {props.isMarkerShown && <Marker position={{ lat: -34.397, lng: 150.644 }} />}\r\n            </GoogleMap>\r\n        }\r\n        return (\r\n            <div>\r\n                <MyMapComponent isMarkerShown />// Map with a Marker\r\n                <MyMapComponent isMarkerShown={false} />// Just only Map\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Inventorty\\Sites\\InfoMap.js",["219","220","221","222"],"C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Inventorty\\Sites\\Map2.js",["223","224","225","226","227","228","229","230","231","232","233","234"],"import React,{ useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport InfoMap2 from './InfoMap2';\r\nimport Testmap from './Testmap';\r\nimport Example from './Example';\r\nimport Googlemap from './Googlemap';\r\n\r\nexport default function Map2() {\r\n    const [mapData_s,setMapData_s] = useState([]);\r\n    const [popData_s,setPopData_s] = useState([]);\r\n    const [trunk_s,setTrunk_s] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        fuc1();\r\n        fuc2();\r\n        fuc3();\r\n    },[])\r\n\r\n    const fuc1 = async ()=>{\r\n        await axios.get('http://somweb.cf:8000/map2/wn')\r\n        .then(value=>{\r\n            //console.log(value.data.data);\r\n            setMapData_s(value.data.data);\r\n        }).catch(()=>{\r\n            throw Error;\r\n        })\r\n    };\r\n    const fuc2 = async ()=>{\r\n        await axios.get('http://somweb.cf:8000/map2/pop')\r\n        .then(value=>{\r\n            //console.log(value.data.data);\r\n            setPopData_s(value.data.data);\r\n        }).catch(()=>{\r\n            throw Error;\r\n        })\r\n    };\r\n    const fuc3 = async ()=>{\r\n        await axios.get('http://somweb.cf:8000/map2/an')\r\n        .then(value=>{\r\n            //console.log(value.data.data);\r\n            setTrunk_s(value.data.data);\r\n        }).catch(()=>{\r\n            throw Error;\r\n        })\r\n    };\r\n    const onClickbtn_s = () =>{\r\n        fuc1();\r\n        fuc2();\r\n        fuc3();\r\n    };\r\n\r\n    const totalLine = [];\r\n\r\n    mapData_s.map(value=>{\r\n        totalLine.push(value);\r\n    });\r\n    popData_s.map(value=>{\r\n        totalLine.push(value);\r\n    });\r\n    trunk_s.map(value=>{\r\n        totalLine.push(value);\r\n    })\r\n\r\n    const line1 = [];\r\n    const line2 = [];\r\n    const line3 = [];\r\n    const line4 = [];\r\n    const line5 = [];\r\n    const line6 = [];\r\n    const line7 = [];\r\n    const line8 = [];\r\n    const line9 = [];\r\n    const line10 = [];\r\n    const line11 = [];\r\n    const line12 = [];\r\n    const line13 = [];\r\n    const line14 = [];\r\n    const line15 = [];\r\n    const line16 = [];\r\n    const line17 = [];\r\n    const line18 = [];\r\n    const line19 = [];\r\n    const line20 = [];\r\n    const line21 = [];\r\n    const line22 = [];\r\n    const line23 = [];\r\n    const line24 = [];\r\n    const line25 = [];\r\n    const line26 = [];\r\n    const line27 = [];\r\n    const line28 = [];\r\n    const line29 = [];\r\n    const line30 = [];\r\n    const line31 = [];\r\n    const line32 = [];\r\n\r\n    const filtering_mapData_s = mapData_s.map((value)=>{\r\n        if(value.line === 1 && 0 <= value.bw && value.bw <= 100){\r\n            line1.push(value);\r\n        }else if(value.line === 1 && 100 < value.bw && value.bw <= 200){\r\n            line2.push(value);\r\n        }else if(value.line === 1 && 200 < value.bw && value.bw <= 300){\r\n            line3.push(value);\r\n        }else if(value.line === 1 && 300 < value.bw && value.bw <= 400){\r\n            line4.push(value);\r\n        }else if(value.line === 2 && 0 <= value.bw && value.bw <= 100){\r\n            line5.push(value);\r\n        }else if(value.line === 2 && 100 < value.bw && value.bw <= 200){\r\n            line6.push(value);\r\n        }else if(value.line === 2 && 200 < value.bw && value.bw <= 300){\r\n            line7.push(value);\r\n        }else if(value.line === 2 && 300 < value.bw && value.bw <= 400){\r\n            line8.push(value);\r\n        }else if(value.line === 3 && 0 <= value.bw && value.bw <= 100){\r\n            line9.push(value);\r\n        }else if(value.line === 3 && 100 < value.bw && value.bw <= 200){\r\n            line10.push(value);\r\n        }else if(value.line === 3 && 200 < value.bw && value.bw <= 300){\r\n            line11.push(value);\r\n        }else if(value.line === 3 && 300 < value.bw && value.bw <= 400){\r\n            line12.push(value);\r\n        }else if(value.line === 4 && 0 <= value.bw && value.bw <= 100){\r\n            line13.push(value);\r\n        }else if(value.line === 4 && 100 < value.bw && value.bw <= 200){\r\n            line14.push(value);\r\n        }else if(value.line === 4 && 200 < value.bw && value.bw <= 300){\r\n            line15.push(value);\r\n        }else if(value.line === 4 && 300 < value.bw && value.bw <= 400){\r\n            line16.push(value);\r\n        }else if(value.line === 5 && 0 <= value.bw && value.bw <= 100){\r\n            line17.push(value);\r\n        }else if(value.line === 5 && 100 < value.bw && value.bw <= 200){\r\n            line18.push(value);\r\n        }else if(value.line === 5 && 200 < value.bw && value.bw <= 300){\r\n            line19.push(value);\r\n        }else if(value.line === 5 && 300 < value.bw && value.bw <= 400){\r\n            line20.push(value);\r\n        }else if(value.line === 6 && 0 <= value.bw && value.bw <= 100){\r\n            line21.push(value);\r\n        }else if(value.line === 6 && 100 < value.bw && value.bw <= 200){\r\n            line22.push(value);\r\n        }else if(value.line === 6 && 200 < value.bw && value.bw <= 300){\r\n            line23.push(value);\r\n        }else if(value.line === 6 && 300 < value.bw && value.bw <= 400){\r\n            line24.push(value);\r\n        }else if(value.line === 7 && 0 <= value.bw && value.bw <= 100){\r\n            line25.push(value);\r\n        }else if(value.line === 7 && 100 < value.bw && value.bw <= 200){\r\n            line26.push(value);\r\n        }else if(value.line === 7 && 200 < value.bw && value.bw <= 300){\r\n            line27.push(value);\r\n        }else if(value.line === 7 && 300 < value.bw && value.bw <= 400){\r\n            line28.push(value);\r\n        }else if(value.line === 8 && 0 <= value.bw && value.bw <= 100){\r\n            line29.push(value);\r\n        }else if(value.line === 8 && 100 < value.bw && value.bw <= 200){\r\n            line30.push(value);\r\n        }else if(value.line === 8 && 200 < value.bw && value.bw <= 300){\r\n            line31.push(value);\r\n        }else if(value.line === 8 && 300 < value.bw && value.bw <= 400){\r\n            line32.push(value);\r\n        }\r\n    })\r\n    \r\n    const filtering_popData2_s = popData_s.map((value)=>{\r\n        if(value.line === 1 && 0 <= value.bw && value.bw <= 100){\r\n            line1.push(value);\r\n        }else if(value.line === 1 && 100 < value.bw && value.bw <= 200){\r\n            line2.push(value);\r\n        }else if(value.line === 1 && 200 < value.bw && value.bw <= 300){\r\n            line3.push(value);\r\n        }else if(value.line === 1 && 300 < value.bw && value.bw <= 400){\r\n            line4.push(value);\r\n        }else if(value.line === 2 && 0 <= value.bw && value.bw <= 100){\r\n            line5.push(value);\r\n        }else if(value.line === 2 && 100 < value.bw && value.bw <= 200){\r\n            line6.push(value);\r\n        }else if(value.line === 2 && 200 < value.bw && value.bw <= 300){\r\n            line7.push(value);\r\n        }else if(value.line === 2 && 300 < value.bw && value.bw <= 400){\r\n            line8.push(value);\r\n        }else if(value.line === 3 && 0 <= value.bw && value.bw <= 100){\r\n            line9.push(value);\r\n        }else if(value.line === 3 && 100 < value.bw && value.bw <= 200){\r\n            line10.push(value);\r\n        }else if(value.line === 3 && 200 < value.bw && value.bw <= 300){\r\n            line11.push(value);\r\n        }else if(value.line === 3 && 300 < value.bw && value.bw <= 400){\r\n            line12.push(value);\r\n        }else if(value.line === 4 && 0 <= value.bw && value.bw <= 100){\r\n            line13.push(value);\r\n        }else if(value.line === 4 && 100 < value.bw && value.bw <= 200){\r\n            line14.push(value);\r\n        }else if(value.line === 4 && 200 < value.bw && value.bw <= 300){\r\n            line15.push(value);\r\n        }else if(value.line === 4 && 300 < value.bw && value.bw <= 400){\r\n            line16.push(value);\r\n        }else if(value.line === 5 && 0 <= value.bw && value.bw <= 100){\r\n            line17.push(value);\r\n        }else if(value.line === 5 && 100 < value.bw && value.bw <= 200){\r\n            line18.push(value);\r\n        }else if(value.line === 5 && 200 < value.bw && value.bw <= 300){\r\n            line19.push(value);\r\n        }else if(value.line === 5 && 300 < value.bw && value.bw <= 400){\r\n            line20.push(value);\r\n        }else if(value.line === 6 && 0 <= value.bw && value.bw <= 100){\r\n            line21.push(value);\r\n        }else if(value.line === 6 && 100 < value.bw && value.bw <= 200){\r\n            line22.push(value);\r\n        }else if(value.line === 6 && 200 < value.bw && value.bw <= 300){\r\n            line23.push(value);\r\n        }else if(value.line === 6 && 300 < value.bw && value.bw <= 400){\r\n            line24.push(value);\r\n        }else if(value.line === 7 && 0 <= value.bw && value.bw <= 100){\r\n            line25.push(value);\r\n        }else if(value.line === 7 && 100 < value.bw && value.bw <= 200){\r\n            line26.push(value);\r\n        }else if(value.line === 7 && 200 < value.bw && value.bw <= 300){\r\n            line27.push(value);\r\n        }else if(value.line === 7 && 300 < value.bw && value.bw <= 400){\r\n            line28.push(value);\r\n        }else if(value.line === 8 && 0 <= value.bw && value.bw <= 100){\r\n            line29.push(value);\r\n        }else if(value.line === 8 && 100 < value.bw && value.bw <= 200){\r\n            line30.push(value);\r\n        }else if(value.line === 8 && 200 < value.bw && value.bw <= 300){\r\n            line31.push(value);\r\n        }else if(value.line === 8 && 300 < value.bw && value.bw <= 400){\r\n            line32.push(value);\r\n        }\r\n    })\r\n    \r\n    const filtering_popData3 = trunk_s.map((value)=>{\r\n        if(value.line === 1 && 0 <= value.bw && value.bw <= 100){\r\n            line1.push(value);\r\n        }else if(value.line === 1 && 100 < value.bw && value.bw <= 200){\r\n            line2.push(value);\r\n        }else if(value.line === 1 && 200 < value.bw && value.bw <= 300){\r\n            line3.push(value);\r\n        }else if(value.line === 1 && 300 < value.bw && value.bw <= 400){\r\n            line4.push(value);\r\n        }else if(value.line === 2 && 0 <= value.bw && value.bw <= 100){\r\n            line5.push(value);\r\n        }else if(value.line === 2 && 100 < value.bw && value.bw <= 200){\r\n            line6.push(value);\r\n        }else if(value.line === 2 && 200 < value.bw && value.bw <= 300){\r\n            line7.push(value);\r\n        }else if(value.line === 2 && 300 < value.bw && value.bw <= 400){\r\n            line8.push(value);\r\n        }else if(value.line === 3 && 0 <= value.bw && value.bw <= 100){\r\n            line9.push(value);\r\n        }else if(value.line === 3 && 100 < value.bw && value.bw <= 200){\r\n            line10.push(value);\r\n        }else if(value.line === 3 && 200 < value.bw && value.bw <= 300){\r\n            line11.push(value);\r\n        }else if(value.line === 3 && 300 < value.bw && value.bw <= 400){\r\n            line12.push(value);\r\n        }else if(value.line === 4 && 0 <= value.bw && value.bw <= 100){\r\n            line13.push(value);\r\n        }else if(value.line === 4 && 100 < value.bw && value.bw <= 200){\r\n            line14.push(value);\r\n        }else if(value.line === 4 && 200 < value.bw && value.bw <= 300){\r\n            line15.push(value);\r\n        }else if(value.line === 4 && 300 < value.bw && value.bw <= 400){\r\n            line16.push(value);\r\n        }else if(value.line === 5 && 0 <= value.bw && value.bw <= 100){\r\n            line17.push(value);\r\n        }else if(value.line === 5 && 100 < value.bw && value.bw <= 200){\r\n            line18.push(value);\r\n        }else if(value.line === 5 && 200 < value.bw && value.bw <= 300){\r\n            line19.push(value);\r\n        }else if(value.line === 5 && 300 < value.bw && value.bw <= 400){\r\n            line20.push(value);\r\n        }else if(value.line === 6 && 0 <= value.bw && value.bw <= 100){\r\n            line21.push(value);\r\n        }else if(value.line === 6 && 100 < value.bw && value.bw <= 200){\r\n            line22.push(value);\r\n        }else if(value.line === 6 && 200 < value.bw && value.bw <= 300){\r\n            line23.push(value);\r\n        }else if(value.line === 6 && 300 < value.bw && value.bw <= 400){\r\n            line24.push(value);\r\n        }else if(value.line === 7 && 0 <= value.bw && value.bw <= 100){\r\n            line25.push(value);\r\n        }else if(value.line === 7 && 100 < value.bw && value.bw <= 200){\r\n            line26.push(value);\r\n        }else if(value.line === 7 && 200 < value.bw && value.bw <= 300){\r\n            line27.push(value);\r\n        }else if(value.line === 7 && 300 < value.bw && value.bw <= 400){\r\n            line28.push(value);\r\n        }else if(value.line === 8 && 0 <= value.bw && value.bw <= 100){\r\n            line29.push(value);\r\n        }else if(value.line === 8 && 100 < value.bw && value.bw <= 200){\r\n            line30.push(value);\r\n        }else if(value.line === 8 && 200 < value.bw && value.bw <= 300){\r\n            line31.push(value);\r\n        }else if(value.line === 8 && 300 < value.bw && value.bw <= 400){\r\n            line32.push(value);\r\n        }\r\n    })\r\n\r\n        return (\r\n        <div>\r\n            {/*<InfoMap2\r\n                mapData_s={mapData_s}\r\n                popData_s={popData_s}\r\n                trunk_s={trunk_s}\r\n                line1={line1}\r\n                line2={line2}\r\n                line3={line3}\r\n                line4={line4}\r\n                line5={line5}\r\n                line6={line6}\r\n                line7={line7}\r\n                line8={line8}\r\n                line9={line9}\r\n                line10={line10}\r\n                line11={line11}\r\n                line12={line12}\r\n                line13={line13}\r\n                line14={line14}\r\n                line15={line15}\r\n                line16={line16}\r\n                line17={line17}\r\n                line18={line18}\r\n                line19={line19}\r\n                line20={line20}\r\n                line21={line21}\r\n                line22={line22}\r\n                line23={line23}\r\n                line24={line24}\r\n                line25={line25}\r\n                line26={line26}\r\n                line27={line27}\r\n                line28={line28}\r\n                line29={line29}\r\n                line30={line30}\r\n                line31={line31}\r\n                line32={line32}\r\n            />*/}\r\n            {/*<Testmap \r\n                totalLine={totalLine}\r\n                mapData_s={mapData_s}\r\n                popData_s={popData_s}\r\n                trunk_s={trunk_s}\r\n            />*/}\r\n            {/*<Example\r\n                totalLine={totalLine}\r\n                mapData_s={mapData_s}\r\n                popData_s={popData_s}\r\n                trunk_s={trunk_s}\r\n            />*/}\r\n            {<Googlemap totalLine={totalLine}/>}\r\n            <button onClick={onClickbtn_s}>Update</button>\r\n        </div>\r\n    )\r\n}","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Inventorty\\Sites\\InfoMap2.js",["235","236","237","238","239","240","241","242"],"/*global google*/\r\nimport React,{ useState } from 'react';\r\nimport { LoadScript, GoogleMap, Marker, InfoWindow, Polyline } from '@react-google-maps/api';\r\n\r\nexport default function InfoMap2(props) {\r\n    const [activeMarker, setActiveMarker] = useState(null);\r\n    const [mapData,setMapData] = useState(false);\r\n    const [popData,setPopData] = useState(false);\r\n    const [trunkData,setTrunkData] = useState(false);\r\n    const [bwLevel,setBwLevel] = useState(false);\r\n\r\n    const style = {\r\n        width : '1800px',\r\n        height : '700px',\r\n        margin : '20px'\r\n    };\r\n    const center = {\r\n        lat : 37.666169,\r\n        lng  : 128.710769\r\n    };\r\n    const options400 = {\r\n        strokeColor:'yellowgreen',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 8,\r\n    };\r\n    const options300 = {\r\n        strokeColor:'gold',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 6,\r\n    };\r\n    const options200 = {\r\n        strokeColor:'gray',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 4,\r\n    };\r\n    const options100 = {\r\n        strokeColor:'brown',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 2,\r\n    };\r\n\r\n    const line1 = props.line1.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line2 = props.line2.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line3 = props.line3.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line4 = props.line4.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line5 = props.line5.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line6 = props.line6.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line7 = props.line7.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line8 = props.line8.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line9 = props.line9.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line10 = props.line10.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line11 = props.line11.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line12 = props.line12.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line13 = props.line13.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line14 = props.line14.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line15 = props.line15.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line16 = props.line16.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line17 = props.line17.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line18 = props.line18.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line19 = props.line19.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line20 = props.line20.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line21 = props.line21.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line22 = props.line22.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line23 = props.line23.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line24 = props.line24.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line25 = props.line25.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line26 = props.line26.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line27 = props.line27.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line28 = props.line28.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line29 = props.line29.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line30 = props.line30.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line31 = props.line31.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line32 = props.line32.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n\r\n    const handleActiveMarker = (marker) => {\r\n        if (marker === activeMarker) {\r\n            return;\r\n        }\r\n        setActiveMarker(marker);\r\n    };\r\n    /*const handleOnLoad = (map) => {\r\n        const bounds = new google.maps.LatLngBounds();\r\n        props.mapData.forEach(({ position }) => bounds.extend(position));\r\n        map.fitBounds(bounds);\r\n    };*/\r\n\r\n    return (\r\n        <div className=\"infomap2\">\r\n            <div className=\"kinds\">\r\n                <img className=\"pop\" src=\"nodepop.png\" alt=\"pop\" />\r\n                <p>PoP</p>\r\n                <img className=\"trunk\" src=\"3.png\" alt=\"trunk\" />\r\n                <p>ACS Trunk Node</p>\r\n                <img className=\"wbn\" src=\"2.png\" alt=\"node\"/>\r\n                <p>WBN Node</p>\r\n            </div>\r\n            <div className=\"bandwidthLevel\">\r\n                <img className=\"linestyle\" src=\"color1.png\" alt=\"bw100\" />\r\n                <p>Bronze</p>\r\n                <img className=\"linestyle\" src=\"color2.png\" alt=\"bw200\" />\r\n                <p>Silver</p>\r\n                <img className=\"linestyle\" src=\"color3.png\" alt=\"bw300\" />\r\n                <p>Gold</p>\r\n                <img className=\"linestyle\" src=\"color4.png\" alt=\"bw400\"/>\r\n                <p>Platinum</p>\r\n            </div>\r\n            <LoadScript googleMapsApiKey=\"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\">\r\n                <GoogleMap\r\n                    mapContainerStyle={style}\r\n                    center={center}\r\n                    zoom={14}\r\n                    onClick={() => {\r\n                        setActiveMarker(null)\r\n                    }}\r\n                >\r\n                    {\r\n                        props.mapData_s.map((value)=>{\r\n                            //console.log(value);\r\n                            return (\r\n                                <>\r\n                                    <Marker \r\n                                    position={value}\r\n                                    key={value.num}\r\n                                    icon={\r\n                                        {\r\n                                            url : '2.png',\r\n                                            scaledSize : new google.maps.Size(20,25),\r\n                                        }\r\n                                    }\r\n                                    onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {activeMarker === value.num && (\r\n                                        <InfoWindow \r\n                                            position={{lat : value.lat, lng : value.lng}}\r\n                                            onCloseClick={() => setActiveMarker(null)}\r\n                                        >\r\n                                            <div className=\"infowindow\">\r\n                                                <p className=\"infoitem info_title\">{value.wn_node}</p>\r\n                                                <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                                <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                            </div>\r\n                                        </InfoWindow>\r\n                                        )\r\n                                    }\r\n                                </>\r\n                                )}\r\n                            )\r\n                        })\r\n                    \r\n                    {\r\n                        props.popData_s.map((value)=>{\r\n                            //console.log(value);\r\n                            return(\r\n                                <>\r\n                                    <Marker \r\n                                    position={value}\r\n                                    key={value.num}\r\n                                    icon={\r\n                                        {\r\n                                            url : 'nodepop.png',\r\n                                            scaledSize : new google.maps.Size(25,30),\r\n                                        }\r\n                                    }\r\n                                    onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                {activeMarker === value.num && (\r\n                                    <InfoWindow \r\n                                        position={{lat : value.lat, lng : value.lng}}\r\n                                        onCloseClick={() => setActiveMarker(null)}\r\n                                    >\r\n                                        <div className=\"infowindow\">\r\n                                            <p className=\"infoitem info_title\">{value.p_node}</p>\r\n                                            <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                            <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                        </div>\r\n                                    </InfoWindow>)}\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        props.trunk_s.map((value)=>{\r\n                            console.log(value);\r\n                            return(\r\n                                <>\r\n                                    <Marker \r\n                                    position={value}\r\n                                    key={value.num}\r\n                                    icon={\r\n                                        {\r\n                                            url : '3.png',\r\n                                            scaledSize : new google.maps.Size(25,30)\r\n                                        }\r\n                                    }\r\n                                    onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {activeMarker === value.num && (\r\n                                    <InfoWindow \r\n                                        position={{lat : value.lat, lng : value.lng}}\r\n                                        onCloseClick={() => setActiveMarker(null)}\r\n                                    >\r\n                                        <div className=\"infowindow\">\r\n                                            <p className=\"infoitem info_title\">{value.an_node}</p>\r\n                                            <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                            <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                        </div>\r\n                                    </InfoWindow>)}\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                    {\r\n                        props.line1.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line1} \r\n                                        options={options100}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line2.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line2} \r\n                                        options={options200}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line3.map((value)=>{\r\n                            //console.log(value);\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line3} \r\n                                        options={options300}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line4.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line4} \r\n                                        options={options400}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line5.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line5} \r\n                                        options={options100}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line6.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line6} \r\n                                        options={options200}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line7.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line7} \r\n                                        options={options300}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line8.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line8} \r\n                                        options={options400}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line9.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line9} \r\n                                        options={options100}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line10.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line10}\r\n                                        options={options200}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line11.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line11} \r\n                                        options={options300}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line12.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line12} \r\n                                        options={options400}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line13.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line13} \r\n                                        options={options100}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line14.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line14} \r\n                                        options={options200}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line15.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line15} \r\n                                        options={options300}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line16.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line16} \r\n                                        options={options400}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line17.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line17} \r\n                                        options={options100}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line18.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line18} \r\n                                        options={options200}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line19.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line19} \r\n                                        options={options300}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line20.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line20} \r\n                                        options={options400}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line21.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line21} \r\n                                        options={options100}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line22.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line22} \r\n                                        options={options200}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line23.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line23} \r\n                                        options={options300}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line24.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line24} \r\n                                        options={options400}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line25.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line25} \r\n                                        options={options100}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line26.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line26} \r\n                                        options={options200}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line27.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line27} \r\n                                        options={options300}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line28.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line28} \r\n                                        options={options400}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line29.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line29} \r\n                                        options={options100}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line30.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line30} \r\n                                        options={options200}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line31.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line31} \r\n                                        options={options300}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.line32.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={line32} \r\n                                        options={options400}\r\n                                        //onClick={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {/*activeMarker === value.num && (\r\n                                        <InfoWindow position={value}>\r\n                                            <p>{value.bw}</p>\r\n                                        </InfoWindow>\r\n                                    )*/}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                </GoogleMap>\r\n            </LoadScript>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Inventorty\\Sites\\Testmap.js",["243","244","245","246"],"/*global google*/\r\nimport React,{ useState } from 'react';\r\nimport { LoadScript, GoogleMap, Marker, InfoWindow, Polyline } from '@react-google-maps/api';\r\nexport default function Testmap(props) {\r\n    console.log(props.totalLine);\r\n    const [activeMarker, setActiveMarker] = useState(null);\r\n\r\n    const center = {\r\n        lat : 37.666169,\r\n        lng  : 128.710769\r\n    };\r\n    const options400 = {\r\n        strokeColor:'yellowgreen',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 8,\r\n    };\r\n    const options300 = {\r\n        strokeColor:'gold',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 6,\r\n    };\r\n    const options200 = {\r\n        strokeColor:'gray',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 4,\r\n    };\r\n    const options100 = {\r\n        strokeColor:'brown',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 2,\r\n    };\r\n\r\n    const arry1 = [];\r\n\r\n    (function funcc() {\r\n        for(let i = 1; i<props.totalLine.length; i++){\r\n            props.totalLine.map((value,index,arr)=>{\r\n                switch(i){\r\n                    case value.line : \r\n                        arry1.push(value);\r\n                }\r\n            })\r\n        }\r\n    }());\r\n    \r\n    const boxline1 = [];\r\n    const boxline2 = [];\r\n    const boxline3 = [];\r\n    const boxline4 = [];\r\n    const boxline5 = [];\r\n\r\n    const linebw2 = arry1.map((value,index,arr)=>{\r\n        if(value.line === 1){\r\n            //console.log(`line number : 1(T1 - POP)`);\r\n            //console.log(value);\r\n            boxline1.push(value);\r\n            return (\r\n                <Polyline\r\n                    path={boxline1}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }else if(value.line === 2){\r\n            //console.log(`line number : 2(POP - ACS)`);\r\n            //console.log(value);\r\n            boxline2.push(value);\r\n            return (\r\n                <Polyline\r\n                    path={boxline2}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }else if(value.line === 3){\r\n            //console.log(`line number : 3(T2 - POP)`);\r\n            //console.log(value);\r\n            boxline3.push(value);\r\n            return (\r\n                <Polyline\r\n                    path={boxline3}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }else if(value.line === 4){\r\n            //console.log(`line number : 4(T1 - ACS)`);\r\n            //console.log(value);\r\n            boxline4.push(value);\r\n            return (\r\n                <Polyline\r\n                    path={boxline4}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }else if(value.line === 5){\r\n            //console.log(`line number : 4(T1 - ACS)`);\r\n            //console.log(value);\r\n            boxline5.push(value);\r\n            return (\r\n                <Polyline\r\n                    path={boxline5}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }\r\n    })\r\n    /*const linebw = arry1.filter((value,index,arr)=>{\r\n        //console.log(value);\r\n        return {lat : value.lat , lng : value.lng }\r\n    }).map((value,index,arr)=>{\r\n        switch(value.bw){\r\n            case 400 : \r\n                return(\r\n                <Polyline\r\n                    path={[arr[index],arr[index+1]]}\r\n                    options={value.bw === 400 ? options400 : console.log('ERR')}\r\n                />)\r\n            case 300 : \r\n                return(\r\n                <Polyline\r\n                    path={[arr[index],arr[index+3]]}\r\n                    options={options300}\r\n                />)\r\n            case 200 : \r\n                return(\r\n                <Polyline\r\n                    path={[arr[index],arr[index+1]]}\r\n                    options={options200}\r\n                />)\r\n            case 100 : \r\n                return(\r\n                <Polyline\r\n                    path={[arr[index],arr[index+3]]}\r\n                    options={value.bw === 100 ? options100 : console.log('ERR')}\r\n                />)\r\n        }\r\n    });*/\r\n    \r\n    const handleActiveMarker = (marker) => {\r\n        if (marker === activeMarker) {\r\n            return;\r\n        }\r\n        setActiveMarker(marker);\r\n    };\r\n\r\n    /*const handleOnLoad = (map) => {\r\n        const bounds = new google.maps.LatLngBounds();\r\n        props.mapData.forEach(({ position }) => bounds.extend(position));\r\n        map.fitBounds(bounds);\r\n    };*/\r\n    const google = window.google;\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"kinds\">\r\n                <img className=\"pop\" src=\"nodepop.png\" alt=\"pop\" />\r\n                <p>PoP</p>\r\n                <img className=\"trunk\" src=\"3.png\" alt=\"trunk\" />\r\n                <p>ACS Trunk Node</p>\r\n                <img className=\"wbn\" src=\"2.png\" alt=\"node\"/>\r\n                <p>WBN Node</p>\r\n            </div>\r\n            <div className=\"bandwidthLevel\">\r\n                <img className=\"linestyle\" src=\"color1.png\" alt=\"bw100\" />\r\n                <p>Bronze</p>\r\n                <img className=\"linestyle\" src=\"color2.png\" alt=\"bw200\" />\r\n                <p>Silver</p>\r\n                <img className=\"linestyle\" src=\"color3.png\" alt=\"bw300\" />\r\n                <p>Gold</p>\r\n                <img className=\"linestyle\" src=\"color4.png\" alt=\"bw400\"/>\r\n                <p>Platinum</p>\r\n            </div>\r\n            <LoadScript googleMapsApiKey=\"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\">\r\n                <GoogleMap\r\n                    mapContainerStyle={{\r\n                        width : '1900px',\r\n                        height : '700px',\r\n                        margin : '20px'\r\n                    }}\r\n                    center={center}\r\n                    zoom={13}\r\n                    onClick={()=>{\r\n                        setActiveMarker(null)\r\n                    }}\r\n                >\r\n                    {\r\n                        props.mapData_s.map((value)=>{\r\n                            //console.log(value);\r\n                            return(\r\n                                <>\r\n                                    <Marker \r\n                                        position={value}\r\n                                        icon={\r\n                                            {\r\n                                                url : '2.png',\r\n                                                scaledSize : new google.maps.Size(20,25),\r\n                                            }\r\n                                        }\r\n                                        onMouseOver={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {activeMarker === value.num && (\r\n                                        <InfoWindow \r\n                                            position={{lat : value.lat , lng : value.lng}}\r\n                                            onCloseClick={() => setActiveMarker(null)}\r\n                                        >\r\n                                            <div className=\"infowindow\">\r\n                                                <p className=\"infoitem info_title\">{value.wn_node}</p>\r\n                                                <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                                <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                            </div>\r\n                                        </InfoWindow>\r\n                                    )}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.popData_s.map(value=>{\r\n                            //console.log(value);\r\n                            return (\r\n                                <>\r\n                                    <Marker \r\n                                        position={value}\r\n                                        icon={\r\n                                            {\r\n                                                url : 'nodepop.png',\r\n                                                scaledSize : new google.maps.Size(20,25),\r\n                                            }\r\n                                        }\r\n                                        onMouseOver={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {activeMarker === value.num && (\r\n                                        <InfoWindow \r\n                                            position={{lat : value.lat, lng : value.lng}}\r\n                                            onCloseClick={() => setActiveMarker(null)}\r\n                                        >\r\n                                            <div className=\"infowindow\">\r\n                                                <p className=\"infoitem info_title\">{value.p_node}</p>\r\n                                                <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                                <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                            </div>\r\n                                        </InfoWindow>\r\n                                    )}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.trunk_s.map(value=>{\r\n                            //console.log(value);\r\n                            return (\r\n                                <>\r\n                                <Marker \r\n                                    position={value}\r\n                                    icon={\r\n                                        {\r\n                                            url : '3.png',\r\n                                            scaledSize : new google.maps.Size(20,25),\r\n                                        }\r\n                                    }\r\n                                    onMouseOver={() => {handleActiveMarker(value.num)}}\r\n                                />\r\n                                {activeMarker === value.num && (\r\n                                    <InfoWindow \r\n                                        position={{lat : value.lat, lng : value.lng}}\r\n                                        onCloseClick={() => setActiveMarker(null)}\r\n                                    >\r\n                                        <div className=\"infowindow\">\r\n                                            <p className=\"infoitem info_title\">{value.an_node}</p>\r\n                                            <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                            <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                        </div>\r\n                                    </InfoWindow>\r\n                                )}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {linebw2}\r\n\r\n                </GoogleMap>\r\n            </LoadScript>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Inventorty\\Sites\\Example.js",["247","248","249","250","251","252","253"],"import React from 'react';\r\nimport { LoadScript, GoogleMap, Marker, InfoWindow, Polyline } from '@react-google-maps/api';\r\n\r\nconst Example = (props) => {\r\n    const center = {\r\n        lat : 37.666169,\r\n        lng  : 128.710769\r\n    };\r\n    const options400 = {\r\n        strokeColor:'yellowgreen',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 8,\r\n    };\r\n    const options300 = {\r\n        strokeColor:'gold',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 6,\r\n    };\r\n    const options200 = {\r\n        strokeColor:'gray',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 4,\r\n    };\r\n    const options100 = {\r\n        strokeColor:'brown',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 2,\r\n    };\r\n\r\n    /*const ex1 = props.totalLine.map((value,index,arr)=>{\r\n        if(value.line === 1){\r\n            \r\n            return(\r\n                <Polyline\r\n                    path={value}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }else if(value.line === 2){\r\n            return(\r\n                <Polyline\r\n                    path={value}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }else if(value.line === 3){\r\n            return(\r\n                <Polyline\r\n                    path={value}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }else if(value.line === 4){\r\n            return(\r\n                <Polyline\r\n                    path={value}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }else if(value.line === 5){\r\n            return(\r\n                <Polyline\r\n                    path={value}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }\r\n    })*/\r\n    const latLng = [\r\n        {line : 2, lat : 37.672481 ,lng : 128.736743},\r\n        {line : 2, lat : 37.679991 ,lng : 128.72379},\r\n        {line : 1, lat : 37.663903 ,lng : 128.69977},\r\n        {line : 1, lat : 37.662187 ,lng : 128.712405},\r\n    ];\r\n    latLng.sort((a,b)=>{\r\n        return a.line - b.line;\r\n    });\r\n    console.log(latLng);\r\n    \r\n    const ex1 = props.totalLine.map((value,index,arr)=>{\r\n        console.log(arr);\r\n    })\r\n    /*const sortedLine = props.totalLine.sort((a,b)=>{\r\n        return a.line - b.line;\r\n    });\r\n    console.log(sortedLine);*/\r\n\r\n        return(\r\n        <LoadScript googleMapsApiKey=\"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\">\r\n            <GoogleMap\r\n                mapContainerStyle={{\r\n                    width : '1900px',\r\n                    height : '700px',\r\n                    margin : '20px'\r\n                }}\r\n                center={center}\r\n                zoom={13}\r\n            >\r\n                {\r\n                    props.totalLine.map(value=>{\r\n                        return(\r\n                            <>\r\n                                <Marker\r\n                                    position={value}\r\n                                />\r\n                            </>\r\n                        );\r\n                    })\r\n                }\r\n                \r\n                {\r\n                    /*sortedLine.map((value,index,arr)=>{\r\n                        console.log(value.bw);\r\n                        console.log(arr);\r\n                        return(\r\n                            <Polyline \r\n                                path={arr}\r\n                                options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                            />\r\n                        );\r\n                    })*/\r\n                }\r\n                {\r\n                    props.totalLine.map((value,index,arr)=>{\r\n                        console.log(arr);\r\n                        return(\r\n                            <Polyline\r\n                                path={arr}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </GoogleMap>\r\n        </LoadScript>\r\n    );\r\n}\r\n\r\nexport default Example;","C:\\Users\\USER\\Desktop\\Project\\smfi\\Nodejs\\sh_project\\myreact2\\src\\Component\\Inventorty\\Sites\\Googlemap.js",["254","255","256","257","258"],"/*global google*/\r\nimport React,{ useState } from 'react';\r\nimport { GoogleMap, LoadScript, Marker, Polyline, InfoWindow } from '@react-google-maps/api';\r\n\r\nexport default function Googlemap({totalLine}) {\r\n    //console.log(totalLine);\r\n    const [activeMarker, setActiveMarker] = useState(null);\r\n\r\n    const google = window.google;\r\n\r\n    const center = { \r\n        lat : 37.672481, \r\n        lng : 128.736743\r\n    };\r\n    const zoom = 14;\r\n    const mapSize = {\r\n        width : '1650px',\r\n        height : '715px',\r\n        margin : '12px',\r\n    };\r\n    \r\n    const handleActiveMarker = (marker) => {\r\n        if (marker === activeMarker) {\r\n            return;\r\n        }\r\n        setActiveMarker(marker);\r\n    };\r\n\r\n        \r\n    const ifmarker = totalLine.map(value=>{\r\n        if(value.p_node){\r\n            return (\r\n                <>\r\n                <Marker \r\n                    position={value}\r\n                    icon={\r\n                        {\r\n                            url : \"smfipop.png\",\r\n                            scaledSize: new window.google.maps.Size(20,30)\r\n                        }\r\n                    }\r\n                    onClick={()=>{\r\n                        handleActiveMarker(value.num)\r\n                    }}\r\n                />\r\n                {activeMarker === value.num && (\r\n                    <InfoWindow \r\n                        position={{lat : value.lat+0.002100 , lng : value.lng}}\r\n                        onCloseClick={() => setActiveMarker(null)}\r\n                    >\r\n                        <div className=\"infowindow\">\r\n                            <p className=\"infoitem info_title\">{value.p_node}</p>\r\n                            <p className=\"infoitem\">lat : {value.lat}</p>\r\n                            <p className=\"infoitem\">lng : {value.lng}</p>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )}\r\n                </>\r\n            )\r\n        }else if(value.an_node){\r\n            return (\r\n                <>\r\n                <Marker \r\n                    position={value}\r\n                    icon={\r\n                        {\r\n                            url : \"smfitrunk.png\",\r\n                            scaledSize: new window.google.maps.Size(20,30)\r\n                        }\r\n                    }\r\n                    onClick={()=>{handleActiveMarker(value.num)}}\r\n                />\r\n                {activeMarker === value.num && (\r\n                    <InfoWindow \r\n                        position={{lat : value.lat+0.002100 , lng : value.lng}}\r\n                        onCloseClick={() => setActiveMarker(null)}\r\n                    >\r\n                        <div className=\"infowindow\">\r\n                            <p className=\"infoitem info_title\">{value.an_node}</p>\r\n                            <p className=\"infoitem\">lat : {value.lat}</p>\r\n                            <p className=\"infoitem\">lng : {value.lng}</p>\r\n                        </div>\r\n                    </InfoWindow>\r\n                )}\r\n                </>\r\n            )\r\n        }else if(value.wn_node){\r\n            if(value.battery === 100){\r\n                return (\r\n                    <>\r\n                        <Marker \r\n                            position={value}\r\n                            icon={\r\n                                {\r\n                                    url : \"smfibattery100.png\",\r\n                                    scaledSize : new window.google.maps.Size(20,30)\r\n                                }\r\n                            }\r\n                            onClick={()=>{handleActiveMarker(value.num)}}\r\n                        />\r\n                        {activeMarker === value.num && (\r\n                            <InfoWindow \r\n                                position={{lat : value.lat+0.002100 , lng : value.lng}}\r\n                                onCloseClick={() => setActiveMarker(null)}\r\n                            >\r\n                                <div className=\"infowindow\">\r\n                                    <p className=\"infoitem info_title\">{value.wn_node}</p>\r\n                                    <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                    <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                    <p className=\"infoitem\">battery : {value.battery}% </p>\r\n                                </div>\r\n                            </InfoWindow>\r\n                        )}\r\n                    </>\r\n                )\r\n            }else if(value.battery === 75){\r\n                return(\r\n                    <>\r\n                        <Marker \r\n                            position={value}\r\n                            icon={\r\n                                {\r\n                                    url : \"smfibattery75.png\",\r\n                                    scaledSize : new window.google.maps.Size(20,30)\r\n                                }\r\n                            }\r\n                            onClick={()=>{handleActiveMarker(value.num)}}\r\n                        />\r\n                        {activeMarker === value.num && (\r\n                            <InfoWindow \r\n                                position={{lat : value.lat+0.002100 , lng : value.lng}}\r\n                                onCloseClick={() => setActiveMarker(null)}\r\n                            >\r\n                                <div className=\"infowindow\">\r\n                                    <p className=\"infoitem info_title\">{value.wn_node}</p>\r\n                                    <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                    <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                    <p className=\"infoitem\">battery : {value.battery}% </p>\r\n                                </div>\r\n                            </InfoWindow>\r\n                        )}\r\n                    </>\r\n                );\r\n            }else if(value.battery === 50){\r\n                return(\r\n                    <>\r\n                        <Marker \r\n                            position={value}\r\n                            icon={\r\n                                {\r\n                                    url : \"smfibattery50.png\",\r\n                                    scaledSize : new window.google.maps.Size(20,30)\r\n                                }\r\n                            }\r\n                            onClick={()=>{handleActiveMarker(value.num)}}\r\n                        />\r\n                        {activeMarker === value.num && (\r\n                            <InfoWindow \r\n                                position={{lat : value.lat+0.002100 , lng : value.lng}}\r\n                                onCloseClick={() => setActiveMarker(null)}\r\n                            >\r\n                                <div className=\"infowindow\">\r\n                                    <p className=\"infoitem info_title\">{value.wn_node}</p>\r\n                                    <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                    <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                    <p className=\"infoitem\">battery : {value.battery}% </p>\r\n                                </div>\r\n                            </InfoWindow>\r\n                        )}\r\n                    </>\r\n                );\r\n            }else if(value.battery === 25){\r\n                return(\r\n                    <>\r\n                        <Marker \r\n                            position={value}\r\n                            icon={\r\n                                {\r\n                                    url : \"smfibattery25.png\",\r\n                                    scaledSize : new window.google.maps.Size(20,30)\r\n                                }\r\n                            }\r\n                            onClick={()=>{handleActiveMarker(value.num)}}\r\n                        />\r\n                        {activeMarker === value.num && (\r\n                            <InfoWindow \r\n                                position={{lat : value.lat+0.002100 , lng : value.lng}}\r\n                                onCloseClick={() => setActiveMarker(null)}\r\n                            >\r\n                                <div className=\"infowindow\">\r\n                                    <p className=\"infoitem info_title\">{value.wn_node}</p>\r\n                                    <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                    <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                    <p className=\"infoitem\">battery : {value.battery}% </p>\r\n                                </div>\r\n                            </InfoWindow>\r\n                        )}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n    });\r\n\r\n    const polyLine = totalLine.sort((a,b)=>{\r\n        return a.line - b.line;\r\n    });\r\n    \r\n    const options400 = {\r\n        strokeColor:'yellowgreen',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 8,\r\n    };\r\n    const options300 = {\r\n        strokeColor:'gold',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 6,\r\n    };\r\n    const options200 = {\r\n        strokeColor:'gray',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 4,\r\n    };\r\n    const options100 = {\r\n        strokeColor:'brown',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 2,\r\n    };\r\n\r\n    const bw400 = [];\r\n    const bw300 = [];\r\n    const bw200 = [];\r\n    const bw100 = [];\r\n\r\n    const bandWidth = polyLine.map((value,index,arr)=>{\r\n        if(value.bw === 400){\r\n            bw400.push(value);\r\n        }else if(value.bw === 300){\r\n            bw300.push(value);\r\n        }else if(value.bw === 200){\r\n            bw200.push(value);\r\n        }else if(value.bw === 100){\r\n            bw100.push(value);\r\n        }else {\r\n            console.log('Err');\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"googlemap\">\r\n            <fieldset className='googlemap-totalfieldset3'>\r\n                <legend className='googlemap-maintitle'>Bandwidth Line</legend>\r\n                <div className='bandwidth-style'>\r\n                    <img className='line-img' src=\"color4.png\" alt=\"bandwidth400\" />\r\n                    <p>Platinum</p>\r\n                \r\n                    <img className='line-img' src=\"color3.png\" alt=\"bandwidth300\" />\r\n                    <p>Gold</p>\r\n                \r\n                    <img className='line-img' src=\"color2.png\" alt=\"bandwidth200\" />\r\n                    <p>Silver</p>\r\n                \r\n                    <img className='line-img' src=\"color1.png\" alt=\"bandwidth100\" />\r\n                    <p>Bronze</p>\r\n                </div>\r\n            </fieldset>\r\n            <div className='googlemap-container'>\r\n                <div className=\"googlemap-alert\">\r\n                    <fieldset className='googlemap-totalfieldset'>\r\n                        <legend className='googlemap-maintitle'>Maker List</legend>\r\n                        <div className=\"googlemap-style googlemap-networknode\">\r\n                            <img className='maker-img' src=\"smfibattery100.png\" alt=\"Network Node\" />\r\n                            <p>WBN Node</p>\r\n                        </div>\r\n                        <div className=\"googlemap-style googlemap-popnode\">\r\n                            <img className='maker-img' src=\"smfipop.png\" alt=\"Pop Node\" />\r\n                            <p>Pop</p>\r\n                        </div>\r\n                        <div className=\"googlemap-style googlemap-trunknode\">\r\n                            <img className='maker-img' src=\"smfitrunk.png\" alt=\"Trunk Node\" />\r\n                            <p>ACS Trunk Node</p>\r\n                        </div>\r\n                    </fieldset>\r\n                    <fieldset className=\"googlemap-totalfieldset2\">\r\n                        <legend className='googlemap-maintitle'>Battery capacity</legend>\r\n                        <div className=\"battery-style battery100\">\r\n                            <img className='maker-img' src=\"smfibattery100.png\" alt=\"100\" />\r\n                            <p>100%</p>\r\n                        </div>\r\n                        <div className=\"battery-style battery75\">\r\n                            <img className='maker-img' src=\"smfibattery75.png\" alt=\"75\" />\r\n                            <p>75%</p>\r\n                        </div>\r\n                        <div className=\"battery-style battery50\">\r\n                            <img className='maker-img' src=\"smfibattery50.png\" alt=\"50\" />\r\n                            <p>50%</p>\r\n                        </div>\r\n                        <div className=\"battery-style battery25\">\r\n                            <img className='maker-img' src=\"smfibattery25.png\" alt=\"25\" />\r\n                            <p>25%</p>\r\n                        </div>\r\n                    </fieldset>\r\n                </div>\r\n                <LoadScript googleMapsApiKey=\"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\">\r\n                    <GoogleMap \r\n                        center={center} \r\n                        zoom={zoom} \r\n                        mapContainerStyle={mapSize} \r\n                        onClick={()=>{handleActiveMarker(null)}}\r\n                        className=\"google-map-container\"\r\n                    >\r\n                        {totalLine && ifmarker}\r\n                        {\r\n                            bw400.map(()=>{\r\n                                return (\r\n                                    <Polyline path={bw400} options={options400}/>\r\n                                )\r\n                            })\r\n                        }\r\n                        {\r\n                            bw300.map(()=>{\r\n                                return (\r\n                                    <Polyline path={bw300} options={options300}/>\r\n                                )\r\n                            })\r\n                        }\r\n                        {\r\n                            bw200.map(()=>{\r\n                                return (\r\n                                    <Polyline path={bw200} options={options200}/>\r\n                                )\r\n                            })\r\n                        }\r\n                        {\r\n                            bw100.map(()=>{\r\n                                return (\r\n                                    <Polyline path={bw100} options={options100}/>\r\n                                )\r\n                            })\r\n                        }                    \r\n                    </GoogleMap>\r\n                </LoadScript>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","severity":1,"message":"264","line":14,"column":8,"nodeType":"265","messageId":"266","endLine":14,"endColumn":12},{"ruleId":"263","severity":1,"message":"267","line":3,"column":10,"nodeType":"265","messageId":"266","endLine":3,"endColumn":14},{"ruleId":"268","severity":1,"message":"269","line":57,"column":38,"nodeType":"270","messageId":"271","endLine":57,"endColumn":40},{"ruleId":"263","severity":1,"message":"272","line":104,"column":15,"nodeType":"265","messageId":"266","endLine":104,"endColumn":22},{"ruleId":"263","severity":1,"message":"273","line":116,"column":15,"nodeType":"265","messageId":"266","endLine":116,"endColumn":16},{"ruleId":"268","severity":1,"message":"274","line":116,"column":47,"nodeType":"270","messageId":"275","endLine":116,"endColumn":49},{"ruleId":"263","severity":1,"message":"276","line":154,"column":15,"nodeType":"265","messageId":"266","endLine":154,"endColumn":23},{"ruleId":"268","severity":1,"message":"274","line":154,"column":54,"nodeType":"270","messageId":"275","endLine":154,"endColumn":56},{"ruleId":"263","severity":1,"message":"267","line":3,"column":10,"nodeType":"265","messageId":"266","endLine":3,"endColumn":14},{"ruleId":"268","severity":1,"message":"269","line":58,"column":38,"nodeType":"270","messageId":"271","endLine":58,"endColumn":40},{"ruleId":"263","severity":1,"message":"272","line":102,"column":15,"nodeType":"265","messageId":"266","endLine":102,"endColumn":22},{"ruleId":"263","severity":1,"message":"273","line":110,"column":15,"nodeType":"265","messageId":"266","endLine":110,"endColumn":16},{"ruleId":"268","severity":1,"message":"274","line":110,"column":47,"nodeType":"270","messageId":"275","endLine":110,"endColumn":49},{"ruleId":"263","severity":1,"message":"276","line":148,"column":15,"nodeType":"265","messageId":"266","endLine":148,"endColumn":23},{"ruleId":"268","severity":1,"message":"274","line":148,"column":54,"nodeType":"270","messageId":"275","endLine":148,"endColumn":56},{"ruleId":"268","severity":1,"message":"269","line":63,"column":38,"nodeType":"270","messageId":"271","endLine":63,"endColumn":40},{"ruleId":"263","severity":1,"message":"272","line":112,"column":15,"nodeType":"265","messageId":"266","endLine":112,"endColumn":22},{"ruleId":"263","severity":1,"message":"273","line":124,"column":15,"nodeType":"265","messageId":"266","endLine":124,"endColumn":16},{"ruleId":"268","severity":1,"message":"274","line":124,"column":47,"nodeType":"270","messageId":"275","endLine":124,"endColumn":49},{"ruleId":"263","severity":1,"message":"276","line":164,"column":15,"nodeType":"265","messageId":"266","endLine":164,"endColumn":23},{"ruleId":"268","severity":1,"message":"274","line":164,"column":54,"nodeType":"270","messageId":"275","endLine":164,"endColumn":56},{"ruleId":"259","replacedBy":"277"},{"ruleId":"261","replacedBy":"278"},{"ruleId":"263","severity":1,"message":"267","line":3,"column":10,"nodeType":"265","messageId":"266","endLine":3,"endColumn":14},{"ruleId":"263","severity":1,"message":"279","line":15,"column":15,"nodeType":"265","messageId":"266","endLine":15,"endColumn":22},{"ruleId":"268","severity":1,"message":"269","line":58,"column":38,"nodeType":"270","messageId":"271","endLine":58,"endColumn":40},{"ruleId":"263","severity":1,"message":"272","line":103,"column":15,"nodeType":"265","messageId":"266","endLine":103,"endColumn":22},{"ruleId":"263","severity":1,"message":"273","line":115,"column":15,"nodeType":"265","messageId":"266","endLine":115,"endColumn":16},{"ruleId":"268","severity":1,"message":"274","line":115,"column":47,"nodeType":"270","messageId":"275","endLine":115,"endColumn":49},{"ruleId":"263","severity":1,"message":"276","line":153,"column":15,"nodeType":"265","messageId":"266","endLine":153,"endColumn":23},{"ruleId":"268","severity":1,"message":"274","line":153,"column":54,"nodeType":"270","messageId":"275","endLine":153,"endColumn":56},{"ruleId":"263","severity":1,"message":"267","line":3,"column":10,"nodeType":"265","messageId":"266","endLine":3,"endColumn":14},{"ruleId":"268","severity":1,"message":"269","line":57,"column":38,"nodeType":"270","messageId":"271","endLine":57,"endColumn":40},{"ruleId":"263","severity":1,"message":"272","line":101,"column":15,"nodeType":"265","messageId":"266","endLine":101,"endColumn":22},{"ruleId":"263","severity":1,"message":"273","line":109,"column":15,"nodeType":"265","messageId":"266","endLine":109,"endColumn":16},{"ruleId":"268","severity":1,"message":"274","line":109,"column":47,"nodeType":"270","messageId":"275","endLine":109,"endColumn":49},{"ruleId":"263","severity":1,"message":"276","line":147,"column":15,"nodeType":"265","messageId":"266","endLine":147,"endColumn":23},{"ruleId":"268","severity":1,"message":"274","line":147,"column":54,"nodeType":"270","messageId":"275","endLine":147,"endColumn":56},{"ruleId":"263","severity":1,"message":"280","line":2,"column":10,"nodeType":"265","messageId":"266","endLine":2,"endColumn":15},{"ruleId":"263","severity":1,"message":"281","line":2,"column":17,"nodeType":"265","messageId":"266","endLine":2,"endColumn":23},{"ruleId":"263","severity":1,"message":"282","line":2,"column":25,"nodeType":"265","messageId":"266","endLine":2,"endColumn":31},{"ruleId":"283","severity":1,"message":"284","line":19,"column":37,"nodeType":"285","endLine":19,"endColumn":49},{"ruleId":"283","severity":1,"message":"284","line":22,"column":37,"nodeType":"285","endLine":22,"endColumn":49},{"ruleId":"283","severity":1,"message":"284","line":28,"column":29,"nodeType":"285","endLine":28,"endColumn":60},{"ruleId":"283","severity":1,"message":"284","line":31,"column":37,"nodeType":"285","endLine":31,"endColumn":49},{"ruleId":"283","severity":1,"message":"284","line":33,"column":66,"nodeType":"285","endLine":33,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":34,"column":66,"nodeType":"285","endLine":34,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":38,"column":37,"nodeType":"285","endLine":38,"endColumn":49},{"ruleId":"283","severity":1,"message":"284","line":40,"column":66,"nodeType":"285","endLine":40,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":41,"column":66,"nodeType":"285","endLine":41,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":42,"column":66,"nodeType":"285","endLine":42,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":46,"column":37,"nodeType":"285","endLine":46,"endColumn":49},{"ruleId":"283","severity":1,"message":"284","line":48,"column":66,"nodeType":"285","endLine":48,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":49,"column":66,"nodeType":"285","endLine":49,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":50,"column":66,"nodeType":"285","endLine":50,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":54,"column":37,"nodeType":"285","endLine":54,"endColumn":49},{"ruleId":"283","severity":1,"message":"284","line":56,"column":66,"nodeType":"285","endLine":56,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":57,"column":66,"nodeType":"285","endLine":57,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":58,"column":66,"nodeType":"285","endLine":58,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":65,"column":29,"nodeType":"285","endLine":65,"endColumn":60},{"ruleId":"283","severity":1,"message":"284","line":68,"column":37,"nodeType":"285","endLine":68,"endColumn":49},{"ruleId":"283","severity":1,"message":"284","line":70,"column":66,"nodeType":"285","endLine":70,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":71,"column":66,"nodeType":"285","endLine":71,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":72,"column":66,"nodeType":"285","endLine":72,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":76,"column":37,"nodeType":"285","endLine":76,"endColumn":49},{"ruleId":"283","severity":1,"message":"284","line":78,"column":66,"nodeType":"285","endLine":78,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":79,"column":66,"nodeType":"285","endLine":79,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":80,"column":66,"nodeType":"285","endLine":80,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":84,"column":37,"nodeType":"285","endLine":84,"endColumn":49},{"ruleId":"283","severity":1,"message":"284","line":86,"column":66,"nodeType":"285","endLine":86,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":87,"column":66,"nodeType":"285","endLine":87,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":88,"column":66,"nodeType":"285","endLine":88,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":95,"column":29,"nodeType":"285","endLine":95,"endColumn":60},{"ruleId":"283","severity":1,"message":"284","line":98,"column":37,"nodeType":"285","endLine":98,"endColumn":48},{"ruleId":"283","severity":1,"message":"284","line":100,"column":66,"nodeType":"285","endLine":100,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":101,"column":66,"nodeType":"285","endLine":101,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":102,"column":66,"nodeType":"285","endLine":102,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":106,"column":37,"nodeType":"285","endLine":106,"endColumn":48},{"ruleId":"283","severity":1,"message":"284","line":108,"column":66,"nodeType":"285","endLine":108,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":109,"column":66,"nodeType":"285","endLine":109,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":110,"column":66,"nodeType":"285","endLine":110,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":114,"column":37,"nodeType":"285","endLine":114,"endColumn":48},{"ruleId":"283","severity":1,"message":"284","line":116,"column":66,"nodeType":"285","endLine":116,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":117,"column":66,"nodeType":"285","endLine":117,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":118,"column":66,"nodeType":"285","endLine":118,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":125,"column":29,"nodeType":"285","endLine":125,"endColumn":60},{"ruleId":"283","severity":1,"message":"284","line":128,"column":37,"nodeType":"285","endLine":128,"endColumn":48},{"ruleId":"283","severity":1,"message":"284","line":130,"column":66,"nodeType":"285","endLine":130,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":131,"column":66,"nodeType":"285","endLine":131,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":132,"column":66,"nodeType":"285","endLine":132,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":136,"column":37,"nodeType":"285","endLine":136,"endColumn":48},{"ruleId":"283","severity":1,"message":"284","line":138,"column":66,"nodeType":"285","endLine":138,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":139,"column":66,"nodeType":"285","endLine":139,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":140,"column":66,"nodeType":"285","endLine":140,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":141,"column":66,"nodeType":"285","endLine":141,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":145,"column":37,"nodeType":"285","endLine":145,"endColumn":48},{"ruleId":"283","severity":1,"message":"284","line":148,"column":66,"nodeType":"285","endLine":148,"endColumn":77},{"ruleId":"283","severity":1,"message":"284","line":155,"column":29,"nodeType":"285","endLine":155,"endColumn":60},{"ruleId":"283","severity":1,"message":"284","line":158,"column":37,"nodeType":"285","endLine":158,"endColumn":48},{"ruleId":"283","severity":1,"message":"284","line":160,"column":37,"nodeType":"285","endLine":160,"endColumn":48},{"ruleId":"283","severity":1,"message":"284","line":163,"column":37,"nodeType":"285","endLine":163,"endColumn":48},{"ruleId":"283","severity":1,"message":"284","line":166,"column":37,"nodeType":"285","endLine":166,"endColumn":48},{"ruleId":"283","severity":1,"message":"284","line":172,"column":29,"nodeType":"285","endLine":172,"endColumn":60},{"ruleId":"283","severity":1,"message":"284","line":175,"column":37,"nodeType":"285","endLine":175,"endColumn":48},{"ruleId":"283","severity":1,"message":"284","line":178,"column":37,"nodeType":"285","endLine":178,"endColumn":48},{"ruleId":"283","severity":1,"message":"284","line":181,"column":37,"nodeType":"285","endLine":181,"endColumn":48},{"ruleId":"283","severity":1,"message":"284","line":184,"column":37,"nodeType":"285","endLine":184,"endColumn":48},{"ruleId":"268","severity":1,"message":"269","line":61,"column":38,"nodeType":"270","messageId":"271","endLine":61,"endColumn":40},{"ruleId":"263","severity":1,"message":"272","line":110,"column":15,"nodeType":"265","messageId":"266","endLine":110,"endColumn":22},{"ruleId":"263","severity":1,"message":"273","line":122,"column":15,"nodeType":"265","messageId":"266","endLine":122,"endColumn":16},{"ruleId":"268","severity":1,"message":"274","line":122,"column":47,"nodeType":"270","messageId":"275","endLine":122,"endColumn":49},{"ruleId":"263","severity":1,"message":"276","line":158,"column":15,"nodeType":"265","messageId":"266","endLine":158,"endColumn":23},{"ruleId":"268","severity":1,"message":"274","line":158,"column":54,"nodeType":"270","messageId":"275","endLine":158,"endColumn":56},{"ruleId":"263","severity":1,"message":"286","line":1,"column":10,"nodeType":"287","messageId":"266","endLine":1,"endColumn":16},{"ruleId":"263","severity":1,"message":"288","line":77,"column":11,"nodeType":"265","messageId":"266","endLine":77,"endColumn":28},{"ruleId":"268","severity":1,"message":"274","line":77,"column":50,"nodeType":"270","messageId":"275","endLine":77,"endColumn":52},{"ruleId":"263","severity":1,"message":"289","line":117,"column":11,"nodeType":"265","messageId":"266","endLine":117,"endColumn":29},{"ruleId":"268","severity":1,"message":"274","line":117,"column":51,"nodeType":"270","messageId":"275","endLine":117,"endColumn":53},{"ruleId":"263","severity":1,"message":"290","line":157,"column":11,"nodeType":"265","messageId":"266","endLine":157,"endColumn":31},{"ruleId":"268","severity":1,"message":"274","line":157,"column":51,"nodeType":"270","messageId":"275","endLine":157,"endColumn":53},{"ruleId":"291","severity":1,"message":"292","line":16,"column":49,"nodeType":"293","messageId":"294","endLine":17,"endColumn":17},{"ruleId":"291","severity":1,"message":"292","line":17,"column":57,"nodeType":"293","messageId":"294","endLine":18,"endColumn":13},{"ruleId":"263","severity":1,"message":"295","line":3,"column":53,"nodeType":"265","messageId":"266","endLine":3,"endColumn":60},{"ruleId":"263","severity":1,"message":"296","line":10,"column":12,"nodeType":"265","messageId":"266","endLine":10,"endColumn":19},{"ruleId":"263","severity":1,"message":"297","line":82,"column":11,"nodeType":"265","messageId":"266","endLine":82,"endColumn":17},{"ruleId":"263","severity":1,"message":"298","line":91,"column":11,"nodeType":"265","messageId":"266","endLine":91,"endColumn":21},{"ruleId":"263","severity":1,"message":"299","line":3,"column":8,"nodeType":"265","messageId":"266","endLine":3,"endColumn":16},{"ruleId":"263","severity":1,"message":"300","line":4,"column":8,"nodeType":"265","messageId":"266","endLine":4,"endColumn":15},{"ruleId":"263","severity":1,"message":"301","line":5,"column":8,"nodeType":"265","messageId":"266","endLine":5,"endColumn":15},{"ruleId":"268","severity":1,"message":"274","line":54,"column":24,"nodeType":"270","messageId":"275","endLine":54,"endColumn":26},{"ruleId":"268","severity":1,"message":"274","line":57,"column":24,"nodeType":"270","messageId":"275","endLine":57,"endColumn":26},{"ruleId":"268","severity":1,"message":"274","line":60,"column":22,"nodeType":"270","messageId":"275","endLine":60,"endColumn":24},{"ruleId":"263","severity":1,"message":"302","line":97,"column":11,"nodeType":"265","messageId":"266","endLine":97,"endColumn":30},{"ruleId":"268","severity":1,"message":"274","line":97,"column":54,"nodeType":"270","messageId":"275","endLine":97,"endColumn":56},{"ruleId":"263","severity":1,"message":"303","line":165,"column":11,"nodeType":"265","messageId":"266","endLine":165,"endColumn":31},{"ruleId":"268","severity":1,"message":"274","line":165,"column":55,"nodeType":"270","messageId":"275","endLine":165,"endColumn":57},{"ruleId":"263","severity":1,"message":"304","line":233,"column":11,"nodeType":"265","messageId":"266","endLine":233,"endColumn":29},{"ruleId":"268","severity":1,"message":"274","line":233,"column":51,"nodeType":"270","messageId":"275","endLine":233,"endColumn":53},{"ruleId":"263","severity":1,"message":"305","line":7,"column":12,"nodeType":"265","messageId":"266","endLine":7,"endColumn":19},{"ruleId":"263","severity":1,"message":"306","line":7,"column":20,"nodeType":"265","messageId":"266","endLine":7,"endColumn":30},{"ruleId":"263","severity":1,"message":"307","line":8,"column":12,"nodeType":"265","messageId":"266","endLine":8,"endColumn":19},{"ruleId":"263","severity":1,"message":"308","line":8,"column":20,"nodeType":"265","messageId":"266","endLine":8,"endColumn":30},{"ruleId":"263","severity":1,"message":"309","line":9,"column":12,"nodeType":"265","messageId":"266","endLine":9,"endColumn":21},{"ruleId":"263","severity":1,"message":"310","line":9,"column":22,"nodeType":"265","messageId":"266","endLine":9,"endColumn":34},{"ruleId":"263","severity":1,"message":"296","line":10,"column":12,"nodeType":"265","messageId":"266","endLine":10,"endColumn":19},{"ruleId":"263","severity":1,"message":"311","line":10,"column":20,"nodeType":"265","messageId":"266","endLine":10,"endColumn":30},{"ruleId":"263","severity":1,"message":"286","line":1,"column":10,"nodeType":"287","messageId":"266","endLine":1,"endColumn":16},{"ruleId":"268","severity":1,"message":"274","line":37,"column":50,"nodeType":"270","messageId":"275","endLine":37,"endColumn":52},{"ruleId":"312","severity":1,"message":"313","line":38,"column":17,"nodeType":"314","messageId":"315","endLine":41,"endColumn":18},{"ruleId":"268","severity":1,"message":"269","line":52,"column":48,"nodeType":"270","messageId":"271","endLine":52,"endColumn":50},{"ruleId":"263","severity":1,"message":"316","line":2,"column":41,"nodeType":"265","messageId":"266","endLine":2,"endColumn":51},{"ruleId":"263","severity":1,"message":"298","line":9,"column":11,"nodeType":"265","messageId":"266","endLine":9,"endColumn":21},{"ruleId":"263","severity":1,"message":"317","line":14,"column":11,"nodeType":"265","messageId":"266","endLine":14,"endColumn":21},{"ruleId":"263","severity":1,"message":"318","line":19,"column":11,"nodeType":"265","messageId":"266","endLine":19,"endColumn":21},{"ruleId":"263","severity":1,"message":"319","line":24,"column":11,"nodeType":"265","messageId":"266","endLine":24,"endColumn":21},{"ruleId":"263","severity":1,"message":"320","line":80,"column":11,"nodeType":"265","messageId":"266","endLine":80,"endColumn":14},{"ruleId":"268","severity":1,"message":"274","line":80,"column":54,"nodeType":"270","messageId":"275","endLine":80,"endColumn":56},{"ruleId":"263","severity":1,"message":"286","line":1,"column":10,"nodeType":"287","messageId":"266","endLine":1,"endColumn":16},{"ruleId":"263","severity":1,"message":"321","line":9,"column":11,"nodeType":"265","messageId":"266","endLine":9,"endColumn":17},{"ruleId":"268","severity":1,"message":"269","line":30,"column":41,"nodeType":"270","messageId":"271","endLine":30,"endColumn":43},{"ruleId":"263","severity":1,"message":"322","line":234,"column":11,"nodeType":"265","messageId":"266","endLine":234,"endColumn":20},{"ruleId":"268","severity":1,"message":"274","line":234,"column":53,"nodeType":"270","messageId":"275","endLine":234,"endColumn":55},"no-native-reassign",["323"],"no-negated-in-lhs",["324"],"no-unused-vars","'Test' is defined but never used.","Identifier","unusedVar","'Line' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'stddev2' is assigned a value but never used.","'x' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'Linedata' is assigned a value but never used.",["323"],["324"],"'dataset' is assigned a value but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'google' is defined but never used.","Program","'filtering_mapData' is assigned a value but never used.","'filtering_popData2' is assigned a value but never used.","'filtering_trunkData3' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","putCommentInBraces","'InfoBox' is defined but never used.","'bwLevel' is assigned a value but never used.","'canvas' is assigned a value but never used.","'options400' is assigned a value but never used.","'InfoMap2' is defined but never used.","'Testmap' is defined but never used.","'Example' is defined but never used.","'filtering_mapData_s' is assigned a value but never used.","'filtering_popData2_s' is assigned a value but never used.","'filtering_popData3' is assigned a value but never used.","'mapData' is assigned a value but never used.","'setMapData' is assigned a value but never used.","'popData' is assigned a value but never used.","'setPopData' is assigned a value but never used.","'trunkData' is assigned a value but never used.","'setTrunkData' is assigned a value but never used.","'setBwLevel' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'InfoWindow' is defined but never used.","'options300' is assigned a value but never used.","'options200' is assigned a value but never used.","'options100' is assigned a value but never used.","'ex1' is assigned a value but never used.","'google' is assigned a value but never used.","'bandWidth' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]