{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Project\\\\smfi\\\\Nodejs\\\\sh_project\\\\myreact2\\\\src\\\\Component\\\\Inventorty\\\\Sites\\\\Map.js\",\n    _s = $RefreshSig$();\n\n/*global google*/\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, InfoWindow, LoadScript, Marker } from '@react-google-maps/api';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  _s();\n\n  /* \r\n  (1) Data 가져오기 v\r\n  (2) Google Map 연결 v\r\n  (3) Data에 있는 좌표 추출 v\r\n  (4) 추출한 좌표에 마커를 생성 v\r\n  (5) 마커 사이즈 변경\r\n  (6) 마커에 부가정보 넣기\r\n   */\n  const [mapData, setMapData] = useState([]);\n  useEffect(() => {\n    extraction();\n  }, [mapData]);\n  const style = {\n    width: '1900px',\n    height: '700px'\n  };\n  const center = {\n    lat: 37.55480,\n    lng: 126.98297\n  };\n  const point = [];\n  const icon = {\n    url: 'O2I_blue.png',\n    scale: 2\n  };\n  /*const extraction = async () =>{\r\n      await axios.get('http://somweb.cf:8000/wn-site')\r\n      .then(value=>{\r\n          setMapData(value.data.data);\r\n      })\r\n  };*/\n\n  const canvas = {\n    background: '#fff',\n    border: '1px solid #222',\n    padding: 10\n  }; //console.log(mapData);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: style,\n        center: center,\n        zoom: 12,\n        children: mapData.map(value => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Marker, {\n              position: {\n                lat: value.lat,\n                lng: value.lng\n              },\n              icon: icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 37\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Map, \"rhgITxDqAE4WayuCCbDkkvd6LZE=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Project/smfi/Nodejs/sh_project/myreact2/src/Component/Inventorty/Sites/Map.js"],"names":["React","useState","useEffect","GoogleMap","InfoWindow","LoadScript","Marker","axios","Map","mapData","setMapData","extraction","style","width","height","center","lat","lng","point","icon","url","scale","canvas","background","border","padding","map","value"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,SAAT,EAAmBC,UAAnB,EAA8BC,UAA9B,EAA0CC,MAA1C,QAAuD,wBAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,GAAT,GAAc;AAAA;;AACV;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBT,QAAQ,CAAC,EAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU;AAEb,GAHQ,EAGP,CAACF,OAAD,CAHO,CAAT;AAIA,QAAMG,KAAK,GAAG;AACVC,IAAAA,KAAK,EAAG,QADE;AAEVC,IAAAA,MAAM,EAAG;AAFC,GAAd;AAIA,QAAMC,MAAM,GAAG;AACXC,IAAAA,GAAG,EAAG,QADK;AAEXC,IAAAA,GAAG,EAAG;AAFK,GAAf;AAIA,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMC,IAAI,GAAG;AACTC,IAAAA,GAAG,EAAG,cADG;AAETC,IAAAA,KAAK,EAAG;AAFC,GAAb;AAKA;AACJ;AACA;AACA;AACA;AACA;;AAEI,QAAMC,MAAM,GAAG;AACXC,IAAAA,UAAU,EAAG,MADF;AAEXC,IAAAA,MAAM,EAAG,gBAFE;AAGXC,IAAAA,OAAO,EAAE;AAHE,GAAf,CApCU,CA0CV;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,gBAAgB,EAAC,yCAA7B;AAAA,6BACI,QAAC,SAAD;AACI,QAAA,iBAAiB,EAAEb,KADvB;AAEI,QAAA,MAAM,EAAEG,MAFZ;AAGI,QAAA,IAAI,EAAE,EAHV;AAAA,kBAMQN,OAAO,CAACiB,GAAR,CAAaC,KAAD,IAAS;AACjB,8BACI;AAAA,mCACI,QAAC,MAAD;AACI,cAAA,QAAQ,EAAE;AAACX,gBAAAA,GAAG,EAAGW,KAAK,CAACX,GAAb;AAAmBC,gBAAAA,GAAG,EAAGU,KAAK,CAACV;AAA/B,eADd;AAEI,cAAA,IAAI,EAAEE;AAFV;AAAA;AAAA;AAAA;AAAA;AADJ,2BADJ;AASH,SAVD;AANR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GArEQX,G;;KAAAA,G;AAuET,eAAeA,GAAf","sourcesContent":["/*global google*/\r\nimport React,{ useState,useEffect } from \"react\";\r\nimport { GoogleMap,InfoWindow,LoadScript, Marker} from '@react-google-maps/api';\r\nimport axios from \"axios\";\r\n\r\nfunction Map(){\r\n    /* \r\n    (1) Data 가져오기 v\r\n    (2) Google Map 연결 v\r\n    (3) Data에 있는 좌표 추출 v\r\n    (4) 추출한 좌표에 마커를 생성 v\r\n    (5) 마커 사이즈 변경\r\n    (6) 마커에 부가정보 넣기\r\n     */\r\n    const [mapData,setMapData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        extraction();\r\n\r\n    },[mapData]);\r\n    const style = {\r\n        width : '1900px',\r\n        height : '700px'\r\n    };\r\n    const center = {\r\n        lat : 37.55480,\r\n        lng : 126.98297\r\n    };\r\n    const point = [];\r\n    const icon = {\r\n        url : 'O2I_blue.png',\r\n        scale : 2,\r\n    };\r\n\r\n    /*const extraction = async () =>{\r\n        await axios.get('http://somweb.cf:8000/wn-site')\r\n        .then(value=>{\r\n            setMapData(value.data.data);\r\n        })\r\n    };*/\r\n\r\n    const canvas = {\r\n        background : '#fff',\r\n        border : '1px solid #222',\r\n        padding: 10\r\n    };\r\n\r\n    //console.log(mapData);\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            <LoadScript googleMapsApiKey=\"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\">\r\n                <GoogleMap\r\n                    mapContainerStyle={style}\r\n                    center={center}\r\n                    zoom={12}\r\n                >\r\n                    {\r\n                        mapData.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Marker \r\n                                        position={{lat : value.lat , lng : value.lng}} \r\n                                        icon={icon}\r\n                                    />\r\n                                    \r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                </GoogleMap>\r\n            </LoadScript>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}