{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Project\\\\smfi\\\\Nodejs\\\\sh_project\\\\myreact2\\\\src\\\\Component\\\\Inventorty\\\\Sites\\\\Testmap.js\",\n    _s = $RefreshSig$();\n\n/*global google*/\nimport React, { useState } from 'react';\nimport { LoadScript, GoogleMap, Marker, InfoWindow, Polyline } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Testmap(props) {\n  _s();\n\n  console.log(props.totalLine);\n  const [activeMarker, setActiveMarker] = useState(null);\n  const center = {\n    lat: 37.666169,\n    lng: 128.710769\n  };\n  const options400 = {\n    strokeColor: 'yellowgreen',\n    strokeOpacity: 0.75,\n    strokeWeight: 8\n  };\n  const options300 = {\n    strokeColor: 'gold',\n    strokeOpacity: 0.75,\n    strokeWeight: 6\n  };\n  const options200 = {\n    strokeColor: 'gray',\n    strokeOpacity: 0.75,\n    strokeWeight: 4\n  };\n  const options100 = {\n    strokeColor: 'brown',\n    strokeOpacity: 0.75,\n    strokeWeight: 2\n  };\n  const arry1 = [];\n\n  (function funcc() {\n    for (let i = 1; i < props.totalLine.length; i++) {\n      props.totalLine.map((value, index, arr) => {\n        switch (i) {\n          case value.line:\n            arry1.push(value);\n        }\n      });\n    }\n  })();\n\n  const boxline1 = [];\n  const boxline2 = [];\n  const boxline3 = [];\n  const boxline4 = [];\n  const boxline5 = [];\n  const linebw2 = arry1.map((value, index, arr) => {\n    if (value.line === 1) {\n      //console.log(`line number : 1(T1 - POP)`);\n      //console.log(value);\n      boxline1.push(value);\n      return /*#__PURE__*/_jsxDEV(Polyline, {\n        path: boxline1,\n        options: value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this);\n    } else if (value.line === 2) {\n      //console.log(`line number : 2(POP - ACS)`);\n      //console.log(value);\n      boxline2.push(value);\n      return /*#__PURE__*/_jsxDEV(Polyline, {\n        path: boxline2,\n        options: value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this);\n    } else if (value.line === 3) {\n      //console.log(`line number : 3(T2 - POP)`);\n      //console.log(value);\n      boxline3.push(value);\n      return /*#__PURE__*/_jsxDEV(Polyline, {\n        path: boxline3,\n        options: value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this);\n    } else if (value.line === 4) {\n      //console.log(`line number : 4(T1 - ACS)`);\n      //console.log(value);\n      boxline4.push(value);\n      return /*#__PURE__*/_jsxDEV(Polyline, {\n        path: boxline4,\n        options: value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this);\n    } else if (value.line === 5) {\n      //console.log(`line number : 4(T1 - ACS)`);\n      //console.log(value);\n      boxline5.push(value);\n      return /*#__PURE__*/_jsxDEV(Polyline, {\n        path: boxline5,\n        options: value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this);\n    }\n  });\n  /*const linebw = arry1.filter((value,index,arr)=>{\r\n      //console.log(value);\r\n      return {lat : value.lat , lng : value.lng }\r\n  }).map((value,index,arr)=>{\r\n      switch(value.bw){\r\n          case 400 : \r\n              return(\r\n              <Polyline\r\n                  path={[arr[index],arr[index+1]]}\r\n                  options={value.bw === 400 ? options400 : console.log('ERR')}\r\n              />)\r\n          case 300 : \r\n              return(\r\n              <Polyline\r\n                  path={[arr[index],arr[index+3]]}\r\n                  options={options300}\r\n              />)\r\n          case 200 : \r\n              return(\r\n              <Polyline\r\n                  path={[arr[index],arr[index+1]]}\r\n                  options={options200}\r\n              />)\r\n          case 100 : \r\n              return(\r\n              <Polyline\r\n                  path={[arr[index],arr[index+3]]}\r\n                  options={value.bw === 100 ? options100 : console.log('ERR')}\r\n              />)\r\n      }\r\n  });*/\n\n  const handleActiveMarker = marker => {\n    if (marker === activeMarker) {\n      return;\n    }\n\n    setActiveMarker(marker);\n  };\n  /*const handleOnLoad = (map) => {\r\n      const bounds = new google.maps.LatLngBounds();\r\n      props.mapData.forEach(({ position }) => bounds.extend(position));\r\n      map.fitBounds(bounds);\r\n  };*/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kinds\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"pop\",\n        src: \"nodepop.png\",\n        alt: \"pop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"PoP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"trunk\",\n        src: \"3.png\",\n        alt: \"trunk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"ACS Trunk Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"wbn\",\n        src: \"2.png\",\n        alt: \"node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"WBN Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bandwidthLevel\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"linestyle\",\n        src: \"color1.png\",\n        alt: \"bw100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Bronze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"linestyle\",\n        src: \"color2.png\",\n        alt: \"bw200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Silver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"linestyle\",\n        src: \"color3.png\",\n        alt: \"bw300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Gold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"linestyle\",\n        src: \"color4.png\",\n        alt: \"bw400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Platinum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\",\n      children: /*#__PURE__*/_jsxDEV(\"async\", {\n        GoogleMap: true,\n        mapContainerStyle: {\n          width: '1900px',\n          height: '700px',\n          margin: '20px'\n        },\n        center: center,\n        zoom: 13,\n        onClick: () => {\n          setActiveMarker(null);\n        },\n        children: [props.mapData_s.map(value => {\n          //console.log(value);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: value,\n              icon: {\n                url: '2.png',\n                scaledSize: new google.maps.Size(20, 25)\n              },\n              onMouseOver: () => {\n                handleActiveMarker(value.num);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 37\n            }, this), activeMarker === value.num && /*#__PURE__*/_jsxDEV(InfoWindow, {\n              position: {\n                lat: value.lat,\n                lng: value.lng\n              },\n              onCloseClick: () => setActiveMarker(null),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"infowindow\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem info_title\",\n                  children: value.wn_node\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lat : \", value.lat]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lng : \", value.lng]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true);\n        }), props.popData_s.map(value => {\n          //console.log(value);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: value,\n              icon: {\n                url: 'nodepop.png',\n                scaledSize: new google.maps.Size(20, 25)\n              },\n              onMouseOver: () => {\n                handleActiveMarker(value.num);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 37\n            }, this), activeMarker === value.num && /*#__PURE__*/_jsxDEV(InfoWindow, {\n              position: {\n                lat: value.lat,\n                lng: value.lng\n              },\n              onCloseClick: () => setActiveMarker(null),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"infowindow\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem info_title\",\n                  children: value.p_node\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lat : \", value.lat]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lng : \", value.lng]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true);\n        }), props.trunk_s.map(value => {\n          //console.log(value);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: value,\n              icon: {\n                url: '3.png',\n                scaledSize: new google.maps.Size(20, 25)\n              },\n              onMouseOver: () => {\n                handleActiveMarker(value.num);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, this), activeMarker === value.num && /*#__PURE__*/_jsxDEV(InfoWindow, {\n              position: {\n                lat: value.lat,\n                lng: value.lng\n              },\n              onCloseClick: () => setActiveMarker(null),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"infowindow\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem info_title\",\n                  children: value.an_node\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lat : \", value.lat]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lng : \", value.lng]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true);\n        }), linebw2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Testmap, \"asO/RTU+815HqBfy3jKKoWM2Okg=\");\n\n_c = Testmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Testmap\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Project/smfi/Nodejs/sh_project/myreact2/src/Component/Inventorty/Sites/Testmap.js"],"names":["React","useState","LoadScript","GoogleMap","Marker","InfoWindow","Polyline","Testmap","props","console","log","totalLine","activeMarker","setActiveMarker","center","lat","lng","options400","strokeColor","strokeOpacity","strokeWeight","options300","options200","options100","arry1","funcc","i","length","map","value","index","arr","line","push","boxline1","boxline2","boxline3","boxline4","boxline5","linebw2","bw","handleActiveMarker","marker","width","height","margin","mapData_s","url","scaledSize","google","maps","Size","num","wn_node","popData_s","p_node","trunk_s","an_node"],"mappings":"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","sourcesContent":["/*global google*/\r\nimport React,{ useState } from 'react';\r\nimport { LoadScript, GoogleMap, Marker, InfoWindow, Polyline } from '@react-google-maps/api';\r\nexport default function Testmap(props) {\r\n    console.log(props.totalLine);\r\n    const [activeMarker, setActiveMarker] = useState(null);\r\n\r\n    const center = {\r\n        lat : 37.666169,\r\n        lng  : 128.710769\r\n    };\r\n    const options400 = {\r\n        strokeColor:'yellowgreen',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 8,\r\n    };\r\n    const options300 = {\r\n        strokeColor:'gold',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 6,\r\n    };\r\n    const options200 = {\r\n        strokeColor:'gray',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 4,\r\n    };\r\n    const options100 = {\r\n        strokeColor:'brown',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 2,\r\n    };\r\n\r\n    const arry1 = [];\r\n\r\n    (function funcc() {\r\n        for(let i = 1; i<props.totalLine.length; i++){\r\n            props.totalLine.map((value,index,arr)=>{\r\n                switch(i){\r\n                    case value.line : \r\n                        arry1.push(value);\r\n                }\r\n            })\r\n        }\r\n    }());\r\n    \r\n    const boxline1 = [];\r\n    const boxline2 = [];\r\n    const boxline3 = [];\r\n    const boxline4 = [];\r\n    const boxline5 = [];\r\n\r\n    const linebw2 = arry1.map((value,index,arr)=>{\r\n        if(value.line === 1){\r\n            //console.log(`line number : 1(T1 - POP)`);\r\n            //console.log(value);\r\n            boxline1.push(value);\r\n            return (\r\n                <Polyline\r\n                    path={boxline1}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }else if(value.line === 2){\r\n            //console.log(`line number : 2(POP - ACS)`);\r\n            //console.log(value);\r\n            boxline2.push(value);\r\n            return (\r\n                <Polyline\r\n                    path={boxline2}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }else if(value.line === 3){\r\n            //console.log(`line number : 3(T2 - POP)`);\r\n            //console.log(value);\r\n            boxline3.push(value);\r\n            return (\r\n                <Polyline\r\n                    path={boxline3}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }else if(value.line === 4){\r\n            //console.log(`line number : 4(T1 - ACS)`);\r\n            //console.log(value);\r\n            boxline4.push(value);\r\n            return (\r\n                <Polyline\r\n                    path={boxline4}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }else if(value.line === 5){\r\n            //console.log(`line number : 4(T1 - ACS)`);\r\n            //console.log(value);\r\n            boxline5.push(value);\r\n            return (\r\n                <Polyline\r\n                    path={boxline5}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }\r\n    })\r\n    /*const linebw = arry1.filter((value,index,arr)=>{\r\n        //console.log(value);\r\n        return {lat : value.lat , lng : value.lng }\r\n    }).map((value,index,arr)=>{\r\n        switch(value.bw){\r\n            case 400 : \r\n                return(\r\n                <Polyline\r\n                    path={[arr[index],arr[index+1]]}\r\n                    options={value.bw === 400 ? options400 : console.log('ERR')}\r\n                />)\r\n            case 300 : \r\n                return(\r\n                <Polyline\r\n                    path={[arr[index],arr[index+3]]}\r\n                    options={options300}\r\n                />)\r\n            case 200 : \r\n                return(\r\n                <Polyline\r\n                    path={[arr[index],arr[index+1]]}\r\n                    options={options200}\r\n                />)\r\n            case 100 : \r\n                return(\r\n                <Polyline\r\n                    path={[arr[index],arr[index+3]]}\r\n                    options={value.bw === 100 ? options100 : console.log('ERR')}\r\n                />)\r\n        }\r\n    });*/\r\n    \r\n    const handleActiveMarker = (marker) => {\r\n        if (marker === activeMarker) {\r\n            return;\r\n        }\r\n        setActiveMarker(marker);\r\n    };\r\n\r\n    /*const handleOnLoad = (map) => {\r\n        const bounds = new google.maps.LatLngBounds();\r\n        props.mapData.forEach(({ position }) => bounds.extend(position));\r\n        map.fitBounds(bounds);\r\n    };*/\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"kinds\">\r\n                <img className=\"pop\" src=\"nodepop.png\" alt=\"pop\" />\r\n                <p>PoP</p>\r\n                <img className=\"trunk\" src=\"3.png\" alt=\"trunk\" />\r\n                <p>ACS Trunk Node</p>\r\n                <img className=\"wbn\" src=\"2.png\" alt=\"node\"/>\r\n                <p>WBN Node</p>\r\n            </div>\r\n            <div className=\"bandwidthLevel\">\r\n                <img className=\"linestyle\" src=\"color1.png\" alt=\"bw100\" />\r\n                <p>Bronze</p>\r\n                <img className=\"linestyle\" src=\"color2.png\" alt=\"bw200\" />\r\n                <p>Silver</p>\r\n                <img className=\"linestyle\" src=\"color3.png\" alt=\"bw300\" />\r\n                <p>Gold</p>\r\n                <img className=\"linestyle\" src=\"color4.png\" alt=\"bw400\"/>\r\n                <p>Platinum</p>\r\n            </div>\r\n            <LoadScript googleMapsApiKey=\"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\">\r\n                <async GoogleMap\r\n                    mapContainerStyle={{\r\n                        width : '1900px',\r\n                        height : '700px',\r\n                        margin : '20px'\r\n                    }}\r\n                    center={center}\r\n                    zoom={13}\r\n                    onClick={()=>{\r\n                        setActiveMarker(null)\r\n                    }}\r\n                >\r\n                    {\r\n                        props.mapData_s.map((value)=>{\r\n                            //console.log(value);\r\n                            return(\r\n                                <>\r\n                                    <Marker \r\n                                        position={value}\r\n                                        icon={\r\n                                            {\r\n                                                url : '2.png',\r\n                                                scaledSize : new google.maps.Size(20,25),\r\n                                            }\r\n                                        }\r\n                                        onMouseOver={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {activeMarker === value.num && (\r\n                                        <InfoWindow \r\n                                            position={{lat : value.lat , lng : value.lng}}\r\n                                            onCloseClick={() => setActiveMarker(null)}\r\n                                        >\r\n                                            <div className=\"infowindow\">\r\n                                                <p className=\"infoitem info_title\">{value.wn_node}</p>\r\n                                                <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                                <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                            </div>\r\n                                        </InfoWindow>\r\n                                    )}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.popData_s.map(value=>{\r\n                            //console.log(value);\r\n                            return (\r\n                                <>\r\n                                    <Marker \r\n                                        position={value}\r\n                                        icon={\r\n                                            {\r\n                                                url : 'nodepop.png',\r\n                                                scaledSize : new google.maps.Size(20,25),\r\n                                            }\r\n                                        }\r\n                                        onMouseOver={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {activeMarker === value.num && (\r\n                                        <InfoWindow \r\n                                            position={{lat : value.lat, lng : value.lng}}\r\n                                            onCloseClick={() => setActiveMarker(null)}\r\n                                        >\r\n                                            <div className=\"infowindow\">\r\n                                                <p className=\"infoitem info_title\">{value.p_node}</p>\r\n                                                <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                                <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                            </div>\r\n                                        </InfoWindow>\r\n                                    )}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.trunk_s.map(value=>{\r\n                            //console.log(value);\r\n                            return (\r\n                                <>\r\n                                <Marker \r\n                                    position={value}\r\n                                    icon={\r\n                                        {\r\n                                            url : '3.png',\r\n                                            scaledSize : new google.maps.Size(20,25),\r\n                                        }\r\n                                    }\r\n                                    onMouseOver={() => {handleActiveMarker(value.num)}}\r\n                                />\r\n                                {activeMarker === value.num && (\r\n                                    <InfoWindow \r\n                                        position={{lat : value.lat, lng : value.lng}}\r\n                                        onCloseClick={() => setActiveMarker(null)}\r\n                                    >\r\n                                        <div className=\"infowindow\">\r\n                                            <p className=\"infoitem info_title\">{value.an_node}</p>\r\n                                            <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                            <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                        </div>\r\n                                    </InfoWindow>\r\n                                )}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {linebw2}\r\n\r\n                </async>\r\n            </LoadScript>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}