{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Project\\\\smfi\\\\Nodejs\\\\sh_project\\\\myreact2\\\\src\\\\Component\\\\Inventorty\\\\Sites\\\\Map.js\",\n    _s = $RefreshSig$();\n\n/*global google*/\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport InfoMap from \"./InfoMap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  _s();\n\n  /* \r\n  (1) Data 가져오기 v\r\n  (2) Google Map 연결 v\r\n  (3) Data에 있는 좌표 추출 v\r\n  (4) 추출한 좌표에 마커를 생성 v\r\n  (5) 마커 사이즈 변경 v\r\n  (6) 마커에 부가정보 넣기\r\n  (7) 선으로 연결\r\n   */\n  const [mapData, setMapData] = useState([]);\n  const [popData, setPopData] = useState([]);\n  const [trunk, setTrunk] = useState([]);\n  const [bandWidth, setBandWidth] = useState([]);\n  useEffect(() => {\n    extraction();\n    extraction2();\n    extraction3();\n    extraction4();\n  }, []);\n  /* 데이터 가져오기 */\n\n  const extraction = async () => {\n    await axios.get('http://somweb.cf:8000/map/wn').then(value => {\n      //console.log(value.data.data);\n      setMapData(value.data.data);\n    });\n  };\n\n  const extraction2 = async () => {\n    await axios.get('http://somweb.cf:8000/map/pop').then(value => {\n      //console.log(value.data.data);\n      setPopData(value.data.data);\n    });\n  };\n\n  const extraction3 = async () => {\n    await axios.get('http://somweb.cf:8000/map/an').then(value => {\n      //console.log(value.data.data);\n      setTrunk(value.data.data);\n    });\n  };\n\n  const extraction4 = async () => {\n    await axios.get('http://somweb.cf:8000/map/bw').then(value => {\n      //console.log(value.data.data);\n      setBandWidth(value.data.data);\n    });\n  };\n  /* 좌표 저장 */\n\n  /*const WnlatLng = mapData.map((value)=>{\r\n      return value.lat, value.lng;\r\n  });\r\n    const poplatLng = mapData.map((value)=>{\r\n      return value.lat, value.lng;\r\n  });*/\n\n  /* 버튼 이벤트 */\n\n\n  const onClickbtn = () => {\n    extraction();\n    extraction2();\n    extraction3();\n    extraction4();\n  };\n\n  console.log(mapData);\n  console.log(popData);\n  console.log(trunk);\n  console.log(bandWidth);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InfoMap, {\n      mapData: mapData,\n      popData: popData,\n      trunk: trunk,\n      bandWidth: bandWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickbtn,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Map, \"eAlbuY0aHjQL6HF6Gk76mswhrV4=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Project/smfi/Nodejs/sh_project/myreact2/src/Component/Inventorty/Sites/Map.js"],"names":["React","useState","useEffect","axios","InfoMap","Map","mapData","setMapData","popData","setPopData","trunk","setTrunk","bandWidth","setBandWidth","extraction","extraction2","extraction3","extraction4","get","then","value","data","onClickbtn","console","log"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;;AACA,SAASC,GAAT,GAAc;AAAA;;AAEV;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBN,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACO,OAAD,EAASC,UAAT,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACS,KAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACW,SAAD,EAAWC,YAAX,IAA2BZ,QAAQ,CAAC,EAAD,CAAzC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,UAAU;AACVC,IAAAA,WAAW;AACXC,IAAAA,WAAW;AACXC,IAAAA,WAAW;AACd,GALQ,EAKP,EALO,CAAT;AAOA;;AACA,QAAMH,UAAU,GAAG,YAAW;AAC1B,UAAMX,KAAK,CAACe,GAAN,CAAU,8BAAV,EACLC,IADK,CACAC,KAAK,IAAE;AACT;AACAb,MAAAA,UAAU,CAACa,KAAK,CAACC,IAAN,CAAWA,IAAZ,CAAV;AACH,KAJK,CAAN;AAKH,GAND;;AAQA,QAAMN,WAAW,GAAG,YAAY;AAC5B,UAAMZ,KAAK,CAACe,GAAN,CAAU,+BAAV,EACLC,IADK,CACCC,KAAD,IAAS;AACX;AACAX,MAAAA,UAAU,CAACW,KAAK,CAACC,IAAN,CAAWA,IAAZ,CAAV;AACH,KAJK,CAAN;AAKH,GAND;;AAQA,QAAML,WAAW,GAAG,YAAW;AAC3B,UAAMb,KAAK,CAACe,GAAN,CAAU,8BAAV,EACLC,IADK,CACCC,KAAD,IAAS;AACX;AACAT,MAAAA,QAAQ,CAACS,KAAK,CAACC,IAAN,CAAWA,IAAZ,CAAR;AACH,KAJK,CAAN;AAKH,GAND;;AAQA,QAAMJ,WAAW,GAAG,YAAW;AAC3B,UAAMd,KAAK,CAACe,GAAN,CAAU,8BAAV,EACLC,IADK,CACCC,KAAD,IAAS;AACX;AACAP,MAAAA,YAAY,CAACO,KAAK,CAACC,IAAN,CAAWA,IAAZ,CAAZ;AACH,KAJK,CAAN;AAKH,GAND;AAQA;;AACA;AACJ;AACA;AACA;AACA;AACA;;AAGI;;;AACA,QAAMC,UAAU,GAAG,MAAK;AACpBR,IAAAA,UAAU;AACVC,IAAAA,WAAW;AACXC,IAAAA,WAAW;AACXC,IAAAA,WAAW;AACd,GALD;;AAOAM,EAAAA,OAAO,CAACC,GAAR,CAAYlB,OAAZ;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYZ,SAAZ;AACA,sBACI;AAAA,4BACI,QAAC,OAAD;AACI,MAAA,OAAO,EAAEN,OADb;AAEI,MAAA,OAAO,EAAEE,OAFb;AAGI,MAAA,KAAK,EAAEE,KAHX;AAII,MAAA,SAAS,EAAEE;AAJf;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAQ,MAAA,OAAO,EAAEU,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAWH;;GAxFQjB,G;;KAAAA,G;AA0FT,eAAeA,GAAf","sourcesContent":["/*global google*/\r\nimport React,{ useState,useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport InfoMap from \"./InfoMap\";\r\nfunction Map(){\r\n    \r\n    /* \r\n    (1) Data 가져오기 v\r\n    (2) Google Map 연결 v\r\n    (3) Data에 있는 좌표 추출 v\r\n    (4) 추출한 좌표에 마커를 생성 v\r\n    (5) 마커 사이즈 변경 v\r\n    (6) 마커에 부가정보 넣기\r\n    (7) 선으로 연결\r\n     */\r\n    const [mapData,setMapData] = useState([]);\r\n    const [popData,setPopData] = useState([]);\r\n    const [trunk,setTrunk] = useState([]);\r\n    const [bandWidth,setBandWidth] = useState([]);\r\n\r\n    useEffect(() => {\r\n        extraction();\r\n        extraction2();\r\n        extraction3();\r\n        extraction4();\r\n    },[]);\r\n\r\n    /* 데이터 가져오기 */\r\n    const extraction = async () =>{\r\n        await axios.get('http://somweb.cf:8000/map/wn')\r\n        .then(value=>{\r\n            //console.log(value.data.data);\r\n            setMapData(value.data.data);\r\n        })\r\n    };\r\n\r\n    const extraction2 = async () => {\r\n        await axios.get('http://somweb.cf:8000/map/pop')\r\n        .then((value)=>{\r\n            //console.log(value.data.data);\r\n            setPopData(value.data.data);\r\n        })\r\n    };\r\n\r\n    const extraction3 = async () =>{\r\n        await axios.get('http://somweb.cf:8000/map/an')\r\n        .then((value)=>{\r\n            //console.log(value.data.data);\r\n            setTrunk(value.data.data);\r\n        })\r\n    };\r\n\r\n    const extraction4 = async () =>{\r\n        await axios.get('http://somweb.cf:8000/map/bw')\r\n        .then((value)=>{\r\n            //console.log(value.data.data);\r\n            setBandWidth(value.data.data);\r\n        })\r\n    };\r\n\r\n    /* 좌표 저장 */\r\n    /*const WnlatLng = mapData.map((value)=>{\r\n        return value.lat, value.lng;\r\n    });\r\n\r\n    const poplatLng = mapData.map((value)=>{\r\n        return value.lat, value.lng;\r\n    });*/\r\n\r\n    /* 버튼 이벤트 */\r\n    const onClickbtn = () =>{\r\n        extraction();\r\n        extraction2();\r\n        extraction3();\r\n        extraction4();\r\n    };\r\n\r\n    console.log(mapData);\r\n    console.log(popData);\r\n    console.log(trunk);\r\n    console.log(bandWidth);\r\n    return (\r\n        <>\r\n            <InfoMap\r\n                mapData={mapData}\r\n                popData={popData}\r\n                trunk={trunk}\r\n                bandWidth={bandWidth}\r\n            />\r\n            <button onClick={onClickbtn}>Update</button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}