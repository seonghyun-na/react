{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Project\\\\smfi\\\\Nodejs\\\\sh_project\\\\myreact2\\\\src\\\\Component\\\\Inventorty\\\\Sites\\\\InfoMap.js\";\n\n/*global google*/\nimport React from \"react\";\nimport { GoogleMap, InfoWindow, LoadScript, Marker, InfoBox, Polyline } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function InfoMap(props) {\n  // console.log(props);\n  // console.log(props.lineGreen);\n  // console.log(props.lineBlue);\n  // console.log(props.lineOrange);\n  // console.log(props.lineGray);\n  // console.log(props.mapData);\n  // console.log(props.popData);\n  // console.log(props.trunk);\n  // console.log(props.bandWidth);\n\n  /* google map stlye */\n  const style = {\n    width: '1900px',\n    height: '700px'\n  };\n  /* google map 첫 화면 */\n\n  const center = {\n    lat: 37.57055,\n    lng: 126.97684\n  };\n  /* google map icon */\n\n  /*function initMap() {\r\n      const icon = {\r\n          url : 'pop.png',\r\n          scaledSize : new google.maps.Size(20,20),\r\n      };\r\n  }*/\n\n  /* InfoWindow style */\n\n  const canvas = {\n    background: '#fff',\n    padding: 10\n  };\n  /* infoBox options */\n  //const options = { closeBoxURL: '', enableEventPropagation: true };\n\n  /* Polygon options */\n\n  const options = {\n    strokeColor: '#FF0000',\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: false,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    zIndex: 1\n  };\n  /* Polyline options2 */\n\n  const options2 = {\n    strokeColor: 'blue',\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: false,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    zIndex: 1\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      children: /*#__PURE__*/_jsxDEV(LoadScript, {\n        googleMapsApiKey: \"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          mapContainerStyle: style,\n          center: center,\n          zoom: 15,\n          children: [props.mapData.map(value => {\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              position: {\n                lat: value.lat,\n                lng: value.lng\n              },\n              icon: {\n                url: '2.png',\n                scaledSize: new google.maps.Size(20, 20)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this);\n          }), props.popData.map(value => {\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              position: {\n                lat: value.lat,\n                lng: value.lng\n              },\n              icon: {\n                url: 'pop.png',\n                scaledSize: new google.maps.Size(20, 20)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this);\n          }), props.trunk.map(value => {\n            //console.log(value);\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Marker, {\n                position: {\n                  lat: value.lat,\n                  lng: value.lng\n                },\n                icon: {\n                  url: '3.png',\n                  scaledSize: new google.maps.Size(20, 20)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 37\n              }, this)\n            }, void 0, false);\n          }), props.lineGreen.map(value => {\n            console.log(value.lat, value.lng);\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Polyline, {\n                path: [{\n                  lat: value.lat,\n                  lng: value.lng\n                }, {\n                  lat: value.lat,\n                  lng: value.lng\n                }]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 37\n              }, this)\n            }, void 0, false);\n          }), props.lineBlue.map(value => {\n            //console.log(value);\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Polyline, {\n                path: {\n                  lat: value.lat,\n                  lng: value.lng\n                },\n                options: options2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 37\n              }, this)\n            }, void 0, false);\n          }), props.lineOrange.map(value => {\n            //console.log(value);\n            return /*#__PURE__*/_jsxDEV(Polyline, {\n              path: {\n                lat: value.lat,\n                lng: value.lng\n              },\n              options: options2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this);\n          }), props.lineGray.map(value => {\n            //console.log(value);\n            return /*#__PURE__*/_jsxDEV(Polyline, {\n              path: {\n                lat: value.lat,\n                lng: value.lng\n              },\n              options: options2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = InfoMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoMap\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Project/smfi/Nodejs/sh_project/myreact2/src/Component/Inventorty/Sites/InfoMap.js"],"names":["React","GoogleMap","InfoWindow","LoadScript","Marker","InfoBox","Polyline","InfoMap","props","style","width","height","center","lat","lng","canvas","background","padding","options","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","zIndex","options2","mapData","map","value","url","scaledSize","google","maps","Size","popData","trunk","lineGreen","console","log","lineBlue","lineOrange","lineGray"],"mappings":"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","sourcesContent":["/*global google*/\r\nimport React from \"react\";\r\nimport { GoogleMap, InfoWindow, LoadScript, Marker, InfoBox, Polyline} from '@react-google-maps/api';\r\n\r\nexport default function InfoMap(props){\r\n    // console.log(props);\r\n    // console.log(props.lineGreen);\r\n    // console.log(props.lineBlue);\r\n    // console.log(props.lineOrange);\r\n    // console.log(props.lineGray);\r\n    // console.log(props.mapData);\r\n    // console.log(props.popData);\r\n    // console.log(props.trunk);\r\n    // console.log(props.bandWidth);\r\n\r\n    /* google map stlye */\r\n    const style = {\r\n        width : '1900px',\r\n        height : '700px'\r\n    };\r\n\r\n    /* google map 첫 화면 */\r\n    const center = {\r\n        lat : 37.57055,\r\n        lng : 126.97684\r\n    };\r\n\r\n    /* google map icon */\r\n    /*function initMap() {\r\n        const icon = {\r\n            url : 'pop.png',\r\n            scaledSize : new google.maps.Size(20,20),\r\n        };\r\n    }*/\r\n\r\n    /* InfoWindow style */\r\n    const canvas = {\r\n        background : '#fff',\r\n        padding: 10\r\n    };\r\n\r\n    /* infoBox options */\r\n    //const options = { closeBoxURL: '', enableEventPropagation: true };\r\n    \r\n    /* Polygon options */\r\n    const options = {\r\n        strokeColor: '#FF0000',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 2,\r\n        fillColor: '#FF0000',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 30000,\r\n        zIndex: 1\r\n    };\r\n\r\n    /* Polyline options2 */\r\n    const options2 = {\r\n        strokeColor: 'blue',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 2,\r\n        fillColor: '#FF0000',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 30000,\r\n        zIndex: 1\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"map\">\r\n            <LoadScript googleMapsApiKey=\"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\">\r\n                <GoogleMap\r\n                    mapContainerStyle={style}\r\n                    center={center}\r\n                    zoom={15}\r\n                >\r\n                    {\r\n                        props.mapData.map((value)=>{\r\n                            return (\r\n                                <Marker \r\n                                    position={{lat : value.lat , lng : value.lng}}\r\n                                    icon={\r\n                                        {\r\n                                            url : '2.png',\r\n                                            scaledSize : new google.maps.Size(20,20),\r\n                                        }\r\n                                    }\r\n                                />\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.popData.map((value)=>{\r\n                            return (\r\n                                <Marker \r\n                                    position={{lat : value.lat , lng : value.lng}}\r\n                                    icon={\r\n                                        {\r\n                                            url : 'pop.png',\r\n                                            scaledSize : new google.maps.Size(20,20),\r\n                                        }\r\n                                    }\r\n                                />\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.trunk.map((value)=>{\r\n                            //console.log(value);\r\n                            return (\r\n                                <>\r\n                                    <Marker \r\n                                        position={{lat : value.lat , lng : value.lng}}\r\n                                        icon={\r\n                                            {\r\n                                                url : '3.png',\r\n                                                scaledSize : new google.maps.Size(20,20),\r\n                                            }\r\n                                        }\r\n                                    />\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {/* <Polyline path={[{ lat: 37.56643, lng: 126.97511}, { lat: 37.560901, lng: 126.973908 }]}/> */}\r\n                    {\r\n                        props.lineGreen.map((value)=>{\r\n                            console.log(value.lat,value.lng);\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={[{lat : value.lat, lng :value.lng},{lat : value.lat, lng :value.lng}]}\r\n                                    />\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.lineBlue.map((value)=>{\r\n                            //console.log(value);\r\n                            return (\r\n                                <>\r\n                                    <Polyline \r\n                                        path={{lat : value.lat, lng : value.lng}}\r\n                                        options={options2}\r\n                                    />\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.lineOrange.map((value)=>{\r\n                            //console.log(value);\r\n                            return (\r\n                                <Polyline \r\n                                    path={{lat : value.lat, lng : value.lng}}\r\n                                    options={options2}\r\n                                />\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.lineGray.map((value)=>{\r\n                            //console.log(value);\r\n                            return (\r\n                                <Polyline \r\n                                    path={{lat : value.lat, lng : value.lng}}\r\n                                    options={options2}\r\n                                />\r\n                            );\r\n                        })\r\n                    }\r\n                </GoogleMap>\r\n            </LoadScript>\r\n        </div>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}