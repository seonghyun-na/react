{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Project\\\\smfi\\\\Nodejs\\\\sh_project\\\\myreact2\\\\src\\\\Component\\\\Inventorty\\\\Sites\\\\Map.js\",\n    _s = $RefreshSig$();\n\n/*global google*/\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, InfoWindow, LoadScript, Marker, InfoBox, Polygon, Polyline } from '@react-google-maps/api';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  _s();\n\n  /* \r\n  (1) Data 가져오기 v\r\n  (2) Google Map 연결 v\r\n  (3) Data에 있는 좌표 추출 v\r\n  (4) 추출한 좌표에 마커를 생성 v\r\n  (5) 마커 사이즈 변경 v\r\n  (6) 마커에 부가정보 넣기\r\n  (7) 선으로 연결\r\n   */\n  const [mapData, setMapData] = useState([]);\n  const [popData, setPopData] = useState([]); //const mapData = [];\n\n  useEffect(() => {\n    extraction();\n    extraction2();\n    console.log(mapData);\n  }, []);\n\n  const extraction = async () => {\n    await axios.get('http://somweb.cf:8000/map/wn').then(value => {\n      //console.log('extraction');\n      setMapData(value.data.data);\n    });\n  };\n\n  const extraction2 = async () => {\n    await axios.get('http://somweb.cf:8000/map/pop').then(value => {\n      console.log(value.data);\n    });\n  };\n\n  const onClickbtn = () => {\n    extraction(); //console.log(\"Start\");\n  };\n\n  const style = {\n    width: '1900px',\n    height: '700px'\n  };\n  const center = {\n    lat: 37.57055,\n    lng: 126.97684\n  };\n  /*const icon = {\r\n      url : 'O2I_blue.png',\r\n      scaledSize : new google.maps.Size(20,20),\r\n  };*/\n\n  const canvas = {\n    background: '#fff',\n    padding: 10\n  };\n  /*const mouseEvent = (value) =>{\r\n      console.log(value);\r\n          <InfoWindow\r\n              position={{lat : 37.560807 , lng : 126.973924}}\r\n          >\r\n              <div style={canvas}>\r\n                  <h1>{value.id}</h1>\r\n              </div>\r\n          </InfoWindow>\r\n  }*/\n  //const options = { closeBoxURL: '', enableEventPropagation: true }; infoBox에서 사용\n\n  /* Polygon start */\n\n  const options = {\n    strokeColor: '#FF0000',\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: false,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    zIndex: 1\n  };\n  const path = [{\n    lat: 37.56643,\n    lng: 126.97511\n  }, {\n    lat: 37.571339,\n    lng: 126.968173\n  }, {\n    lat: 37.579727,\n    lng: 126.977137\n  }];\n  const options2 = {\n    strokeColor: 'blue',\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: false,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    zIndex: 1\n  };\n  const path2 = [{\n    lat: 37.56753,\n    lng: 126.98446\n  }, {\n    lat: 37.57440,\n    lng: 126.98167\n  }, {\n    lat: 37.56839,\n    lng: 126.96137\n  }, {\n    lat: 37.56691,\n    lng: 126.97295\n  }];\n  /* Polygon end */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: [/*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: style,\n        center: center,\n        zoom: 15,\n        children: [mapData.map(value => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: {\n                lat: value.lat,\n                lng: value.lng\n              },\n              icon: {\n                url: '3.png',\n                scaledSize: new google.maps.Size(15, 15)\n              } //onMouseOver={mouseEvent}\n              ,\n              onMouseOver: e => {//console.log(e);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n              path: path,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true);\n        }), path2.map(value => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n              path: path2,\n              options: options2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickbtn,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Map, \"imHLm0TJ9QFCed/F5FlYlcU+Iu4=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Project/smfi/Nodejs/sh_project/myreact2/src/Component/Inventorty/Sites/Map.js"],"names":["React","useState","useEffect","GoogleMap","InfoWindow","LoadScript","Marker","InfoBox","Polygon","Polyline","axios","Map","mapData","setMapData","popData","setPopData","extraction","extraction2","console","log","get","then","value","data","onClickbtn","style","width","height","center","lat","lng","canvas","background","padding","options","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","zIndex","path","options2","path2","map","url","scaledSize","google","maps","Size","e"],"mappings":"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","sourcesContent":["/*global google*/\r\nimport React,{ useState,useEffect } from \"react\";\r\nimport { GoogleMap,InfoWindow,LoadScript, Marker, InfoBox, Polygon, Polyline} from '@react-google-maps/api';\r\nimport axios from \"axios\";\r\nfunction Map(){\r\n    \r\n    /* \r\n    (1) Data 가져오기 v\r\n    (2) Google Map 연결 v\r\n    (3) Data에 있는 좌표 추출 v\r\n    (4) 추출한 좌표에 마커를 생성 v\r\n    (5) 마커 사이즈 변경 v\r\n    (6) 마커에 부가정보 넣기\r\n    (7) 선으로 연결\r\n     */\r\n    const [mapData,setMapData] = useState([]);\r\n    const [popData,setPopData] = useState([]);\r\n    //const mapData = [];\r\n\r\n    useEffect(() => {\r\n        extraction();\r\n        extraction2();\r\n        console.log(mapData);\r\n    },[]);\r\n\r\n    const extraction = async () =>{\r\n        await axios.get('http://somweb.cf:8000/map/wn')\r\n        .then(value=>{\r\n            //console.log('extraction');\r\n            setMapData(value.data.data);\r\n        })\r\n    };\r\n\r\n    const extraction2 = async () => {\r\n        await axios.get('http://somweb.cf:8000/map/pop')\r\n        .then((value)=>{\r\n            console.log(value.data);\r\n        })\r\n    }\r\n\r\n    const onClickbtn = () =>{\r\n        extraction();\r\n        //console.log(\"Start\");\r\n    }\r\n\r\n    const style = {\r\n        width : '1900px',\r\n        height : '700px'\r\n    };\r\n    const center = {\r\n        lat : 37.57055,\r\n        lng : 126.97684\r\n    };\r\n    /*const icon = {\r\n        url : 'O2I_blue.png',\r\n        scaledSize : new google.maps.Size(20,20),\r\n    };*/\r\n    \r\n    const canvas = {\r\n        background : '#fff',\r\n        padding: 10\r\n    };\r\n    \r\n    /*const mouseEvent = (value) =>{\r\n        console.log(value);\r\n            <InfoWindow\r\n                position={{lat : 37.560807 , lng : 126.973924}}\r\n            >\r\n                <div style={canvas}>\r\n                    <h1>{value.id}</h1>\r\n                </div>\r\n            </InfoWindow>\r\n    }*/\r\n    \r\n    //const options = { closeBoxURL: '', enableEventPropagation: true }; infoBox에서 사용\r\n    \r\n    /* Polygon start */\r\n\r\n    const options = {\r\n        strokeColor: '#FF0000',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 2,\r\n        fillColor: '#FF0000',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 30000,\r\n        zIndex: 1\r\n    };\r\n\r\n    const path = [\r\n        {lat: 37.56643, lng: 126.97511},\r\n        {lat: 37.571339, lng: 126.968173},\r\n        {lat: 37.579727, lng: 126.977137},\r\n    ];\r\n\r\n    const options2 = {\r\n        strokeColor: 'blue',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 2,\r\n        fillColor: '#FF0000',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 30000,\r\n        zIndex: 1\r\n    };\r\n\r\n    const path2 = [\r\n        {lat: 37.56753, lng: 126.98446},\r\n        {lat: 37.57440, lng: 126.98167},\r\n        {lat: 37.56839, lng: 126.96137},\r\n        {lat: 37.56691, lng: 126.97295}\r\n    ];\r\n    /* Polygon end */\r\n    return (\r\n        <div className=\"map\">\r\n            <LoadScript googleMapsApiKey=\"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\">\r\n                <GoogleMap\r\n                    mapContainerStyle={style}\r\n                    center={center}\r\n                    zoom={15}\r\n                >\r\n                    {\r\n                        mapData.map((value)=>{\r\n                            return (\r\n                                <>\r\n                                    <Marker \r\n                                        position={{lat : value.lat , lng : value.lng}} \r\n                                        icon={\r\n                                            {   url : '3.png',\r\n                                                scaledSize : new google.maps.Size(15,15),\r\n                                            }\r\n                                        }\r\n                                        //onMouseOver={mouseEvent}\r\n                                        onMouseOver={(e)=>{\r\n                                            //console.log(e);\r\n                                        }}\r\n                                    />\r\n                                    <Polyline\r\n                                    path={path}\r\n                                    options={options}\r\n                                    />\r\n                                    {/* <InfoBox\r\n                                        options={options}\r\n                                        position={{lat : value.lat , lng : value.lng}}\r\n                                    >\r\n                                    <div className=\"qwe\" style={{ backgroundColor: 'yellow', opacity: 0.75, padding: 12 }}>\r\n                                        <div style={{ fontSize: 16, fontColor: `#08233B` }}>\r\n                                        Hello, World!\r\n                                        </div>\r\n                                    </div>\r\n                                    </InfoBox> */}\r\n                                    {/* {<InfoWindow\r\n                                        position={{lat : value.lat , lng : value.lng}}\r\n                                    >\r\n                                        <div style={canvas}>\r\n                                            <h1>{value.nw_node}</h1>\r\n                                        </div>\r\n                                    </InfoWindow>} */}\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        path2.map((value)=>{\r\n                            return(\r\n                                <>\r\n                                    <Marker position={value}/>\r\n                                    <Polyline path={path2} options={options2}/>\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                </GoogleMap>\r\n            </LoadScript>\r\n            <button onClick={onClickbtn}>Update</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}