{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Project\\\\smfi\\\\Nodejs\\\\sh_project\\\\myreact2\\\\src\\\\Component\\\\Inventorty\\\\Sites\\\\Testmap.js\",\n    _s = $RefreshSig$();\n\n/*global google*/\nimport React, { useState } from 'react';\nimport { LoadScript, GoogleMap, Marker, InfoWindow, Polyline } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Testmap(props) {\n  _s();\n\n  //console.log(totalLine);\n  const [activeMarker, setActiveMarker] = useState(null);\n  const center = {\n    lat: 37.666169,\n    lng: 128.710769\n  };\n  const options400 = {\n    strokeColor: 'red',\n    strokeOpacity: 0.75,\n    strokeWeight: 8\n  };\n  const options300 = {\n    strokeColor: '#4a148c',\n    strokeOpacity: 0.75,\n    strokeWeight: 6\n  };\n  const options200 = {\n    strokeColor: '#1565c0',\n    strokeOpacity: 0.75,\n    strokeWeight: 4\n  };\n  const options100 = {\n    strokeColor: '#f57f17',\n    strokeOpacity: 0.75,\n    strokeWeight: 2\n  };\n  /*const bw400 = props.totalLine.filter((value,index,arr)=>{\r\n      return value.line === value.line && value.bw === 400 ? {lat : value.lat , lng : value.lng} : null\r\n  }).map((value,index,arr)=>{\r\n      //console.log(arr);\r\n      return (\r\n          <Polyline\r\n              path={[arr[index],arr[index+1]]}\r\n              options={options400}\r\n          />\r\n      );\r\n  })\r\n  const bw300 = props.totalLine.filter((value,index,arr)=>{\r\n      return value.line === value.line && value.bw === 300 ? {lat : value.lat , lng : value.lng} : null\r\n  }).map((value,index,arr)=>{\r\n      //console.log(arr);\r\n      return (\r\n          <Polyline\r\n              path={[arr[index],arr[index+1]]}\r\n              options={options300}\r\n          />\r\n      );\r\n  })\r\n  const bw200 = props.totalLine.filter((value,index,arr)=>{\r\n      return value.line === value.line && value.bw === 200 ? {lat : value.lat , lng : value.lng} : null\r\n  }).map((value,index,arr)=>{\r\n      //console.log(arr);\r\n      return (\r\n          <Polyline\r\n              path={[arr[index],arr[index+1]]}\r\n              options={options200}\r\n          />\r\n      )\r\n  })\r\n  const bw100 = props.totalLine.filter((value,index,arr)=>{\r\n      return value.line === value.line && value.bw === 100 ? {lat : value.lat , lng : value.lng} : null\r\n  }).map((value,index,arr)=>{\r\n      console.log(arr);\r\n      return (\r\n          <Polyline\r\n              path={[arr[index],arr[index+1]]}\r\n              options={options100}\r\n          />\r\n      )\r\n  })*/\n\n  const line1 = props.line1.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line2 = props.line2.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line3 = props.line3.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line4 = props.line4.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line5 = props.line5.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line6 = props.line6.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line7 = props.line7.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line8 = props.line8.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line9 = props.line9.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line10 = props.line10.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line11 = props.line11.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line12 = props.line12.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line13 = props.line13.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line14 = props.line14.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line15 = props.line15.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line16 = props.line16.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line17 = props.line17.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const line18 = props.line18.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n\n  const handleActiveMarker = marker => {\n    if (marker === activeMarker) {\n      return;\n    }\n\n    setActiveMarker(marker);\n  };\n\n  const handleOnLoad = map => {\n    const bounds = new google.maps.LatLngBounds();\n    props.mapData.forEach(_ref => {\n      let {\n        position\n      } = _ref;\n      return bounds.extend(position);\n    });\n    map.fitBounds(bounds);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: {\n          width: '1900px',\n          height: '700px',\n          margin: '20px'\n        },\n        center: center,\n        zoom: 13,\n        onClick: () => {\n          setActiveMarker(null);\n        },\n        children: [props.mapData_s.map(value => {\n          //console.log(value);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: value,\n              icon: {\n                url: '2.png',\n                scaledSize: new google.maps.Size(20, 25)\n              },\n              onMouseOver: () => {\n                handleActiveMarker(value.num);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this), activeMarker === value.num && /*#__PURE__*/_jsxDEV(InfoWindow, {\n              position: {\n                lat: value.lat,\n                lng: value.lng\n              },\n              onCloseClick: () => setActiveMarker(null),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"infowindow\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem info_title\",\n                  children: value.wn_node\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lat : \", value.lat]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lng : \", value.lng]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true);\n        }), props.popData_s.map(value => {\n          //console.log(value);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: value,\n              icon: {\n                url: '1.png',\n                scaledSize: new google.maps.Size(20, 25)\n              },\n              onMouseOver: () => {\n                handleActiveMarker(value.num);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 37\n            }, this), activeMarker === value.num && /*#__PURE__*/_jsxDEV(InfoWindow, {\n              position: {\n                lat: value.lat,\n                lng: value.lng\n              },\n              onCloseClick: () => setActiveMarker(null),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"infowindow\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem info_title\",\n                  children: value.p_node\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lat : \", value.lat]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lng : \", value.lng]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true);\n        }), props.trunk_s.map(value => {\n          //console.log(value);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: value,\n              icon: {\n                url: '3.png',\n                scaledSize: new google.maps.Size(20, 25)\n              },\n              onMouseOver: () => {\n                handleActiveMarker(value.num);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this), activeMarker === value.num && /*#__PURE__*/_jsxDEV(InfoWindow, {\n              position: {\n                lat: value.lat,\n                lng: value.lng\n              },\n              onCloseClick: () => setActiveMarker(null),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"infowindow\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem info_title\",\n                  children: value.an_node\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lat : \", value.lat]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lng : \", value.lng]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Testmap, \"asO/RTU+815HqBfy3jKKoWM2Okg=\");\n\n_c = Testmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Testmap\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Project/smfi/Nodejs/sh_project/myreact2/src/Component/Inventorty/Sites/Testmap.js"],"names":["React","useState","LoadScript","GoogleMap","Marker","InfoWindow","Polyline","Testmap","props","activeMarker","setActiveMarker","center","lat","lng","options400","strokeColor","strokeOpacity","strokeWeight","options300","options200","options100","line1","map","value","line2","line3","line4","line5","line6","line7","line8","line9","line10","line11","line12","line13","line14","line15","line16","line17","line18","handleActiveMarker","marker","handleOnLoad","bounds","google","maps","LatLngBounds","mapData","forEach","position","extend","fitBounds","width","height","margin","mapData_s","url","scaledSize","Size","num","wn_node","popData_s","p_node","trunk_s","an_node"],"mappings":"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","sourcesContent":["/*global google*/\r\nimport React,{ useState } from 'react';\r\nimport { LoadScript, GoogleMap, Marker, InfoWindow, Polyline } from '@react-google-maps/api';\r\nexport default function Testmap(props) {\r\n    //console.log(totalLine);\r\n\r\n    const [activeMarker, setActiveMarker] = useState(null);\r\n\r\n    const center = {\r\n        lat : 37.666169,\r\n        lng  : 128.710769\r\n    };\r\n    const options400 = {\r\n        strokeColor:'red',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 8,\r\n    };\r\n    const options300 = {\r\n        strokeColor:'#4a148c',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 6,\r\n    };\r\n    const options200 = {\r\n        strokeColor:'#1565c0',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 4,\r\n    };\r\n    const options100 = {\r\n        strokeColor:'#f57f17',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 2,\r\n    };\r\n\r\n    /*const bw400 = props.totalLine.filter((value,index,arr)=>{\r\n        return value.line === value.line && value.bw === 400 ? {lat : value.lat , lng : value.lng} : null\r\n    }).map((value,index,arr)=>{\r\n        //console.log(arr);\r\n        return (\r\n            <Polyline\r\n                path={[arr[index],arr[index+1]]}\r\n                options={options400}\r\n            />\r\n        );\r\n    })\r\n    const bw300 = props.totalLine.filter((value,index,arr)=>{\r\n        return value.line === value.line && value.bw === 300 ? {lat : value.lat , lng : value.lng} : null\r\n    }).map((value,index,arr)=>{\r\n        //console.log(arr);\r\n        return (\r\n            <Polyline\r\n                path={[arr[index],arr[index+1]]}\r\n                options={options300}\r\n            />\r\n        );\r\n    })\r\n    const bw200 = props.totalLine.filter((value,index,arr)=>{\r\n        return value.line === value.line && value.bw === 200 ? {lat : value.lat , lng : value.lng} : null\r\n    }).map((value,index,arr)=>{\r\n        //console.log(arr);\r\n        return (\r\n            <Polyline\r\n                path={[arr[index],arr[index+1]]}\r\n                options={options200}\r\n            />\r\n        )\r\n    })\r\n    const bw100 = props.totalLine.filter((value,index,arr)=>{\r\n        return value.line === value.line && value.bw === 100 ? {lat : value.lat , lng : value.lng} : null\r\n    }).map((value,index,arr)=>{\r\n        console.log(arr);\r\n        return (\r\n            <Polyline\r\n                path={[arr[index],arr[index+1]]}\r\n                options={options100}\r\n            />\r\n        )\r\n    })*/\r\n\r\n    const line1 = props.line1.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line2 = props.line2.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line3 = props.line3.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line4 = props.line4.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line5 = props.line5.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line6 = props.line6.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line7 = props.line7.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line8 = props.line8.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line9 = props.line9.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line10 = props.line10.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line11 = props.line11.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line12 = props.line12.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line13 = props.line13.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line14 = props.line14.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line15 = props.line15.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line16 = props.line16.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line17 = props.line17.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n    const line18 = props.line18.map((value)=>{\r\n        return {lat : value.lat,lng : value.lng};\r\n    });\r\n\r\n    const handleActiveMarker = (marker) => {\r\n        if (marker === activeMarker) {\r\n            return;\r\n        }\r\n        setActiveMarker(marker);\r\n    };\r\n\r\n    const handleOnLoad = (map) => {\r\n        const bounds = new google.maps.LatLngBounds();\r\n        props.mapData.forEach(({ position }) => bounds.extend(position));\r\n        map.fitBounds(bounds);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <LoadScript googleMapsApiKey=\"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\">\r\n                <GoogleMap\r\n                    mapContainerStyle={{\r\n                        width : '1900px',\r\n                        height : '700px',\r\n                        margin : '20px'\r\n                    }}\r\n                    center={center}\r\n                    zoom={13}\r\n                    onClick={()=>{setActiveMarker(null)}}\r\n                >\r\n                    {\r\n                        props.mapData_s.map((value)=>{\r\n                            //console.log(value);\r\n                            return(\r\n                                <>\r\n                                    <Marker \r\n                                        position={value}\r\n                                        icon={\r\n                                            {\r\n                                                url : '2.png',\r\n                                                scaledSize : new google.maps.Size(20,25),\r\n                                            }\r\n                                        }\r\n                                        onMouseOver={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {activeMarker === value.num && (\r\n                                        <InfoWindow \r\n                                            position={{lat : value.lat , lng : value.lng}}\r\n                                            onCloseClick={() => setActiveMarker(null)}\r\n                                        >\r\n                                            <div className=\"infowindow\">\r\n                                                <p className=\"infoitem info_title\">{value.wn_node}</p>\r\n                                                <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                                <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                            </div>\r\n                                        </InfoWindow>\r\n                                    )}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.popData_s.map(value=>{\r\n                            //console.log(value);\r\n                            return (\r\n                                <>\r\n                                    <Marker \r\n                                        position={value}\r\n                                        icon={\r\n                                            {\r\n                                                url : '1.png',\r\n                                                scaledSize : new google.maps.Size(20,25),\r\n                                            }\r\n                                        }\r\n                                        onMouseOver={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {activeMarker === value.num && (\r\n                                        <InfoWindow \r\n                                            position={{lat : value.lat, lng : value.lng}}\r\n                                            onCloseClick={() => setActiveMarker(null)}\r\n                                        >\r\n                                            <div className=\"infowindow\">\r\n                                                <p className=\"infoitem info_title\">{value.p_node}</p>\r\n                                                <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                                <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                            </div>\r\n                                        </InfoWindow>\r\n                                    )}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.trunk_s.map(value=>{\r\n                            //console.log(value);\r\n                            return (\r\n                                <>\r\n                                <Marker \r\n                                    position={value}\r\n                                    icon={\r\n                                        {\r\n                                            url : '3.png',\r\n                                            scaledSize : new google.maps.Size(20,25),\r\n                                        }\r\n                                    }\r\n                                    onMouseOver={() => {handleActiveMarker(value.num)}}\r\n                                />\r\n                                {activeMarker === value.num && (\r\n                                    <InfoWindow \r\n                                        position={{lat : value.lat, lng : value.lng}}\r\n                                        onCloseClick={() => setActiveMarker(null)}\r\n                                    >\r\n                                        <div className=\"infowindow\">\r\n                                            <p className=\"infoitem info_title\">{value.an_node}</p>\r\n                                            <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                            <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                        </div>\r\n                                    </InfoWindow>\r\n                                )}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n\r\n                    {/* {bw400}\r\n                    \r\n                    {bw300}\r\n\r\n                    {bw200}\r\n\r\n                    {bw100} */}\r\n                </GoogleMap>\r\n            </LoadScript>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}