{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Project\\\\smfi\\\\Nodejs\\\\sh_project\\\\myreact2\\\\src\\\\Component\\\\Inventorty\\\\Sites\\\\Example.js\";\nimport React from 'react';\nimport { LoadScript, GoogleMap, Marker, InfoWindow, Polyline } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Example = props => {\n  const center = {\n    lat: 37.666169,\n    lng: 128.710769\n  };\n  const options400 = {\n    strokeColor: 'yellowgreen',\n    strokeOpacity: 0.75,\n    strokeWeight: 8\n  };\n  const options300 = {\n    strokeColor: 'gold',\n    strokeOpacity: 0.75,\n    strokeWeight: 6\n  };\n  const options200 = {\n    strokeColor: 'gray',\n    strokeOpacity: 0.75,\n    strokeWeight: 4\n  };\n  const options100 = {\n    strokeColor: 'brown',\n    strokeOpacity: 0.75,\n    strokeWeight: 2\n  };\n  const ex1 = props.totalLine.map((value, index, arr) => {\n    if (value.line === 1) {\n      console.log(value);\n      return /*#__PURE__*/_jsxDEV(Polyline, {\n        path: value,\n        options: value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this);\n    } else if (value.line === 2) {\n      return /*#__PURE__*/_jsxDEV(Polyline, {\n        path: value,\n        options: value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this);\n    } else if (value.line === 3) {\n      return /*#__PURE__*/_jsxDEV(Polyline, {\n        path: value,\n        options: value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this);\n    } else if (value.line === 4) {\n      return /*#__PURE__*/_jsxDEV(Polyline, {\n        path: value,\n        options: value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this);\n    } else if (value.line === 5) {\n      return /*#__PURE__*/_jsxDEV(Polyline, {\n        path: value,\n        options: value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this);\n    }\n  });\n  console.log(ex1);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: {\n        width: '1900px',\n        height: '700px',\n        margin: '20px'\n      },\n      center: center,\n      zoom: 13,\n      children: props.totalLine.map(value => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Marker, {\n            position: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Example;\nexport default Example;\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Project/smfi/Nodejs/sh_project/myreact2/src/Component/Inventorty/Sites/Example.js"],"names":["React","LoadScript","GoogleMap","Marker","InfoWindow","Polyline","Example","props","center","lat","lng","options400","strokeColor","strokeOpacity","strokeWeight","options300","options200","options100","ex1","totalLine","map","value","index","arr","line","console","log","bw","width","height","margin"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { LoadScript, GoogleMap, Marker, InfoWindow, Polyline } from '@react-google-maps/api';\r\n\r\nconst Example = (props) => {\r\n    const center = {\r\n        lat : 37.666169,\r\n        lng  : 128.710769\r\n    };\r\n    const options400 = {\r\n        strokeColor:'yellowgreen',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 8,\r\n    };\r\n    const options300 = {\r\n        strokeColor:'gold',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 6,\r\n    };\r\n    const options200 = {\r\n        strokeColor:'gray',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 4,\r\n    };\r\n    const options100 = {\r\n        strokeColor:'brown',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 2,\r\n    };\r\n    const ex1 = props.totalLine.map((value,index,arr)=>{\r\n        if(value.line === 1){\r\n            console.log(value);\r\n            return(\r\n                <Polyline\r\n                    path={value}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }else if(value.line === 2){\r\n            return(\r\n                <Polyline\r\n                    path={value}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }else if(value.line === 3){\r\n            return(\r\n                <Polyline\r\n                    path={value}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }else if(value.line === 4){\r\n            return(\r\n                <Polyline\r\n                    path={value}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }else if(value.line === 5){\r\n            return(\r\n                <Polyline\r\n                    path={value}\r\n                    options={value.bw === 400 ? options400 : value.bw === 300 ? options300 : value.bw === 200 ? options200 : options100}\r\n                />\r\n            )\r\n        }\r\n    })\r\n    console.log(ex1);\r\n    return(\r\n        <LoadScript googleMapsApiKey=\"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\">\r\n            <GoogleMap\r\n                mapContainerStyle={{\r\n                    width : '1900px',\r\n                    height : '700px',\r\n                    margin : '20px'\r\n                }}\r\n                center={center}\r\n                zoom={13}\r\n            >\r\n                {\r\n                    props.totalLine.map(value=>{\r\n                        return(\r\n                            <>\r\n                                <Marker\r\n                                    position={value}\r\n                                />\r\n                            </>\r\n                        );\r\n                    })\r\n                }\r\n            </GoogleMap>\r\n        </LoadScript>\r\n    );\r\n}\r\n\r\nexport default Example;"]},"metadata":{},"sourceType":"module"}