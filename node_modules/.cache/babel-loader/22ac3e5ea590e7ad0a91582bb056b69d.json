{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Project\\\\smfi\\\\Nodejs\\\\sh_project\\\\myreact2\\\\src\\\\Component\\\\Wbnx1.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios'; //import Bar from 'react-chartjs-2';\n\nimport { ComposedChart, Line, Bar, XAxis, YAxis, Legend, CartesianGrid, Area, Tooltip, ReferenceLine } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Wbnx1 extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      result: [],\n      isLoading: true,\n      errcode: 'Loading...',\n      timestamp: []\n    };\n\n    this.getdata = async () => {\n      console.log(\"Requesting Data!\");\n      await axios.get('http://somweb.cf:8000/wn-t1-x1-e0').then(data => {\n        console.log('Data Check!');\n        console.log(data);\n        const mydata = data.data.data;\n        return this.setState({\n          data: mydata,\n          isLoading: false\n        });\n      }).catch(() => {\n        this.setState({\n          errcode: 'NOT FOUND FILE!'\n        });\n      });\n    };\n\n    this.gettimer = () => {\n      console.log(\"Time Start!\");\n      let time = new Date();\n      let years = time.getFullYear();\n      let month = time.getMonth();\n      let date = time.getDate();\n      let hours = time.getHours();\n      let minutes = time.getMinutes();\n      let seconds = time.getSeconds();\n      const result = `Requested Time : ${hours}:${minutes}:${seconds}, ${years}-${month + 1}-${date}`;\n      return this.setState({\n        result: result\n      });\n    };\n\n    this.getstamp = () => {\n      axios.get('http://somweb.cf:8000/wbn-timestamp').then(response => {\n        const x = response.data.data;\n        console.log('최신 데이터 시간을 업데이트하였습니다.');\n        return this.setState({\n          timestamp: x\n        });\n      }).catch(() => {\n        this.setState({\n          errcode: 'NOT FOUND FILE!'\n        });\n      });\n    };\n\n    this.renderbtn = () => {\n      this.getdata();\n      this.gettimer();\n      this.getstamp();\n    };\n  }\n\n  componentDidMount() {\n    this.getdata();\n    this.gettimer();\n    this.getstamp();\n  }\n\n  render() {\n    const {\n      data,\n      result,\n      isLoading,\n      errcode,\n      timestamp\n    } = this.state;\n    const tt = timestamp.map(data => {\n      const y = data.timestamp;\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"xx\",\n        children: [\"Last Updated at \", y, \" (offset: 5 mins)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this);\n    });\n    const data12 = data.filter(value => {\n      return value.offset < 13;\n    });\n    const data24 = data.filter(value => {\n      return value.offset >= 13;\n    });\n    const chartall = data.filter(value => {\n      return value.offset;\n    });\n    const chartoffset = chartall.map(value => {\n      return value.offset;\n    });\n    const chartspeed_in = data.map(value => {\n      return value.speed_in;\n    });\n    const chartspeed_out = data.map(value => {\n      return value.speed_out;\n    });\n    const chartspeed_total = data.map(value => {\n      return value.speed_total;\n    });\n    console.log(chartspeed_in);\n    console.log(chartspeed_out);\n    console.log(chartspeed_total);\n    console.log(data);\n\n    const sum = function (x, y) {\n      return x + y;\n    };\n\n    const square = function (x) {\n      return x * x;\n    };\n\n    const mean = chartspeed_total.reduce(sum, 0) / chartspeed_total.length;\n    const deviations = chartspeed_total.map(function (x) {\n      return x - mean;\n    });\n    const stddev = Math.sqrt(deviations.map(square).reduce(sum, 0) / (chartspeed_total.length - 1));\n    const stddev2 = new Array(24).fill(stddev);\n    console.log(mean);\n    console.log(stddev);\n    console.log(stddev2);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loader__text\",\n          children: errcode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spantitle\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"titletotal\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title1 pstyle\",\n              children: \"Network Node Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title2 pstyle\",\n              children: \"WN-T1-X1(E0)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"itembox\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"result\",\n              children: result\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.renderbtn,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this), tt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Bandwidth Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ComposedChart, {\n              width: 800,\n              height: 500,\n              data: data,\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"offset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                y: 500\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                stroke: \"#f5f5f5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"speed_in\",\n                barSize: 10,\n                fill: \"#66bb6a\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"speed_out\",\n                barSize: 10,\n                fill: \"#26c6da\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"analysis\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"BandWidth Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ComposedChart, {\n              width: 800,\n              height: 500,\n              data: data,\n              children: [/*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"offset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                dataKey: \"offset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ReferenceLine, {\n                x: \"3\",\n                stroke: \"red\",\n                label: \"Test\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"50 50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"speed_in\",\n                barSize: 10,\n                fill: \"#fdd835\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                dataKey: \"speed_out\",\n                barSize: 10,\n                fill: \"#00695c\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Wbnx1;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Project/smfi/Nodejs/sh_project/myreact2/src/Component/Wbnx1.js"],"names":["React","Component","axios","ComposedChart","Line","Bar","XAxis","YAxis","Legend","CartesianGrid","Area","Tooltip","ReferenceLine","Wbnx1","state","data","result","isLoading","errcode","timestamp","getdata","console","log","get","then","mydata","setState","catch","gettimer","time","Date","years","getFullYear","month","getMonth","date","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","getstamp","response","x","renderbtn","componentDidMount","render","tt","map","y","data12","filter","value","offset","data24","chartall","chartoffset","chartspeed_in","speed_in","chartspeed_out","speed_out","chartspeed_total","speed_total","sum","square","mean","reduce","length","deviations","stddev","Math","sqrt","stddev2","Array","fill"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n//import Bar from 'react-chartjs-2';\r\nimport { ComposedChart, Line, Bar, XAxis, YAxis, Legend, CartesianGrid, Area,Tooltip,ReferenceLine } from 'recharts';\r\n\r\nclass Wbnx1 extends Component {\r\n    state={\r\n        data : [],\r\n        result: [],\r\n        isLoading: true,\r\n        errcode: 'Loading...',\r\n        timestamp: [],\r\n    };\r\n\r\n    getdata = async () =>{\r\n        console.log(\"Requesting Data!\");\r\n        await axios.get('http://somweb.cf:8000/wn-t1-x1-e0')\r\n        .then((data) => {\r\n            console.log('Data Check!');\r\n            console.log(data);\r\n            const mydata = data.data.data;\r\n            return this.setState({data:mydata, isLoading: false});\r\n        }).catch(()=>{\r\n            this.setState({errcode:'NOT FOUND FILE!'});\r\n        })\r\n    }\r\n    gettimer = () =>{\r\n        console.log(\"Time Start!\");\r\n\r\n        let time = new Date();\r\n        let years = time.getFullYear();\r\n        let month = time.getMonth();\r\n        let date = time.getDate();\r\n        let hours = time.getHours();\r\n        let minutes = time.getMinutes();\r\n        let seconds = time.getSeconds();\r\n\r\n        const result = `Requested Time : ${hours}:${minutes}:${seconds}, ${years}-${month+1}-${date}`;\r\n\r\n        return this.setState({result:result});\r\n    }\r\n    getstamp = () =>{\r\n        axios.get('http://somweb.cf:8000/wbn-timestamp').then(response=>{\r\n            const x = response.data.data;\r\n            console.log('최신 데이터 시간을 업데이트하였습니다.');\r\n            return this.setState({timestamp : x});\r\n        }).catch(()=>{\r\n            this.setState({errcode:'NOT FOUND FILE!'});\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getdata();\r\n        this.gettimer();\r\n        this.getstamp();\r\n    }\r\n    \r\n    renderbtn = () => {\r\n        this.getdata();\r\n        this.gettimer();\r\n        this.getstamp();\r\n    }\r\n    \r\n    render() {\r\n        const {data, result,isLoading, errcode, timestamp} = this.state;\r\n        const tt = timestamp.map(data=>{\r\n            const y = data.timestamp;\r\n            return (<p className=\"xx\">Last Updated at {y} (offset: 5 mins)</p>);\r\n        });\r\n\r\n        const data12 = data.filter((value)=>{\r\n            return value.offset < 13;\r\n        });\r\n        const data24 = data.filter((value)=> {\r\n            return value.offset >= 13;\r\n        });\r\n\r\n        const chartall = data.filter((value)=>{\r\n            return value.offset;\r\n        })\r\n        const chartoffset = chartall.map((value)=>{\r\n            return value.offset;\r\n        })\r\n\r\n        const chartspeed_in = data.map((value)=>{\r\n            return value.speed_in;\r\n        });\r\n        const chartspeed_out = data.map((value)=>{\r\n            return value.speed_out;\r\n        });\r\n        const chartspeed_total = data.map((value)=>{\r\n            return value.speed_total;\r\n        });\r\n        console.log(chartspeed_in);\r\n        console.log(chartspeed_out);\r\n        console.log(chartspeed_total);\r\n        console.log(data);\r\n\r\n        const sum = function(x,y){\r\n            return x + y;\r\n        };\r\n        const square = function(x){\r\n            return x * x;\r\n        };\r\n        const mean = chartspeed_total.reduce(sum, 0)/chartspeed_total.length;\r\n        const deviations = chartspeed_total.map(function(x){\r\n            return x-mean;\r\n        });\r\n        const stddev = Math.sqrt(deviations.map(square).reduce(sum, 0)/(chartspeed_total.length-1));\r\n        const stddev2 = new Array(24).fill(stddev);\r\n        \r\n        console.log(mean);\r\n        console.log(stddev);\r\n        console.log(stddev2);\r\n        \r\n        \r\n\r\n        return (\r\n            <div className=\"table\">\r\n                {isLoading ? <div className=\"loader\">\r\n                    <span className=\"loader__text\">{errcode}</span>\r\n                </div> :\r\n                (\r\n                    <div className=\"container\">\r\n                        <span className=\"spantitle\">\r\n                            <div className=\"titletotal\">\r\n                                <span className=\"title1 pstyle\">Network Node Name:</span>\r\n                                <span className=\"title2 pstyle\">WN-T1-X1(E0)</span>\r\n                            </div>\r\n                            <div className=\"itembox\">\r\n                                <p className=\"result\">{result}</p>\r\n                                <button onClick={this.renderbtn}>Next</button>\r\n                            </div>\r\n                            {tt}\r\n                        </span>\r\n\r\n                        <div className=\"content\">\r\n                            <div className=\"chart\">\r\n                                <p>Bandwidth Result</p>\r\n                                <ComposedChart width={800} height={500} data={data}>\r\n                                    <XAxis dataKey=\"offset\"/>\r\n                                    <YAxis y={500}/>\r\n                                    <Tooltip/>\r\n                                    <Legend/>\r\n                                    <CartesianGrid stroke=\"#f5f5f5\"/>\r\n                                    <Bar dataKey=\"speed_in\" barSize={10} fill=\"#66bb6a\"/>\r\n                                    <Bar dataKey=\"speed_out\" barSize={10} fill=\"#26c6da\"/>\r\n                                </ComposedChart>\r\n                            </div>\r\n                            <div className=\"analysis\">\r\n                                <p>BandWidth Analysis</p>\r\n                                <ComposedChart width={800} height={500} data={data}>\r\n                                    <XAxis dataKey=\"offset\"/>\r\n                                    <YAxis dataKey=\"offset\"/>\r\n                                    <Tooltip/>\r\n                                    <Legend/>\r\n                                    <ReferenceLine x=\"3\" stroke=\"red\" label=\"Test\"/>\r\n                                    <CartesianGrid strokeDasharray=\"50 50\"/>\r\n                                    <Bar dataKey=\"speed_in\" barSize={10} fill=\"#fdd835\"/>\r\n                                    <Bar dataKey=\"speed_out\" barSize={10} fill=\"#00695c\"/>\r\n                                </ComposedChart>\r\n                            </div>\r\n                                {/*<Bar\r\n                                    width={600}\r\n                                    height={500}\r\n                                    data={{\r\n                                        labels: chartoffset,\r\n                                        datasets: [\r\n                                            {\r\n                                                label:'IN',\r\n                                                data: chartspeed_in,\r\n                                                fill: true,\r\n                                                backgroundColor:'rgba(75,192,192)',\r\n                                                borderColor:'rgba(75,192,192)',\r\n                                            },\r\n                                            {\r\n                                                label:'Out',\r\n                                                data: chartspeed_out,\r\n                                                fill:false,\r\n                                                backgroundColor: '#742774',\r\n                                                borderColor: '#742774',\r\n                                            },\r\n                                        ],\r\n                                    }}\r\n                                    options={\r\n                                        {\r\n                                            scales:{\r\n                                                x : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'center',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text : 'Time offset'\r\n                                                    }\r\n                                                },\r\n                                                y : {\r\n                                                    title: {\r\n                                                        display: true,\r\n                                                        align: 'end',\r\n                                                        font: {\r\n                                                            size: 15,\r\n                                                        },\r\n                                                        text: 'Mbps'\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                />*/}\r\n                            \r\n\r\n                            {/*<table className=\"tableset\">\r\n                                <thead className=\"headstyle\">\r\n                                    <tr>\r\n                                        <td>Time</td>\r\n                                        <td colSpan=\"3\">BandWidth(Mbps)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>offset</td>\r\n                                        <td>In</td>\r\n                                        <td>Out</td>\r\n                                        <td>Total</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='size'>\r\n                                    {\r\n                                        data12.map(value=>{\r\n                                            return (\r\n                                                <tr key={value.offset}>\r\n                                                    <td>{value.offset}</td>\r\n                                                    <td>{value.speed_in}</td>\r\n                                                    <td>{value.speed_out}</td>\r\n                                                    <td>{value.speed_total}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            <table className=\"tableset\">\r\n                                <thead className=\"headstyle\">\r\n                                    <tr>\r\n                                        <td>Time</td>\r\n                                        <td colSpan=\"3\">BandWidth(Mbps)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>offset</td>\r\n                                        <td>In</td>\r\n                                        <td>Out</td>\r\n                                        <td>Total</td>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody className='size'>\r\n                                    {\r\n                                        data24.map(value =>{\r\n                                            return (\r\n                                                <tr key={value.offset}>\r\n                                                    <td>{value.offset}</td>\r\n                                                    <td>{value.speed_in}</td>\r\n                                                    <td>{value.speed_out}</td>\r\n                                                    <td>{value.speed_total}</td>\r\n                                                </tr>\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </tbody>\r\n                            </table>*/}\r\n                        </div>\r\n                    </div>\r\n                )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wbnx1;"]},"metadata":{},"sourceType":"module"}