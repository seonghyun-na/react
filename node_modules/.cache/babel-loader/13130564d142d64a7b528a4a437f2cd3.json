{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Project\\\\smfi\\\\Nodejs\\\\sh_project\\\\myreact2\\\\src\\\\Component\\\\Inventorty\\\\Sites\\\\Testmap.js\",\n    _s = $RefreshSig$();\n\n/*global google*/\nimport React, { useState } from 'react';\nimport { LoadScript, GoogleMap, Marker, InfoWindow, Polyline } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Testmap(props) {\n  _s();\n\n  //console.log(props.totalLine);\n  const [activeMarker, setActiveMarker] = useState(null);\n  const center = {\n    lat: 37.666169,\n    lng: 128.710769\n  };\n  const options400 = {\n    strokeColor: 'yellowgreen',\n    strokeOpacity: 0.75,\n    strokeWeight: 8\n  };\n  const options300 = {\n    strokeColor: 'gold',\n    strokeOpacity: 0.75,\n    strokeWeight: 6\n  };\n  const options200 = {\n    strokeColor: 'gray',\n    strokeOpacity: 0.75,\n    strokeWeight: 4\n  };\n  const options100 = {\n    strokeColor: 'brown',\n    strokeOpacity: 0.75,\n    strokeWeight: 2\n  };\n  let i = 1;\n  const xx = props.totalLine.map((value, index, arr) => {\n    switch (i) {\n      case value.line:\n        console.log(value.line);\n        console.log(i);\n        console.log(value);\n\n      default:\n        console.log('oh no');\n    }\n  });\n  const bw400 = props.totalLine.filter((value, index, arr) => {\n    //console.log(index+1);\n    //console.log(value.line)\n    return value.line === index + 1 && value.bw === 400 ? {\n      lat: value.lat,\n      lng: value.lng\n    } : null;\n  }).map((value, index, arr) => {\n    //console.log(arr);\n    return /*#__PURE__*/_jsxDEV(Polyline, {\n      path: [arr[index], arr[index + 1]],\n      options: options400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  });\n  const bw300 = props.totalLine.filter((value, index, arr) => {\n    return value.line === index && value.bw === 300 ? {\n      lat: value.lat,\n      lng: value.lng\n    } : null;\n  }).map((value, index, arr) => {\n    //console.log(arr);\n    return /*#__PURE__*/_jsxDEV(Polyline, {\n      path: [arr[index], arr[index + 1]],\n      options: options300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  });\n  const bw200 = props.totalLine.filter((value, index, arr) => {\n    return value.line === index && value.bw === 200 ? {\n      lat: value.lat,\n      lng: value.lng\n    } : null;\n  }).map((value, index, arr) => {\n    //console.log(arr);\n    return /*#__PURE__*/_jsxDEV(Polyline, {\n      path: [arr[index], arr[index + 1]],\n      options: options200\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  });\n  const bw100 = props.totalLine.filter((value, index, arr) => {\n    return value.line === index && value.bw === 100 ? {\n      lat: value.lat,\n      lng: value.lng\n    } : null;\n  }).map((value, index, arr) => {\n    //console.log(arr);\n    return /*#__PURE__*/_jsxDEV(Polyline, {\n      path: [arr[index], arr[index + 1]],\n      options: options100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  }); // console.log(bw400)\n  // console.log(bw300)\n  // console.log(bw200)\n  // console.log(bw100)\n\n  const handleActiveMarker = marker => {\n    if (marker === activeMarker) {\n      return;\n    }\n\n    setActiveMarker(marker);\n  };\n\n  const handleOnLoad = map => {\n    const bounds = new google.maps.LatLngBounds();\n    props.mapData.forEach(_ref => {\n      let {\n        position\n      } = _ref;\n      return bounds.extend(position);\n    });\n    map.fitBounds(bounds);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [xx, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kinds\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"pop\",\n        src: \"nodepop.png\",\n        alt: \"pop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"PoP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"trunk\",\n        src: \"3.png\",\n        alt: \"trunk\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"ACS Trunk Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"wbn\",\n        src: \"2.png\",\n        alt: \"node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"WBN Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bandwidthLevel\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"linestyle\",\n        src: \"color1.png\",\n        alt: \"bw100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Bronze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"linestyle\",\n        src: \"color2.png\",\n        alt: \"bw200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Silver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"linestyle\",\n        src: \"color3.png\",\n        alt: \"bw300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Gold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"linestyle\",\n        src: \"color4.png\",\n        alt: \"bw400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Platinum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: {\n          width: '1900px',\n          height: '700px',\n          margin: '20px'\n        },\n        center: center,\n        zoom: 13,\n        onClick: () => {\n          setActiveMarker(null);\n        },\n        children: [props.mapData_s.map(value => {\n          //console.log(value);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: value,\n              icon: {\n                url: '2.png',\n                scaledSize: new google.maps.Size(20, 25)\n              },\n              onMouseOver: () => {\n                handleActiveMarker(value.num);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 37\n            }, this), activeMarker === value.num && /*#__PURE__*/_jsxDEV(InfoWindow, {\n              position: {\n                lat: value.lat,\n                lng: value.lng\n              },\n              onCloseClick: () => setActiveMarker(null),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"infowindow\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem info_title\",\n                  children: value.wn_node\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lat : \", value.lat]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lng : \", value.lng]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true);\n        }), props.popData_s.map(value => {\n          //console.log(value);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: value,\n              icon: {\n                url: '1.png',\n                scaledSize: new google.maps.Size(20, 25)\n              },\n              onMouseOver: () => {\n                handleActiveMarker(value.num);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 37\n            }, this), activeMarker === value.num && /*#__PURE__*/_jsxDEV(InfoWindow, {\n              position: {\n                lat: value.lat,\n                lng: value.lng\n              },\n              onCloseClick: () => setActiveMarker(null),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"infowindow\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem info_title\",\n                  children: value.p_node\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lat : \", value.lat]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lng : \", value.lng]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true);\n        }), props.trunk_s.map(value => {\n          //console.log(value);\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Marker, {\n              position: value,\n              icon: {\n                url: '3.png',\n                scaledSize: new google.maps.Size(20, 25)\n              },\n              onMouseOver: () => {\n                handleActiveMarker(value.num);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this), activeMarker === value.num && /*#__PURE__*/_jsxDEV(InfoWindow, {\n              position: {\n                lat: value.lat,\n                lng: value.lng\n              },\n              onCloseClick: () => setActiveMarker(null),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"infowindow\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem info_title\",\n                  children: value.an_node\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lat : \", value.lat]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"infoitem\",\n                  children: [\"lng : \", value.lng]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true);\n        }), bw400, bw300, bw200, bw100]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Testmap, \"asO/RTU+815HqBfy3jKKoWM2Okg=\");\n\n_c = Testmap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Testmap\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Project/smfi/Nodejs/sh_project/myreact2/src/Component/Inventorty/Sites/Testmap.js"],"names":["React","useState","LoadScript","GoogleMap","Marker","InfoWindow","Polyline","Testmap","props","activeMarker","setActiveMarker","center","lat","lng","options400","strokeColor","strokeOpacity","strokeWeight","options300","options200","options100","i","xx","totalLine","map","value","index","arr","line","console","log","bw400","filter","bw","bw300","bw200","bw100","handleActiveMarker","marker","handleOnLoad","bounds","google","maps","LatLngBounds","mapData","forEach","position","extend","fitBounds","width","height","margin","mapData_s","url","scaledSize","Size","num","wn_node","popData_s","p_node","trunk_s","an_node"],"mappings":"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","sourcesContent":["/*global google*/\r\nimport React,{ useState } from 'react';\r\nimport { LoadScript, GoogleMap, Marker, InfoWindow, Polyline } from '@react-google-maps/api';\r\nexport default function Testmap(props) {\r\n    //console.log(props.totalLine);\r\n\r\n    const [activeMarker, setActiveMarker] = useState(null);\r\n\r\n    const center = {\r\n        lat : 37.666169,\r\n        lng  : 128.710769\r\n    };\r\n    const options400 = {\r\n        strokeColor:'yellowgreen',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 8,\r\n    };\r\n    const options300 = {\r\n        strokeColor:'gold',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 6,\r\n    };\r\n    const options200 = {\r\n        strokeColor:'gray',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 4,\r\n    };\r\n    const options100 = {\r\n        strokeColor:'brown',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 2,\r\n    };\r\n    let i = 1;\r\n    const xx = props.totalLine.map((value,index,arr)=>{\r\n        switch(i){\r\n            case value.line: \r\n                console.log(value.line);\r\n                console.log(i);\r\n                console.log(value);\r\n            default :\r\n                console.log('oh no');\r\n        }\r\n    })\r\n\r\n    const bw400 = props.totalLine.filter((value,index,arr)=>{\r\n        //console.log(index+1);\r\n        //console.log(value.line)\r\n        return value.line === index+1 && value.bw === 400 ? {lat : value.lat , lng : value.lng} : null\r\n    }).map((value,index,arr)=>{\r\n        //console.log(arr);\r\n        return (\r\n            <Polyline\r\n                path={[arr[index],arr[index+1]]}\r\n                options={options400}\r\n            />\r\n        );\r\n    })\r\n    const bw300 = props.totalLine.filter((value,index,arr)=>{\r\n        return value.line === index && value.bw === 300 ? {lat : value.lat , lng : value.lng} : null\r\n    }).map((value,index,arr)=>{\r\n        //console.log(arr);\r\n        return (\r\n            <Polyline\r\n                path={[arr[index],arr[index+1]]}\r\n                options={options300}\r\n            />\r\n        );\r\n    })\r\n    const bw200 = props.totalLine.filter((value,index,arr)=>{\r\n        return value.line === index && value.bw === 200 ? {lat : value.lat , lng : value.lng} : null\r\n    }).map((value,index,arr)=>{\r\n        //console.log(arr);\r\n        return (\r\n            <Polyline\r\n                path={[arr[index],arr[index+1]]}\r\n                options={options200}\r\n            />\r\n        )\r\n    })\r\n    const bw100 = props.totalLine.filter((value,index,arr)=>{\r\n        return value.line === index && value.bw === 100 ? {lat : value.lat , lng : value.lng} : null\r\n    }).map((value,index,arr)=>{\r\n        //console.log(arr);\r\n        return (\r\n            <Polyline\r\n                path={[arr[index],arr[index+1]]}\r\n                options={options100}\r\n            />\r\n        )\r\n    })\r\n\r\n    // console.log(bw400)\r\n    // console.log(bw300)\r\n    // console.log(bw200)\r\n    // console.log(bw100)\r\n\r\n\r\n\r\n    const handleActiveMarker = (marker) => {\r\n        if (marker === activeMarker) {\r\n            return;\r\n        }\r\n        setActiveMarker(marker);\r\n    };\r\n\r\n    const handleOnLoad = (map) => {\r\n        const bounds = new google.maps.LatLngBounds();\r\n        props.mapData.forEach(({ position }) => bounds.extend(position));\r\n        map.fitBounds(bounds);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {xx}\r\n            <div className=\"kinds\">\r\n                <img className=\"pop\" src=\"nodepop.png\" alt=\"pop\" />\r\n                <p>PoP</p>\r\n                <img className=\"trunk\" src=\"3.png\" alt=\"trunk\" />\r\n                <p>ACS Trunk Node</p>\r\n                <img className=\"wbn\" src=\"2.png\" alt=\"node\"/>\r\n                <p>WBN Node</p>\r\n            </div>\r\n            <div className=\"bandwidthLevel\">\r\n                <img className=\"linestyle\" src=\"color1.png\" alt=\"bw100\" />\r\n                <p>Bronze</p>\r\n                <img className=\"linestyle\" src=\"color2.png\" alt=\"bw200\" />\r\n                <p>Silver</p>\r\n                <img className=\"linestyle\" src=\"color3.png\" alt=\"bw300\" />\r\n                <p>Gold</p>\r\n                <img className=\"linestyle\" src=\"color4.png\" alt=\"bw400\"/>\r\n                <p>Platinum</p>\r\n            </div>\r\n            <LoadScript googleMapsApiKey=\"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\">\r\n                <GoogleMap\r\n                    mapContainerStyle={{\r\n                        width : '1900px',\r\n                        height : '700px',\r\n                        margin : '20px'\r\n                    }}\r\n                    center={center}\r\n                    zoom={13}\r\n                    onClick={()=>{setActiveMarker(null)}}\r\n                >\r\n                    {\r\n                        props.mapData_s.map((value)=>{\r\n                            //console.log(value);\r\n                            return(\r\n                                <>\r\n                                    <Marker \r\n                                        position={value}\r\n                                        icon={\r\n                                            {\r\n                                                url : '2.png',\r\n                                                scaledSize : new google.maps.Size(20,25),\r\n                                            }\r\n                                        }\r\n                                        onMouseOver={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {activeMarker === value.num && (\r\n                                        <InfoWindow \r\n                                            position={{lat : value.lat , lng : value.lng}}\r\n                                            onCloseClick={() => setActiveMarker(null)}\r\n                                        >\r\n                                            <div className=\"infowindow\">\r\n                                                <p className=\"infoitem info_title\">{value.wn_node}</p>\r\n                                                <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                                <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                            </div>\r\n                                        </InfoWindow>\r\n                                    )}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.popData_s.map(value=>{\r\n                            //console.log(value);\r\n                            return (\r\n                                <>\r\n                                    <Marker \r\n                                        position={value}\r\n                                        icon={\r\n                                            {\r\n                                                url : '1.png',\r\n                                                scaledSize : new google.maps.Size(20,25),\r\n                                            }\r\n                                        }\r\n                                        onMouseOver={() => {handleActiveMarker(value.num)}}\r\n                                    />\r\n                                    {activeMarker === value.num && (\r\n                                        <InfoWindow \r\n                                            position={{lat : value.lat, lng : value.lng}}\r\n                                            onCloseClick={() => setActiveMarker(null)}\r\n                                        >\r\n                                            <div className=\"infowindow\">\r\n                                                <p className=\"infoitem info_title\">{value.p_node}</p>\r\n                                                <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                                <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                            </div>\r\n                                        </InfoWindow>\r\n                                    )}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n                    {\r\n                        props.trunk_s.map(value=>{\r\n                            //console.log(value);\r\n                            return (\r\n                                <>\r\n                                <Marker \r\n                                    position={value}\r\n                                    icon={\r\n                                        {\r\n                                            url : '3.png',\r\n                                            scaledSize : new google.maps.Size(20,25),\r\n                                        }\r\n                                    }\r\n                                    onMouseOver={() => {handleActiveMarker(value.num)}}\r\n                                />\r\n                                {activeMarker === value.num && (\r\n                                    <InfoWindow \r\n                                        position={{lat : value.lat, lng : value.lng}}\r\n                                        onCloseClick={() => setActiveMarker(null)}\r\n                                    >\r\n                                        <div className=\"infowindow\">\r\n                                            <p className=\"infoitem info_title\">{value.an_node}</p>\r\n                                            <p className=\"infoitem\">lat : {value.lat}</p>\r\n                                            <p className=\"infoitem\">lng : {value.lng}</p>\r\n                                        </div>\r\n                                    </InfoWindow>\r\n                                )}\r\n                                </>\r\n                            );\r\n                        })\r\n                    }\r\n\r\n                    {bw400}\r\n                    \r\n                    {bw300}\r\n\r\n                    {bw200}\r\n\r\n                    {bw100}\r\n\r\n                </GoogleMap>\r\n            </LoadScript>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}