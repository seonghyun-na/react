{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Project\\\\smfi\\\\Nodejs\\\\sh_project\\\\myreact2\\\\src\\\\Component\\\\Wbnx1.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport Tabledata from './Tabledata';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Wbnx1 extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      result: [],\n      isLoading: true,\n      errcode: 'Loading...',\n      timestamp: []\n    };\n\n    this.getdata = async () => {\n      console.log(\"Requesting Data!\");\n      await axios.get('http://somweb.cf:8000/wbn-x1-r0').then(data => {\n        console.log('Data Check!');\n        const mydata = data.data.data;\n        return this.setState({\n          data: mydata,\n          isLoading: false\n        });\n      }).catch(() => {\n        alert('SERVER ERROR');\n        this.setState({\n          errcode: '주임님 서버좀...'\n        });\n      });\n    };\n\n    this.gettimer = () => {\n      console.log(\"Time Start!\");\n      let time = new Date();\n      let years = time.getFullYear();\n      let month = time.getMonth();\n      let date = time.getDate();\n      let hours = time.getHours();\n      let minutes = time.getMinutes();\n      let seconds = time.getSeconds();\n      const result = ` : (${hours}:${minutes}:${seconds}) ${years}-${month + 1}-${date}`;\n      return this.setState({\n        result: result\n      });\n    };\n\n    this.getstamp = () => {\n      axios.get('http://somweb.cf:8000/wbn-timestamp').then(response => {\n        const x = response.data.data;\n        console.log('최신 데이터 시간을 업데이트하였습니다.');\n        return this.setState({\n          timestamp: x\n        });\n      }).catch(() => {\n        alert('SERVER ERROR');\n        this.setState({\n          errcode: '주임님 서버좀...'\n        });\n      });\n    };\n\n    this.renderbtn = () => {\n      this.getdata();\n      this.gettimer();\n      this.getstamp();\n      alert('데이터를 새로고침하였습니다.');\n    };\n  }\n\n  componentDidMount() {\n    this.getdata();\n    this.gettimer();\n    this.getstamp();\n  }\n\n  render() {\n    const {\n      data,\n      result,\n      isLoading,\n      errcode,\n      timestamp\n    } = this.state;\n    const tt = timestamp.map(data => {\n      const y = data.timestamp;\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Observed Time : \", y]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this);\n    });\n    const test = data.filter(data => {\n      return data[0] > 20;\n    });\n    console.log(test);\n    console.log(data[0]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loader__text\",\n          children: errcode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spantitle\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Network Node : WBN_X1(R0) \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), tt, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"itembox\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.renderbtn,\n              children: \"Start Time Measued\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: result\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"tableset\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Time Offset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"3\",\n                  children: \"BandWidth(Mbps)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"offset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"IN\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Out\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this), data.map(data => /*#__PURE__*/_jsxDEV(Tabledata, {\n                offset: data.offset,\n                speed_in: data.speed_in,\n                speed_out: data.speed_out,\n                speed_total: data.speed_total\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Wbnx1;","map":{"version":3,"sources":["C:/Users/USER/Desktop/Project/smfi/Nodejs/sh_project/myreact2/src/Component/Wbnx1.js"],"names":["React","Component","axios","Bar","Tabledata","Wbnx1","state","data","result","isLoading","errcode","timestamp","getdata","console","log","get","then","mydata","setState","catch","alert","gettimer","time","Date","years","getFullYear","month","getMonth","date","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","getstamp","response","x","renderbtn","componentDidMount","render","tt","map","y","test","filter","offset","speed_in","speed_out","speed_total"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Tabledata from './Tabledata';\r\n\r\nclass Wbnx1 extends Component {\r\n    state={\r\n        data : [],\r\n        result: [],\r\n        isLoading: true,\r\n        errcode: 'Loading...',\r\n        timestamp: [],\r\n    };\r\n\r\n    getdata = async () =>{\r\n        console.log(\"Requesting Data!\");\r\n        await axios.get('http://somweb.cf:8000/wbn-x1-r0')\r\n        .then((data) => {\r\n            console.log('Data Check!');\r\n            const mydata = data.data.data;\r\n            return this.setState({data:mydata, isLoading: false});\r\n        }).catch(()=>{\r\n            alert('SERVER ERROR');\r\n            this.setState({errcode:'주임님 서버좀...'});\r\n        })\r\n    }\r\n    gettimer = () =>{\r\n        console.log(\"Time Start!\");\r\n\r\n        let time = new Date();\r\n        let years = time.getFullYear();\r\n        let month = time.getMonth();\r\n        let date = time.getDate();\r\n        let hours = time.getHours();\r\n        let minutes = time.getMinutes();\r\n        let seconds = time.getSeconds();\r\n\r\n        const result = ` : (${hours}:${minutes}:${seconds}) ${years}-${month+1}-${date}`;\r\n\r\n        return this.setState({result:result});\r\n    }\r\n    getstamp = () =>{\r\n        axios.get('http://somweb.cf:8000/wbn-timestamp').then(response=>{\r\n            const x = response.data.data;\r\n            console.log('최신 데이터 시간을 업데이트하였습니다.');\r\n            return this.setState({timestamp : x});\r\n        }).catch(()=>{\r\n            alert('SERVER ERROR');\r\n            this.setState({errcode:'주임님 서버좀...'});\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        this.getdata();\r\n        this.gettimer();\r\n        this.getstamp();\r\n    }\r\n    renderbtn = () => {\r\n        this.getdata();\r\n        this.gettimer();\r\n        this.getstamp();\r\n        alert('데이터를 새로고침하였습니다.');\r\n    }\r\n    \r\n    render() {\r\n        const {data, result,isLoading, errcode, timestamp} = this.state;\r\n        const tt = timestamp.map(data=>{\r\n            const y = data.timestamp;\r\n            return (<p>Observed Time : {y}</p>);\r\n        });\r\n        const test = data.filter(data => {\r\n            return data[0] > 20;\r\n        });\r\n        console.log(test);\r\n        console.log(data[0]);\r\n        return (\r\n            <div className=\"table\">\r\n                {isLoading ? <div className=\"loader\">\r\n                    <span className=\"loader__text\">{errcode}</span>\r\n                </div> :\r\n                (\r\n                    <div className=\"container\">\r\n                        <div className=\"spantitle\">\r\n                            <h2> Network Node : WBN_X1(R0) </h2>\r\n                            {tt}\r\n                            <div className=\"itembox\">\r\n                                <button onClick={this.renderbtn}>Start Time Measued</button>\r\n                                <p>{result}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"content\">\r\n\r\n                            <table className=\"tableset\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Time Offset</td>\r\n                                        <td colSpan=\"3\">BandWidth(Mbps)</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>offset</td>\r\n                                        <td>IN</td>\r\n                                        <td>Out</td>\r\n                                        <td>Total</td>\r\n                                    </tr>\r\n                                    {\r\n                                        data.map(data => (\r\n                                            <Tabledata \r\n                                                offset={data.offset}\r\n                                                speed_in={data.speed_in}\r\n                                                speed_out={data.speed_out}\r\n                                                speed_total={data.speed_total}\r\n                                            />\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            \r\n\r\n                        </div>\r\n                    </div>\r\n                )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wbnx1;"]},"metadata":{},"sourceType":"module"}