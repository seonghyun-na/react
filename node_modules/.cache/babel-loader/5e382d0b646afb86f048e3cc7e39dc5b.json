{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Project\\\\smfi\\\\Nodejs\\\\sh_project\\\\myreact2\\\\src\\\\Component\\\\Inventorty\\\\Sites\\\\Map.js\",\n    _s = $RefreshSig$();\n\n/*global google*/\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, InfoWindow, LoadScript, Marker, InfoBox, Polygon, Polyline } from '@react-google-maps/api';\nimport axios from \"axios\";\nimport InfoMap from \"./InfoMap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  _s();\n\n  /* \r\n  (1) Data 가져오기 v\r\n  (2) Google Map 연결 v\r\n  (3) Data에 있는 좌표 추출 v\r\n  (4) 추출한 좌표에 마커를 생성 v\r\n  (5) 마커 사이즈 변경 v\r\n  (6) 마커에 부가정보 넣기\r\n  (7) 선으로 연결\r\n   */\n  const [mapData, setMapData] = useState([]);\n  const [popData, setPopData] = useState([]);\n  const [trunk, setTrunk] = useState([]);\n  const [bandWidth, setBandWidth] = useState([]);\n  useEffect(() => {\n    extraction();\n    extraction2();\n    extraction3();\n    extraction4();\n  }, []);\n  /* 데이터 가져오기 */\n\n  const extraction = async () => {\n    await axios.get('http://somweb.cf:8000/map/wn').then(value => {\n      console.log(value.data.data);\n      setMapData(value.data.data);\n    });\n  };\n\n  const extraction2 = async () => {\n    await axios.get('http://somweb.cf:8000/map/pop').then(value => {\n      console.log(value.data.data);\n      setPopData(value.data.data);\n    });\n  };\n\n  const extraction3 = async () => {\n    await axios.get('http://somweb.cf:8000/map/an').then(value => {\n      console.log(value.data.data);\n      setTrunk(value.data.data);\n    });\n  };\n\n  const extraction4 = async () => {\n    await axios.get('http://somweb.cf:8000/map/bw').then(value => {\n      console.log(value.data.data);\n      setBandWidth(value.data.data);\n    });\n  };\n  /* 좌표 저장 */\n\n  /*const WnlatLng = mapData.map((value)=>{\r\n      return value.lat, value.lng;\r\n  });\r\n    const poplatLng = mapData.map((value)=>{\r\n      return value.lat, value.lng;\r\n  });*/\n\n  /* 버튼 이벤트 */\n\n\n  const onClickbtn = () => {\n    extraction();\n    extraction2();\n    extraction3();\n    extraction4();\n  };\n  /* google map stlye */\n\n\n  const style = {\n    width: '1900px',\n    height: '700px'\n  };\n  /* google map 첫 화면 */\n\n  const center = {\n    lat: 37.57055,\n    lng: 126.97684\n  };\n  /* google map icon */\n\n  function initMap() {\n    const icon = {\n      url: 'pop.png',\n      scaledSize: new google.maps.Size(20, 20)\n    };\n  }\n  /* InfoWindow style */\n\n\n  const canvas = {\n    background: '#fff',\n    padding: 10\n  };\n  /* infoBox options */\n  //const options = { closeBoxURL: '', enableEventPropagation: true };\n\n  /* Polygon options */\n\n  const options = {\n    strokeColor: '#FF0000',\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: false,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    zIndex: 1\n  };\n  /* Polygon path */\n\n  const path = [{\n    lat: 37.56643,\n    lng: 126.97511\n  }, {\n    lat: 37.571339,\n    lng: 126.968173\n  }, {\n    lat: 37.579727,\n    lng: 126.977137\n  }];\n  /* Polygon options2 */\n\n  const options2 = {\n    strokeColor: 'blue',\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: '#FF0000',\n    fillOpacity: 0.35,\n    clickable: false,\n    draggable: false,\n    editable: false,\n    visible: true,\n    radius: 30000,\n    zIndex: 1\n  };\n  /* Polygon path2 */\n\n  const path2 = [{\n    lat: 37.56753,\n    lng: 126.98446\n  }, {\n    lat: 37.57440,\n    lng: 126.98167\n  }, {\n    lat: 37.56839,\n    lng: 126.96137\n  }, {\n    lat: 37.56691,\n    lng: 126.97295\n  }];\n  console.log(mapData);\n  console.log(popData);\n  console.log(trunk);\n  console.log(bandWidth);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(InfoMap, {\n      mapData: mapData,\n      popData: popData,\n      trunk: trunk,\n      bandWidth: bandWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)\n  }, void 0, false) // <div className=\"map\">\n  //     <LoadScript googleMapsApiKey=\"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\">\n  //         <GoogleMap\n  //             mapContainerStyle={style}\n  //             center={center}\n  //             zoom={15}\n  //         >\n  //             {\n  //                 mapData.map(()=>{\n  //                     return (\n  //                         <>\n  //                             <Marker \n  //                                 position={WnlatLng} \n  //                                 icon={initMap}\n  //                                 //onMouseOver={mouseEvent}\n  //                                 onMouseOver={(e)=>{\n  //                                     //console.log(e);\n  //                                 }}\n  //                             />\n  //                             <Polyline\n  //                                 path={path}\n  //                                 options={options}\n  //                             />\n  //                             {/* <InfoBox\n  //                                 options={options}\n  //                                 position={{lat : value.lat , lng : value.lng}}\n  //                             >\n  //                             <div className=\"qwe\" style={{ backgroundColor: 'yellow', opacity: 0.75, padding: 12 }}>\n  //                                 <div style={{ fontSize: 16, fontColor: `#08233B` }}>\n  //                                 Hello, World!\n  //                                 </div>\n  //                             </div>\n  //                             </InfoBox> */}\n  //                             {/* {<InfoWindow\n  //                                 position={{lat : value.lat , lng : value.lng}}\n  //                             >\n  //                                 <div style={canvas}>\n  //                                     <h1>{value.nw_node}</h1>\n  //                                 </div>\n  //                             </InfoWindow>} */}\n  //                         </>\n  //                     )\n  //                 })\n  //             }\n  //             {\n  //                 popData.map(()=>{\n  //                     return(\n  //                         <>\n  //                             <Marker position={poplatLng}/>\n  //                             <Polyline path={path2} options={options2}/>\n  //                         </>\n  //                     );\n  //                 })\n  //             }\n  //         </GoogleMap>\n  //     </LoadScript>\n  //     <button onClick={onClickbtn}>Update</button>\n  // </div>\n  ;\n}\n\n_s(Map, \"eAlbuY0aHjQL6HF6Gk76mswhrV4=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Project/smfi/Nodejs/sh_project/myreact2/src/Component/Inventorty/Sites/Map.js"],"names":["React","useState","useEffect","GoogleMap","InfoWindow","LoadScript","Marker","InfoBox","Polygon","Polyline","axios","InfoMap","Map","mapData","setMapData","popData","setPopData","trunk","setTrunk","bandWidth","setBandWidth","extraction","extraction2","extraction3","extraction4","get","then","value","console","log","data","onClickbtn","style","width","height","center","lat","lng","initMap","icon","url","scaledSize","google","maps","Size","canvas","background","padding","options","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","visible","radius","zIndex","path","options2","path2"],"mappings":"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","sourcesContent":["/*global google*/\r\nimport React,{ useState,useEffect } from \"react\";\r\nimport { GoogleMap,InfoWindow,LoadScript, Marker, InfoBox, Polygon, Polyline} from '@react-google-maps/api';\r\nimport axios from \"axios\";\r\nimport InfoMap from \"./InfoMap\";\r\nfunction Map(){\r\n    \r\n    /* \r\n    (1) Data 가져오기 v\r\n    (2) Google Map 연결 v\r\n    (3) Data에 있는 좌표 추출 v\r\n    (4) 추출한 좌표에 마커를 생성 v\r\n    (5) 마커 사이즈 변경 v\r\n    (6) 마커에 부가정보 넣기\r\n    (7) 선으로 연결\r\n     */\r\n    const [mapData,setMapData] = useState([]);\r\n    const [popData,setPopData] = useState([]);\r\n    const [trunk,setTrunk] = useState([]);\r\n    const [bandWidth,setBandWidth] = useState([]);\r\n\r\n    useEffect(() => {\r\n        extraction();\r\n        extraction2();\r\n        extraction3();\r\n        extraction4();\r\n    },[]);\r\n\r\n    /* 데이터 가져오기 */\r\n    const extraction = async () =>{\r\n        await axios.get('http://somweb.cf:8000/map/wn')\r\n        .then(value=>{\r\n            console.log(value.data.data);\r\n            setMapData(value.data.data);\r\n        })\r\n    };\r\n\r\n    const extraction2 = async () => {\r\n        await axios.get('http://somweb.cf:8000/map/pop')\r\n        .then((value)=>{\r\n            console.log(value.data.data);\r\n            setPopData(value.data.data);\r\n        })\r\n    };\r\n\r\n    const extraction3 = async () =>{\r\n        await axios.get('http://somweb.cf:8000/map/an')\r\n        .then((value)=>{\r\n            console.log(value.data.data);\r\n            setTrunk(value.data.data);\r\n        })\r\n    };\r\n\r\n    const extraction4 = async () =>{\r\n        await axios.get('http://somweb.cf:8000/map/bw')\r\n        .then((value)=>{\r\n            console.log(value.data.data);\r\n            setBandWidth(value.data.data);\r\n        })\r\n    };\r\n\r\n    /* 좌표 저장 */\r\n    /*const WnlatLng = mapData.map((value)=>{\r\n        return value.lat, value.lng;\r\n    });\r\n\r\n    const poplatLng = mapData.map((value)=>{\r\n        return value.lat, value.lng;\r\n    });*/\r\n\r\n    /* 버튼 이벤트 */\r\n    const onClickbtn = () =>{\r\n        extraction();\r\n        extraction2();\r\n        extraction3();\r\n        extraction4();\r\n    };\r\n\r\n    /* google map stlye */\r\n    const style = {\r\n        width : '1900px',\r\n        height : '700px'\r\n    };\r\n\r\n    /* google map 첫 화면 */\r\n    const center = {\r\n        lat : 37.57055,\r\n        lng : 126.97684\r\n    };\r\n\r\n    /* google map icon */\r\n    function initMap() {\r\n        const icon = {\r\n            url : 'pop.png',\r\n            scaledSize : new google.maps.Size(20,20),\r\n        };\r\n    }\r\n\r\n    /* InfoWindow style */\r\n    const canvas = {\r\n        background : '#fff',\r\n        padding: 10\r\n    };\r\n    /* infoBox options */\r\n    //const options = { closeBoxURL: '', enableEventPropagation: true };\r\n    \r\n    /* Polygon options */\r\n    const options = {\r\n        strokeColor: '#FF0000',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 2,\r\n        fillColor: '#FF0000',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 30000,\r\n        zIndex: 1\r\n    };\r\n\r\n    /* Polygon path */\r\n    const path = [\r\n        {lat: 37.56643, lng: 126.97511},\r\n        {lat: 37.571339, lng: 126.968173},\r\n        {lat: 37.579727, lng: 126.977137},\r\n    ];\r\n\r\n    /* Polygon options2 */\r\n    const options2 = {\r\n        strokeColor: 'blue',\r\n        strokeOpacity: 0.8,\r\n        strokeWeight: 2,\r\n        fillColor: '#FF0000',\r\n        fillOpacity: 0.35,\r\n        clickable: false,\r\n        draggable: false,\r\n        editable: false,\r\n        visible: true,\r\n        radius: 30000,\r\n        zIndex: 1\r\n    };\r\n\r\n    /* Polygon path2 */\r\n    const path2 = [\r\n        {lat: 37.56753, lng: 126.98446},\r\n        {lat: 37.57440, lng: 126.98167},\r\n        {lat: 37.56839, lng: 126.96137},\r\n        {lat: 37.56691, lng: 126.97295}\r\n    ];\r\n    console.log(mapData);\r\n    console.log(popData);\r\n    console.log(trunk);\r\n    console.log(bandWidth);\r\n    return (\r\n        <>\r\n            <InfoMap\r\n                mapData={mapData}\r\n                popData={popData}\r\n                trunk={trunk}\r\n                bandWidth={bandWidth}\r\n            />\r\n        </>\r\n        // <div className=\"map\">\r\n        //     <LoadScript googleMapsApiKey=\"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\">\r\n        //         <GoogleMap\r\n        //             mapContainerStyle={style}\r\n        //             center={center}\r\n        //             zoom={15}\r\n        //         >\r\n        //             {\r\n        //                 mapData.map(()=>{\r\n        //                     return (\r\n        //                         <>\r\n        //                             <Marker \r\n        //                                 position={WnlatLng} \r\n        //                                 icon={initMap}\r\n        //                                 //onMouseOver={mouseEvent}\r\n        //                                 onMouseOver={(e)=>{\r\n        //                                     //console.log(e);\r\n        //                                 }}\r\n        //                             />\r\n        //                             <Polyline\r\n        //                                 path={path}\r\n        //                                 options={options}\r\n        //                             />\r\n        //                             {/* <InfoBox\r\n        //                                 options={options}\r\n        //                                 position={{lat : value.lat , lng : value.lng}}\r\n        //                             >\r\n        //                             <div className=\"qwe\" style={{ backgroundColor: 'yellow', opacity: 0.75, padding: 12 }}>\r\n        //                                 <div style={{ fontSize: 16, fontColor: `#08233B` }}>\r\n        //                                 Hello, World!\r\n        //                                 </div>\r\n        //                             </div>\r\n        //                             </InfoBox> */}\r\n        //                             {/* {<InfoWindow\r\n        //                                 position={{lat : value.lat , lng : value.lng}}\r\n        //                             >\r\n        //                                 <div style={canvas}>\r\n        //                                     <h1>{value.nw_node}</h1>\r\n        //                                 </div>\r\n        //                             </InfoWindow>} */}\r\n        //                         </>\r\n        //                     )\r\n        //                 })\r\n        //             }\r\n        //             {\r\n        //                 popData.map(()=>{\r\n        //                     return(\r\n        //                         <>\r\n        //                             <Marker position={poplatLng}/>\r\n        //                             <Polyline path={path2} options={options2}/>\r\n        //                         </>\r\n        //                     );\r\n        //                 })\r\n        //             }\r\n        //         </GoogleMap>\r\n        //     </LoadScript>\r\n        //     <button onClick={onClickbtn}>Update</button>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}