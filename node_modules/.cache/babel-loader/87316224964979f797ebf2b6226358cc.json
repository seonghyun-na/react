{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Project\\\\smfi\\\\Nodejs\\\\sh_project\\\\myreact2\\\\src\\\\Component\\\\Inventorty\\\\Sites\\\\Googlemap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GoogleMap, LoadScript, Marker, Polyline } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Googlemap(_ref) {\n  _s();\n\n  let {\n    totalLine\n  } = _ref;\n  const [activeMarker, setActiveMarker] = useState(null);\n  const google = window.google;\n  const center = {\n    lat: 37.672481,\n    lng: 128.736743\n  };\n  const zoom = 14;\n  const mapSize = {\n    width: '1900px',\n    height: '700px',\n    margin: '20px'\n  };\n  const ifmarker = totalLine.map(value => {\n    if (value.p_node) {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: value,\n        icon: {\n          url: \"nodepop.png\",\n          scaledSize: new window.google.maps.Size(20, 40)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n    } else if (value.an_node) {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: value,\n        icon: {\n          url: \"3.png\",\n          scaledSize: new window.google.maps.Size(20, 40)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this);\n    } else if (value.wn_node) {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: value,\n        icon: {\n          url: \"battery75.png\",\n          scaledSize: new window.google.maps.Size(20, 40)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this);\n    }\n  });\n  const polyLine = totalLine.sort((a, b) => {\n    return a.line - b.line;\n  });\n  const options400 = {\n    strokeColor: 'yellowgreen',\n    strokeOpacity: 0.75,\n    strokeWeight: 8\n  };\n  const options300 = {\n    strokeColor: 'gold',\n    strokeOpacity: 0.75,\n    strokeWeight: 6\n  };\n  const options200 = {\n    strokeColor: 'gray',\n    strokeOpacity: 0.75,\n    strokeWeight: 4\n  };\n  const options100 = {\n    strokeColor: 'brown',\n    strokeOpacity: 0.75,\n    strokeWeight: 2\n  };\n  const bw400 = [];\n  const bw300 = [];\n  const bw200 = [];\n  const bw100 = [];\n  const bandWidth = polyLine.map((value, index, arr) => {\n    if (value.bw === 400) {\n      bw400.push(value);\n    } else if (value.bw === 300) {\n      bw300.push(value);\n    } else if (value.bw === 200) {\n      bw200.push(value);\n    } else if (value.bw === 100) {\n      bw100.push(value);\n    } else {\n      console.log('Err');\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        center: center,\n        zoom: zoom,\n        mapContainerStyle: mapSize,\n        children: [totalLine && ifmarker, bw400.map(value => {\n          return /*#__PURE__*/_jsxDEV(Polyline, {\n            path: bw400,\n            options: options400\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this);\n        }), bw300.map(value => {\n          return /*#__PURE__*/_jsxDEV(Polyline, {\n            path: bw300,\n            options: options300\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this);\n        }), bw200.map(value => {\n          return /*#__PURE__*/_jsxDEV(Polyline, {\n            path: bw200,\n            options: options200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 33\n          }, this);\n        }), bw100.map(value => {\n          return /*#__PURE__*/_jsxDEV(Polyline, {\n            path: bw100,\n            options: options100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Googlemap, \"asO/RTU+815HqBfy3jKKoWM2Okg=\");\n\n_c = Googlemap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Googlemap\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Project/smfi/Nodejs/sh_project/myreact2/src/Component/Inventorty/Sites/Googlemap.js"],"names":["React","useState","GoogleMap","LoadScript","Marker","Polyline","Googlemap","totalLine","activeMarker","setActiveMarker","google","window","center","lat","lng","zoom","mapSize","width","height","margin","ifmarker","map","value","p_node","url","scaledSize","maps","Size","an_node","wn_node","polyLine","sort","a","b","line","options400","strokeColor","strokeOpacity","strokeWeight","options300","options200","options100","bw400","bw300","bw200","bw100","bandWidth","index","arr","bw","push","console","log"],"mappings":"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","sourcesContent":["import React,{ useState } from 'react';\r\nimport { GoogleMap, LoadScript, Marker, Polyline } from '@react-google-maps/api';\r\n\r\nexport default function Googlemap({totalLine}) {\r\n    const [activeMarker, setActiveMarker] = useState(null);\r\n\r\n    const google = window.google;\r\n    const center = { \r\n        lat : 37.672481, \r\n        lng : 128.736743\r\n    };\r\n    const zoom = 14;\r\n    const mapSize = {\r\n        width : '1900px',\r\n        height : '700px',\r\n        margin : '20px'\r\n    };\r\n    \r\n    \r\n    const ifmarker = totalLine.map(value=>{\r\n        if(value.p_node){\r\n            return (\r\n                <Marker \r\n                    position={value}\r\n                    icon={\r\n                        {\r\n                            url : \"nodepop.png\",\r\n                            scaledSize: new window.google.maps.Size(20,40)\r\n                        }\r\n                    }\r\n            />\r\n            )\r\n        }else if(value.an_node){\r\n            return (\r\n                <Marker \r\n                    position={value}\r\n                    icon={\r\n                        {\r\n                            url : \"3.png\",\r\n                            scaledSize: new window.google.maps.Size(20,40)\r\n                        }\r\n                    }\r\n                />\r\n            )\r\n        }else if(value.wn_node){\r\n            return (\r\n                <Marker \r\n                    position={value}\r\n                    icon={\r\n                        {\r\n                            url : \"battery75.png\",\r\n                            scaledSize : new window.google.maps.Size(20,40)\r\n                        }\r\n                    }\r\n                />\r\n            )\r\n        }\r\n    });\r\n\r\n    const polyLine = totalLine.sort((a,b)=>{\r\n        return a.line - b.line;\r\n    });\r\n    \r\n    const options400 = {\r\n        strokeColor:'yellowgreen',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 8,\r\n    };\r\n    const options300 = {\r\n        strokeColor:'gold',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 6,\r\n    };\r\n    const options200 = {\r\n        strokeColor:'gray',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 4,\r\n    };\r\n    const options100 = {\r\n        strokeColor:'brown',\r\n        strokeOpacity: 0.75,\r\n        strokeWeight: 2,\r\n    };\r\n\r\n    const bw400 = [];\r\n    const bw300 = [];\r\n    const bw200 = [];\r\n    const bw100 = [];\r\n\r\n    const bandWidth = polyLine.map((value,index,arr)=>{\r\n        if(value.bw === 400){\r\n            bw400.push(value);\r\n        }else if(value.bw === 300){\r\n            bw300.push(value);\r\n        }else if(value.bw === 200){\r\n            bw200.push(value);\r\n        }else if(value.bw === 100){\r\n            bw100.push(value);\r\n        }else {\r\n            console.log('Err');\r\n        }\r\n    });\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <LoadScript googleMapsApiKey=\"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\">\r\n                <GoogleMap center={center} zoom={zoom} mapContainerStyle={mapSize}>\r\n                    {totalLine && ifmarker}\r\n                    {\r\n                        bw400.map((value)=>{\r\n                            return (\r\n                                <Polyline path={bw400} options={options400}/>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        bw300.map((value)=>{\r\n                            return (\r\n                                <Polyline path={bw300} options={options300}/>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        bw200.map((value)=>{\r\n                            return (\r\n                                <Polyline path={bw200} options={options200}/>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        bw100.map((value)=>{\r\n                            return (\r\n                                <Polyline path={bw100} options={options100}/>\r\n                            )\r\n                        })\r\n                    }\r\n                </GoogleMap>\r\n            </LoadScript>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}