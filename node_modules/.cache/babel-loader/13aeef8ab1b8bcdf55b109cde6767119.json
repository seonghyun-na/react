{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Project\\\\smfi\\\\Nodejs\\\\sh_project\\\\myreact2\\\\src\\\\Component\\\\Inventorty\\\\Sites\\\\Map.js\",\n    _s = $RefreshSig$();\n\n/*global google*/\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport InfoMap from \"./InfoMap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  _s();\n\n  /* \r\n  (1) Data 가져오기 v\r\n  (2) Google Map 연결 v\r\n  (3) Data에 있는 좌표 추출 v\r\n  (4) 추출한 좌표에 마커를 생성 v\r\n  (5) 마커 사이즈 변경 v\r\n  (6) 마커에 부가정보 넣기\r\n  (7) 선으로 연결\r\n   */\n  const [mapData, setMapData] = useState([]);\n  const [popData, setPopData] = useState([]);\n  const [trunk, setTrunk] = useState([]);\n  const [bandWidth, setBandWidth] = useState([]);\n  useEffect(() => {\n    extraction();\n    extraction2();\n    extraction3();\n    extraction4();\n  }, []);\n  /* 데이터 가져오기 */\n\n  const extraction = async () => {\n    await axios.get('http://somweb.cf:8000/map/wn').then(value => {\n      //console.log(value.data.data);\n      setMapData(value.data.data);\n    }).catch(() => {\n      console.log(Error);\n    });\n  };\n\n  const extraction2 = async () => {\n    await axios.get('http://somweb.cf:8000/map/pop').then(value => {\n      //console.log(value.data.data);\n      setPopData(value.data.data);\n    }).catch(() => {\n      console.log(Error);\n    });\n  };\n\n  const extraction3 = async () => {\n    await axios.get('http://somweb.cf:8000/map/an').then(value => {\n      //console.log(value.data.data);\n      setTrunk(value.data.data);\n    }).catch(() => {\n      console.log(Error);\n    });\n  };\n\n  const extraction4 = async () => {\n    await axios.get('http://somweb.cf:8000/map/bw').then(value => {\n      //console.log(value.data.data);\n      setBandWidth(value.data.data);\n    }).catch(() => {\n      console.log(Error);\n    });\n  };\n\n  const mapLine1 = mapData.filter(value => {\n    return value.line === 1;\n  });\n  const mapLine2 = mapData.filter(value => {\n    return value.line === 2;\n  });\n  const mapLine3 = mapData.filter(value => {\n    return value.line === 3;\n  });\n  const mapLine4 = mapData.filter(value => {\n    return value.line === 4;\n  });\n  popData.filter(value => {\n    if (value.line === 1) {\n      return mapLine1.push(value);\n    } else if (value.line === 2) {\n      return mapLine2.push(value);\n    } else if (value.line === 3) {\n      return mapLine3.push(value);\n    } else if (value.line === 4) {\n      return mapLine4.push(value);\n    }\n  });\n  trunk.filter(value => {\n    if (value.line === 1) {\n      return mapLine1.push(value);\n    } else if (value.line === 2) {\n      return mapLine2.push(value);\n    } else if (value.line === 3) {\n      return mapLine3.push(value);\n    } else if (value.line === 4) {\n      return mapLine4.push(value);\n    }\n  });\n  const lineGreen = mapLine1.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const lineblue = mapLine2.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const lineOrange = mapLine3.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  });\n  const lineGray = mapLine4.map(value => {\n    return {\n      lat: value.lat,\n      lng: value.lng\n    };\n  }); //console.log(mapLine1,mapLine2,mapLine3,mapLine4);\n\n  /* 버튼 이벤트 */\n\n  const onClickbtn = () => {\n    extraction();\n    extraction2();\n    extraction3();\n    extraction4();\n    console.log('reset');\n  };\n  /*console.log(mapData);\r\n  console.log(popData);\r\n  console.log(trunk);\r\n  console.log(bandWidth);*/\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InfoMap, {\n      lineGreen: lineGreen,\n      lineblue: lineblue,\n      lineOrange: lineOrange,\n      lineGray: lineGray,\n      mapData: mapData,\n      popData: popData,\n      trunk: trunk,\n      bandWidth: bandWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickbtn,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true) // <div className=\"map\">\n  //     <LoadScript googleMapsApiKey=\"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\">\n  //         <GoogleMap\n  //             mapContainerStyle={style}\n  //             center={center}\n  //             zoom={15}\n  //         >\n  //             {\n  //                 mapData.map(()=>{\n  //                     return (\n  //                         <>\n  //                             <Marker \n  //                                 position={WnlatLng} \n  //                                 icon={initMap}\n  //                                 //onMouseOver={mouseEvent}\n  //                                 onMouseOver={(e)=>{\n  //                                     //console.log(e);\n  //                                 }}\n  //                             />\n  //                             <Polyline\n  //                                 path={path}\n  //                                 options={options}\n  //                             />\n  //                             {/* <InfoBox\n  //                                 options={options}\n  //                                 position={{lat : value.lat , lng : value.lng}}\n  //                             >\n  //                             <div className=\"qwe\" style={{ backgroundColor: 'yellow', opacity: 0.75, padding: 12 }}>\n  //                                 <div style={{ fontSize: 16, fontColor: `#08233B` }}>\n  //                                 Hello, World!\n  //                                 </div>\n  //                             </div>\n  //                             </InfoBox> */}\n  //                             {/* {<InfoWindow\n  //                                 position={{lat : value.lat , lng : value.lng}}\n  //                             >\n  //                                 <div style={canvas}>\n  //                                     <h1>{value.nw_node}</h1>\n  //                                 </div>\n  //                             </InfoWindow>} */}\n  //                         </>\n  //                     )\n  //                 })\n  //             }\n  //             {\n  //                 popData.map(()=>{\n  //                     return(\n  //                         <>\n  //                             <Marker position={poplatLng}/>\n  //                             <Polyline path={path2} options={options2}/>\n  //                         </>\n  //                     );\n  //                 })\n  //             }\n  //         </GoogleMap>\n  //     </LoadScript>\n  //     <button onClick={onClickbtn}>Update</button>\n  // </div>\n  ;\n}\n\n_s(Map, \"eAlbuY0aHjQL6HF6Gk76mswhrV4=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/Project/smfi/Nodejs/sh_project/myreact2/src/Component/Inventorty/Sites/Map.js"],"names":["React","useState","useEffect","axios","InfoMap","Map","mapData","setMapData","popData","setPopData","trunk","setTrunk","bandWidth","setBandWidth","extraction","extraction2","extraction3","extraction4","get","then","value","data","catch","console","log","Error","mapLine1","filter","line","mapLine2","mapLine3","mapLine4","push","lineGreen","map","lat","lng","lineblue","lineOrange","lineGray","onClickbtn"],"mappings":"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","sourcesContent":["/*global google*/\r\nimport React,{ useState,useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport InfoMap from \"./InfoMap\";\r\nfunction Map(){\r\n    \r\n    /* \r\n    (1) Data 가져오기 v\r\n    (2) Google Map 연결 v\r\n    (3) Data에 있는 좌표 추출 v\r\n    (4) 추출한 좌표에 마커를 생성 v\r\n    (5) 마커 사이즈 변경 v\r\n    (6) 마커에 부가정보 넣기\r\n    (7) 선으로 연결\r\n     */\r\n    const [mapData,setMapData] = useState([]);\r\n    const [popData,setPopData] = useState([]);\r\n    const [trunk,setTrunk] = useState([]);\r\n    const [bandWidth,setBandWidth] = useState([]);\r\n\r\n    useEffect(() => {\r\n        extraction();\r\n        extraction2();\r\n        extraction3();\r\n        extraction4();\r\n    },[]);\r\n\r\n    /* 데이터 가져오기 */\r\n    const extraction = async () =>{\r\n        await axios.get('http://somweb.cf:8000/map/wn')\r\n        .then(value=>{\r\n            //console.log(value.data.data);\r\n            setMapData(value.data.data);\r\n        }).catch(()=>{\r\n            console.log(Error);\r\n        })\r\n    };\r\n\r\n    const extraction2 = async () => {\r\n        await axios.get('http://somweb.cf:8000/map/pop')\r\n        .then((value)=>{\r\n            //console.log(value.data.data);\r\n            setPopData(value.data.data);\r\n        }).catch(()=>{\r\n            console.log(Error);\r\n        })\r\n    };\r\n\r\n    const extraction3 = async () =>{\r\n        await axios.get('http://somweb.cf:8000/map/an')\r\n        .then((value)=>{\r\n            //console.log(value.data.data);\r\n            setTrunk(value.data.data);\r\n        }).catch(()=>{\r\n            console.log(Error);\r\n        })\r\n    };\r\n\r\n    const extraction4 = async () =>{\r\n        await axios.get('http://somweb.cf:8000/map/bw')\r\n        .then((value)=>{\r\n            //console.log(value.data.data);\r\n            setBandWidth(value.data.data);\r\n        }).catch(()=>{\r\n            console.log(Error);\r\n        })\r\n    };\r\n\r\n    const mapLine1 = mapData.filter((value)=>{\r\n        return value.line === 1;\r\n    });\r\n    const mapLine2 = mapData.filter((value)=>{\r\n        return value.line === 2;\r\n    });\r\n    const mapLine3 = mapData.filter((value)=>{\r\n        return value.line === 3;\r\n    });\r\n    const mapLine4 = mapData.filter((value)=>{\r\n        return value.line === 4;\r\n    });\r\n\r\n    popData.filter((value)=>{\r\n        if(value.line === 1){\r\n            return mapLine1.push(value);\r\n        }else if(value.line === 2){\r\n            return mapLine2.push(value);\r\n        }else if(value.line === 3){\r\n            return mapLine3.push(value);\r\n        }else if(value.line === 4){\r\n            return mapLine4.push(value);\r\n        }\r\n    });\r\n\r\n    trunk.filter((value)=>{\r\n        if(value.line === 1){\r\n            return mapLine1.push(value);\r\n        }else if(value.line === 2){\r\n            return mapLine2.push(value);\r\n        }else if(value.line === 3){\r\n            return mapLine3.push(value);\r\n        }else if(value.line === 4){\r\n            return mapLine4.push(value);\r\n        }\r\n    });\r\n\r\n    const lineGreen = mapLine1.map((value)=>{\r\n        return {lat : value.lat , lng : value.lng};\r\n    });\r\n    const lineblue = mapLine2.map((value)=>{\r\n        return {lat : value.lat , lng : value.lng};\r\n    });\r\n    const lineOrange = mapLine3.map((value)=>{\r\n        return {lat : value.lat , lng : value.lng};\r\n    });\r\n    const lineGray = mapLine4.map((value)=>{\r\n        return {lat : value.lat , lng : value.lng};\r\n    });\r\n\r\n    //console.log(mapLine1,mapLine2,mapLine3,mapLine4);\r\n\r\n    /* 버튼 이벤트 */\r\n    const onClickbtn = () =>{\r\n        extraction();\r\n        extraction2();\r\n        extraction3();\r\n        extraction4();\r\n        console.log('reset');\r\n    };\r\n\r\n    /*console.log(mapData);\r\n    console.log(popData);\r\n    console.log(trunk);\r\n    console.log(bandWidth);*/\r\n    return (\r\n        <>\r\n            <InfoMap\r\n                lineGreen={lineGreen}\r\n                lineblue={lineblue}\r\n                lineOrange={lineOrange}\r\n                lineGray={lineGray}\r\n                mapData={mapData}\r\n                popData={popData}\r\n                trunk={trunk}\r\n                bandWidth={bandWidth}\r\n            />\r\n            {/* <InfoMap\r\n                mapData={mapData}\r\n                popData={popData}\r\n                trunk={trunk}\r\n                bandWidth={bandWidth}\r\n            /> */}\r\n            <button onClick={onClickbtn}>Update</button>\r\n        </>\r\n        // <div className=\"map\">\r\n        //     <LoadScript googleMapsApiKey=\"AIzaSyDevvetng60XedeOqk-qW9TF-XBNQsyxdE\">\r\n        //         <GoogleMap\r\n        //             mapContainerStyle={style}\r\n        //             center={center}\r\n        //             zoom={15}\r\n        //         >\r\n        //             {\r\n        //                 mapData.map(()=>{\r\n        //                     return (\r\n        //                         <>\r\n        //                             <Marker \r\n        //                                 position={WnlatLng} \r\n        //                                 icon={initMap}\r\n        //                                 //onMouseOver={mouseEvent}\r\n        //                                 onMouseOver={(e)=>{\r\n        //                                     //console.log(e);\r\n        //                                 }}\r\n        //                             />\r\n        //                             <Polyline\r\n        //                                 path={path}\r\n        //                                 options={options}\r\n        //                             />\r\n        //                             {/* <InfoBox\r\n        //                                 options={options}\r\n        //                                 position={{lat : value.lat , lng : value.lng}}\r\n        //                             >\r\n        //                             <div className=\"qwe\" style={{ backgroundColor: 'yellow', opacity: 0.75, padding: 12 }}>\r\n        //                                 <div style={{ fontSize: 16, fontColor: `#08233B` }}>\r\n        //                                 Hello, World!\r\n        //                                 </div>\r\n        //                             </div>\r\n        //                             </InfoBox> */}\r\n        //                             {/* {<InfoWindow\r\n        //                                 position={{lat : value.lat , lng : value.lng}}\r\n        //                             >\r\n        //                                 <div style={canvas}>\r\n        //                                     <h1>{value.nw_node}</h1>\r\n        //                                 </div>\r\n        //                             </InfoWindow>} */}\r\n        //                         </>\r\n        //                     )\r\n        //                 })\r\n        //             }\r\n        //             {\r\n        //                 popData.map(()=>{\r\n        //                     return(\r\n        //                         <>\r\n        //                             <Marker position={poplatLng}/>\r\n        //                             <Polyline path={path2} options={options2}/>\r\n        //                         </>\r\n        //                     );\r\n        //                 })\r\n        //             }\r\n        //         </GoogleMap>\r\n        //     </LoadScript>\r\n        //     <button onClick={onClickbtn}>Update</button>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}